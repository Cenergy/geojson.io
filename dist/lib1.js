/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./dist/d3.js":
/*!********************!*\
  !*** ./dist/d3.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(){\r\n  var d3 = {version: \"3.4.11\"}; // semver\r\nd3.entries = function(map) {\r\n  var entries = [];\r\n  for (var key in map) entries.push({key: key, value: map[key]});\r\n  return entries;\r\n};\r\nfunction d3_class(ctor, properties) {\r\n  try {\r\n    for (var key in properties) {\r\n      Object.defineProperty(ctor.prototype, key, {\r\n        value: properties[key],\r\n        enumerable: false\r\n      });\r\n    }\r\n  } catch (e) {\r\n    ctor.prototype = properties;\r\n  }\r\n}\r\n\r\nd3.map = function(object) {\r\n  var map = new d3_Map;\r\n  if (object instanceof d3_Map) object.forEach(function(key, value) { map.set(key, value); });\r\n  else for (var key in object) map.set(key, object[key]);\r\n  return map;\r\n};\r\n\r\nfunction d3_Map() {}\r\n\r\nd3_class(d3_Map, {\r\n  has: d3_map_has,\r\n  get: function(key) {\r\n    return this[d3_map_prefix + key];\r\n  },\r\n  set: function(key, value) {\r\n    return this[d3_map_prefix + key] = value;\r\n  },\r\n  remove: d3_map_remove,\r\n  keys: d3_map_keys,\r\n  values: function() {\r\n    var values = [];\r\n    this.forEach(function(key, value) { values.push(value); });\r\n    return values;\r\n  },\r\n  entries: function() {\r\n    var entries = [];\r\n    this.forEach(function(key, value) { entries.push({key: key, value: value}); });\r\n    return entries;\r\n  },\r\n  size: d3_map_size,\r\n  empty: d3_map_empty,\r\n  forEach: function(f) {\r\n    for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) f.call(this, key.substring(1), this[key]);\r\n  }\r\n});\r\n\r\nvar d3_map_prefix = \"\\0\", // prevent collision with built-ins\r\n    d3_map_prefixCode = d3_map_prefix.charCodeAt(0);\r\n\r\nfunction d3_map_has(key) {\r\n  return d3_map_prefix + key in this;\r\n}\r\n\r\nfunction d3_map_remove(key) {\r\n  key = d3_map_prefix + key;\r\n  return key in this && delete this[key];\r\n}\r\n\r\nfunction d3_map_keys() {\r\n  var keys = [];\r\n  this.forEach(function(key) { keys.push(key); });\r\n  return keys;\r\n}\r\n\r\nfunction d3_map_size() {\r\n  var size = 0;\r\n  for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) ++size;\r\n  return size;\r\n}\r\n\r\nfunction d3_map_empty() {\r\n  for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) return false;\r\n  return true;\r\n}\r\n\r\nd3.set = function(array) {\r\n  var set = new d3_Set;\r\n  if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\r\n  return set;\r\n};\r\n\r\nfunction d3_Set() {}\r\n\r\nd3_class(d3_Set, {\r\n  has: d3_map_has,\r\n  add: function(value) {\r\n    this[d3_map_prefix + value] = true;\r\n    return value;\r\n  },\r\n  remove: function(value) {\r\n    value = d3_map_prefix + value;\r\n    return value in this && delete this[value];\r\n  },\r\n  values: d3_map_keys,\r\n  size: d3_map_size,\r\n  empty: d3_map_empty,\r\n  forEach: function(f) {\r\n    for (var value in this) if (value.charCodeAt(0) === d3_map_prefixCode) f.call(this, value.substring(1));\r\n  }\r\n});\r\nd3.pairs = function(array) {\r\n  var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\r\n  while (i < n) pairs[i] = [p0 = p1, p1 = array[++i]];\r\n  return pairs;\r\n};\r\nvar abs = Math.abs;\r\n\r\nd3.range = function(start, stop, step) {\r\n  if (arguments.length < 3) {\r\n    step = 1;\r\n    if (arguments.length < 2) {\r\n      stop = start;\r\n      start = 0;\r\n    }\r\n  }\r\n  if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\r\n  var range = [],\r\n       k = d3_range_integerScale(abs(step)),\r\n       i = -1,\r\n       j;\r\n  start *= k, stop *= k, step *= k;\r\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k);\r\n  else while ((j = start + step * ++i) < stop) range.push(j / k);\r\n  return range;\r\n};\r\n\r\nfunction d3_range_integerScale(x) {\r\n  var k = 1;\r\n  while (x * k % 1) k *= 10;\r\n  return k;\r\n}\r\nvar d3_arraySlice = [].slice,\r\n    d3_array = function(list) { return d3_arraySlice.call(list); }; // conversion for NodeLists\r\n\r\nvar d3_document = document,\r\n    d3_documentElement = d3_document.documentElement,\r\n    d3_window = window;\r\n\r\n// Redefine d3_array if the browser doesn’t support slice-based conversion.\r\ntry {\r\n  d3_array(d3_documentElement.childNodes)[0].nodeType;\r\n} catch(e) {\r\n  d3_array = function(list) {\r\n    var i = list.length, array = new Array(i);\r\n    while (i--) array[i] = list[i];\r\n    return array;\r\n  };\r\n}\r\n// Copies a variable number of methods from source to target.\r\nd3.rebind = function(target, source) {\r\n  var i = 1, n = arguments.length, method;\r\n  while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\r\n  return target;\r\n};\r\n\r\n// Method is assumed to be a standard D3 getter-setter:\r\n// If passed with no arguments, gets the value.\r\n// If passed with arguments, sets the value and returns the target.\r\nfunction d3_rebind(target, source, method) {\r\n  return function() {\r\n    var value = method.apply(source, arguments);\r\n    return value === source ? target : value;\r\n  };\r\n}\r\n\r\nfunction d3_vendorSymbol(object, name) {\r\n  if (name in object) return name;\r\n  name = name.charAt(0).toUpperCase() + name.substring(1);\r\n  for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\r\n    var prefixName = d3_vendorPrefixes[i] + name;\r\n    if (prefixName in object) return prefixName;\r\n  }\r\n}\r\n\r\nvar d3_vendorPrefixes = [\"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\"];\r\nfunction d3_noop() {}\r\n\r\nd3.dispatch = function() {\r\n  var dispatch = new d3_dispatch,\r\n      i = -1,\r\n      n = arguments.length;\r\n  while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\r\n  return dispatch;\r\n};\r\n\r\nfunction d3_dispatch() {}\r\n\r\nd3_dispatch.prototype.on = function(type, listener) {\r\n  var i = type.indexOf(\".\"),\r\n      name = \"\";\r\n\r\n  // Extract optional namespace, e.g., \"click.foo\"\r\n  if (i >= 0) {\r\n    name = type.substring(i + 1);\r\n    type = type.substring(0, i);\r\n  }\r\n\r\n  if (type) return arguments.length < 2\r\n      ? this[type].on(name)\r\n      : this[type].on(name, listener);\r\n\r\n  if (arguments.length === 2) {\r\n    if (listener == null) for (type in this) {\r\n      if (this.hasOwnProperty(type)) this[type].on(name, null);\r\n    }\r\n    return this;\r\n  }\r\n};\r\n\r\nfunction d3_dispatch_event(dispatch) {\r\n  var listeners = [],\r\n      listenerByName = new d3_Map;\r\n\r\n  function event() {\r\n    var z = listeners, // defensive reference\r\n        i = -1,\r\n        n = z.length,\r\n        l;\r\n    while (++i < n) if (l = z[i].on) l.apply(this, arguments);\r\n    return dispatch;\r\n  }\r\n\r\n  event.on = function(name, listener) {\r\n    var l = listenerByName.get(name),\r\n        i;\r\n\r\n    // return the current listener, if any\r\n    if (arguments.length < 2) return l && l.on;\r\n\r\n    // remove the old listener, if any (with copy-on-write)\r\n    if (l) {\r\n      l.on = null;\r\n      listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\r\n      listenerByName.remove(name);\r\n    }\r\n\r\n    // add the new listener, if any\r\n    if (listener) listeners.push(listenerByName.set(name, {on: listener}));\r\n\r\n    return dispatch;\r\n  };\r\n\r\n  return event;\r\n}\r\n\r\nd3.event = null;\r\n\r\nfunction d3_eventPreventDefault() {\r\n  d3.event.preventDefault();\r\n}\r\n\r\nfunction d3_eventSource() {\r\n  var e = d3.event, s;\r\n  while (s = e.sourceEvent) e = s;\r\n  return e;\r\n}\r\n\r\n// Like d3.dispatch, but for custom events abstracting native UI events. These\r\n// events have a target component (such as a brush), a target element (such as\r\n// the svg:g element containing the brush) and the standard arguments `d` (the\r\n// target element's data) and `i` (the selection index of the target element).\r\nfunction d3_eventDispatch(target) {\r\n  var dispatch = new d3_dispatch,\r\n      i = 0,\r\n      n = arguments.length;\r\n\r\n  while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\r\n\r\n  // Creates a dispatch context for the specified `thiz` (typically, the target\r\n  // DOM element that received the source event) and `argumentz` (typically, the\r\n  // data `d` and index `i` of the target element). The returned function can be\r\n  // used to dispatch an event to any registered listeners; the function takes a\r\n  // single argument as input, being the event to dispatch. The event must have\r\n  // a \"type\" attribute which corresponds to a type registered in the\r\n  // constructor. This context will automatically populate the \"sourceEvent\" and\r\n  // \"target\" attributes of the event, as well as setting the `d3.event` global\r\n  // for the duration of the notification.\r\n  dispatch.of = function(thiz, argumentz) {\r\n    return function(e1) {\r\n      try {\r\n        var e0 =\r\n        e1.sourceEvent = d3.event;\r\n        e1.target = target;\r\n        d3.event = e1;\r\n        dispatch[e1.type].apply(thiz, argumentz);\r\n      } finally {\r\n        d3.event = e0;\r\n      }\r\n    };\r\n  };\r\n\r\n  return dispatch;\r\n}\r\nd3.requote = function(s) {\r\n  return s.replace(d3_requote_re, \"\\\\$&\");\r\n};\r\n\r\nvar d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\r\nvar d3_subclass = {}.__proto__?\r\n\r\n// Until ECMAScript supports array subclassing, prototype injection works well.\r\nfunction(object, prototype) {\r\n  object.__proto__ = prototype;\r\n}:\r\n\r\n// And if your browser doesn't support __proto__, we'll use direct extension.\r\nfunction(object, prototype) {\r\n  for (var property in prototype) object[property] = prototype[property];\r\n};\r\n\r\nfunction d3_selection(groups) {\r\n  d3_subclass(groups, d3_selectionPrototype);\r\n  return groups;\r\n}\r\n\r\nvar d3_select = function(s, n) { return n.querySelector(s); },\r\n    d3_selectAll = function(s, n) { return n.querySelectorAll(s); },\r\n    d3_selectMatcher = d3_documentElement.matches || d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")],\r\n    d3_selectMatches = function(n, s) { return d3_selectMatcher.call(n, s); };\r\n\r\n// Prefer Sizzle, if available.\r\nif (typeof Sizzle === \"function\") {\r\n  d3_select = function(s, n) { return Sizzle(s, n)[0] || null; };\r\n  d3_selectAll = Sizzle;\r\n  d3_selectMatches = Sizzle.matchesSelector;\r\n}\r\n\r\nd3.selection = function() {\r\n  return d3_selectionRoot;\r\n};\r\n\r\nvar d3_selectionPrototype = d3.selection.prototype = [];\r\n\r\n\r\nd3_selectionPrototype.select = function(selector) {\r\n  var subgroups = [],\r\n      subgroup,\r\n      subnode,\r\n      group,\r\n      node;\r\n\r\n  selector = d3_selection_selector(selector);\r\n\r\n  for (var j = -1, m = this.length; ++j < m;) {\r\n    subgroups.push(subgroup = []);\r\n    subgroup.parentNode = (group = this[j]).parentNode;\r\n    for (var i = -1, n = group.length; ++i < n;) {\r\n      if (node = group[i]) {\r\n        subgroup.push(subnode = selector.call(node, node.__data__, i, j));\r\n        if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\r\n      } else {\r\n        subgroup.push(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  return d3_selection(subgroups);\r\n};\r\n\r\nfunction d3_selection_selector(selector) {\r\n  return typeof selector === \"function\" ? selector : function() {\r\n    return d3_select(selector, this);\r\n  };\r\n}\r\n\r\nd3_selectionPrototype.selectAll = function(selector) {\r\n  var subgroups = [],\r\n      subgroup,\r\n      node;\r\n\r\n  selector = d3_selection_selectorAll(selector);\r\n\r\n  for (var j = -1, m = this.length; ++j < m;) {\r\n    for (var group = this[j], i = -1, n = group.length; ++i < n;) {\r\n      if (node = group[i]) {\r\n        subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\r\n        subgroup.parentNode = node;\r\n      }\r\n    }\r\n  }\r\n\r\n  return d3_selection(subgroups);\r\n};\r\n\r\nfunction d3_selection_selectorAll(selector) {\r\n  return typeof selector === \"function\" ? selector : function() {\r\n    return d3_selectAll(selector, this);\r\n  };\r\n}\r\nvar d3_nsPrefix = {\r\n  svg: \"http://www.w3.org/2000/svg\",\r\n  xhtml: \"http://www.w3.org/1999/xhtml\",\r\n  xlink: \"http://www.w3.org/1999/xlink\",\r\n  xml: \"http://www.w3.org/XML/1998/namespace\",\r\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\r\n};\r\n\r\nd3.ns = {\r\n  prefix: d3_nsPrefix,\r\n  qualify: function(name) {\r\n    var i = name.indexOf(\":\"),\r\n        prefix = name;\r\n    if (i >= 0) {\r\n      prefix = name.substring(0, i);\r\n      name = name.substring(i + 1);\r\n    }\r\n    return d3_nsPrefix.hasOwnProperty(prefix)\r\n        ? {space: d3_nsPrefix[prefix], local: name}\r\n        : name;\r\n  }\r\n};\r\n\r\nd3_selectionPrototype.attr = function(name, value) {\r\n  if (arguments.length < 2) {\r\n\r\n    // For attr(string), return the attribute value for the first node.\r\n    if (typeof name === \"string\") {\r\n      var node = this.node();\r\n      name = d3.ns.qualify(name);\r\n      return name.local\r\n          ? node.getAttributeNS(name.space, name.local)\r\n          : node.getAttribute(name);\r\n    }\r\n\r\n    // For attr(object), the object specifies the names and values of the\r\n    // attributes to set or remove. The values may be functions that are\r\n    // evaluated for each element.\r\n    for (value in name) this.each(d3_selection_attr(value, name[value]));\r\n    return this;\r\n  }\r\n\r\n  return this.each(d3_selection_attr(name, value));\r\n};\r\n\r\nfunction d3_selection_attr(name, value) {\r\n  name = d3.ns.qualify(name);\r\n\r\n  // For attr(string, null), remove the attribute with the specified name.\r\n  function attrNull() {\r\n    this.removeAttribute(name);\r\n  }\r\n  function attrNullNS() {\r\n    this.removeAttributeNS(name.space, name.local);\r\n  }\r\n\r\n  // For attr(string, string), set the attribute with the specified name.\r\n  function attrConstant() {\r\n    this.setAttribute(name, value);\r\n  }\r\n  function attrConstantNS() {\r\n    this.setAttributeNS(name.space, name.local, value);\r\n  }\r\n\r\n  // For attr(string, function), evaluate the function for each element, and set\r\n  // or remove the attribute as appropriate.\r\n  function attrFunction() {\r\n    var x = value.apply(this, arguments);\r\n    if (x == null) this.removeAttribute(name);\r\n    else this.setAttribute(name, x);\r\n  }\r\n  function attrFunctionNS() {\r\n    var x = value.apply(this, arguments);\r\n    if (x == null) this.removeAttributeNS(name.space, name.local);\r\n    else this.setAttributeNS(name.space, name.local, x);\r\n  }\r\n\r\n  return value == null\r\n      ? (name.local ? attrNullNS : attrNull) : (typeof value === \"function\"\r\n      ? (name.local ? attrFunctionNS : attrFunction)\r\n      : (name.local ? attrConstantNS : attrConstant));\r\n}\r\nfunction d3_collapse(s) {\r\n  return s.trim().replace(/\\s+/g, \" \");\r\n}\r\n\r\nd3_selectionPrototype.classed = function(name, value) {\r\n  if (arguments.length < 2) {\r\n\r\n    // For classed(string), return true only if the first node has the specified\r\n    // class or classes. Note that even if the browser supports DOMTokenList, it\r\n    // probably doesn't support it on SVG elements (which can be animated).\r\n    if (typeof name === \"string\") {\r\n      var node = this.node(),\r\n          n = (name = d3_selection_classes(name)).length,\r\n          i = -1;\r\n      if (value = node.classList) {\r\n        while (++i < n) if (!value.contains(name[i])) return false;\r\n      } else {\r\n        value = node.getAttribute(\"class\");\r\n        while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    // For classed(object), the object specifies the names of classes to add or\r\n    // remove. The values may be functions that are evaluated for each element.\r\n    for (value in name) this.each(d3_selection_classed(value, name[value]));\r\n    return this;\r\n  }\r\n\r\n  // Otherwise, both a name and a value are specified, and are handled as below.\r\n  return this.each(d3_selection_classed(name, value));\r\n};\r\n\r\nfunction d3_selection_classedRe(name) {\r\n  return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\r\n}\r\n\r\nfunction d3_selection_classes(name) {\r\n  return (name + \"\").trim().split(/^|\\s+/);\r\n}\r\n\r\n// Multiple class names are allowed (e.g., \"foo bar\").\r\nfunction d3_selection_classed(name, value) {\r\n  name = d3_selection_classes(name).map(d3_selection_classedName);\r\n  var n = name.length;\r\n\r\n  function classedConstant() {\r\n    var i = -1;\r\n    while (++i < n) name[i](this, value);\r\n  }\r\n\r\n  // When the value is a function, the function is still evaluated only once per\r\n  // element even if there are multiple class names.\r\n  function classedFunction() {\r\n    var i = -1, x = value.apply(this, arguments);\r\n    while (++i < n) name[i](this, x);\r\n  }\r\n\r\n  return typeof value === \"function\"\r\n      ? classedFunction\r\n      : classedConstant;\r\n}\r\n\r\nfunction d3_selection_classedName(name) {\r\n  var re = d3_selection_classedRe(name);\r\n  return function(node, value) {\r\n    if (c = node.classList) return value ? c.add(name) : c.remove(name);\r\n    var c = node.getAttribute(\"class\") || \"\";\r\n    if (value) {\r\n      re.lastIndex = 0;\r\n      if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\r\n    } else {\r\n      node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\r\n    }\r\n  };\r\n}\r\n\r\nd3_selectionPrototype.style = function(name, value, priority) {\r\n  var n = arguments.length;\r\n  if (n < 3) {\r\n\r\n    // For style(object) or style(object, string), the object specifies the\r\n    // names and values of the attributes to set or remove. The values may be\r\n    // functions that are evaluated for each element. The optional string\r\n    // specifies the priority.\r\n    if (typeof name !== \"string\") {\r\n      if (n < 2) value = \"\";\r\n      for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\r\n      return this;\r\n    }\r\n\r\n    // For style(string), return the computed style value for the first node.\r\n    if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\r\n\r\n    // For style(string, string) or style(string, function), use the default\r\n    // priority. The priority is ignored for style(string, null).\r\n    priority = \"\";\r\n  }\r\n\r\n  // Otherwise, a name, value and priority are specified, and handled as below.\r\n  return this.each(d3_selection_style(name, value, priority));\r\n};\r\n\r\nfunction d3_selection_style(name, value, priority) {\r\n\r\n  // For style(name, null) or style(name, null, priority), remove the style\r\n  // property with the specified name. The priority is ignored.\r\n  function styleNull() {\r\n    this.style.removeProperty(name);\r\n  }\r\n\r\n  // For style(name, string) or style(name, string, priority), set the style\r\n  // property with the specified name, using the specified priority.\r\n  function styleConstant() {\r\n    this.style.setProperty(name, value, priority);\r\n  }\r\n\r\n  // For style(name, function) or style(name, function, priority), evaluate the\r\n  // function for each element, and set or remove the style property as\r\n  // appropriate. When setting, use the specified priority.\r\n  function styleFunction() {\r\n    var x = value.apply(this, arguments);\r\n    if (x == null) this.style.removeProperty(name);\r\n    else this.style.setProperty(name, x, priority);\r\n  }\r\n\r\n  return value == null\r\n      ? styleNull : (typeof value === \"function\"\r\n      ? styleFunction : styleConstant);\r\n}\r\n\r\nd3_selectionPrototype.property = function(name, value) {\r\n  if (arguments.length < 2) {\r\n\r\n    // For property(string), return the property value for the first node.\r\n    if (typeof name === \"string\") return this.node()[name];\r\n\r\n    // For property(object), the object specifies the names and values of the\r\n    // properties to set or remove. The values may be functions that are\r\n    // evaluated for each element.\r\n    for (value in name) this.each(d3_selection_property(value, name[value]));\r\n    return this;\r\n  }\r\n\r\n  // Otherwise, both a name and a value are specified, and are handled as below.\r\n  return this.each(d3_selection_property(name, value));\r\n};\r\n\r\nfunction d3_selection_property(name, value) {\r\n\r\n  // For property(name, null), remove the property with the specified name.\r\n  function propertyNull() {\r\n    delete this[name];\r\n  }\r\n\r\n  // For property(name, string), set the property with the specified name.\r\n  function propertyConstant() {\r\n    this[name] = value;\r\n  }\r\n\r\n  // For property(name, function), evaluate the function for each element, and\r\n  // set or remove the property as appropriate.\r\n  function propertyFunction() {\r\n    var x = value.apply(this, arguments);\r\n    if (x == null) delete this[name];\r\n    else this[name] = x;\r\n  }\r\n\r\n  return value == null\r\n      ? propertyNull : (typeof value === \"function\"\r\n      ? propertyFunction : propertyConstant);\r\n}\r\n\r\nd3_selectionPrototype.text = function(value) {\r\n  return arguments.length\r\n      ? this.each(typeof value === \"function\"\r\n      ? function() { var v = value.apply(this, arguments); this.textContent = v == null ? \"\" : v; } : value == null\r\n      ? function() { this.textContent = \"\"; }\r\n      : function() { this.textContent = value; })\r\n      : this.node().textContent;\r\n};\r\n\r\nd3_selectionPrototype.html = function(value) {\r\n  return arguments.length\r\n      ? this.each(typeof value === \"function\"\r\n      ? function() { var v = value.apply(this, arguments); this.innerHTML = v == null ? \"\" : v; } : value == null\r\n      ? function() { this.innerHTML = \"\"; }\r\n      : function() { this.innerHTML = value; })\r\n      : this.node().innerHTML;\r\n};\r\n\r\nd3_selectionPrototype.append = function(name) {\r\n  name = d3_selection_creator(name);\r\n  return this.select(function() {\r\n    return this.appendChild(name.apply(this, arguments));\r\n  });\r\n};\r\n\r\nfunction d3_selection_creator(name) {\r\n  return typeof name === \"function\" ? name\r\n      : (name = d3.ns.qualify(name)).local ? function() { return this.ownerDocument.createElementNS(name.space, name.local); }\r\n      : function() { return this.ownerDocument.createElementNS(this.namespaceURI, name); };\r\n}\r\n\r\nd3_selectionPrototype.insert = function(name, before) {\r\n  name = d3_selection_creator(name);\r\n  before = d3_selection_selector(before);\r\n  return this.select(function() {\r\n    return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\r\n  });\r\n};\r\n\r\n// TODO remove(selector)?\r\n// TODO remove(node)?\r\n// TODO remove(function)?\r\nd3_selectionPrototype.remove = function() {\r\n  return this.each(function() {\r\n    var parent = this.parentNode;\r\n    if (parent) parent.removeChild(this);\r\n  });\r\n};\r\n\r\nd3_selectionPrototype.data = function(value, key) {\r\n  var i = -1,\r\n      n = this.length,\r\n      group,\r\n      node;\r\n\r\n  // If no value is specified, return the first value.\r\n  if (!arguments.length) {\r\n    value = new Array(n = (group = this[0]).length);\r\n    while (++i < n) {\r\n      if (node = group[i]) {\r\n        value[i] = node.__data__;\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n  function bind(group, groupData) {\r\n    var i,\r\n        n = group.length,\r\n        m = groupData.length,\r\n        n0 = Math.min(n, m),\r\n        updateNodes = new Array(m),\r\n        enterNodes = new Array(m),\r\n        exitNodes = new Array(n),\r\n        node,\r\n        nodeData;\r\n\r\n    if (key) {\r\n      var nodeByKeyValue = new d3_Map,\r\n          dataByKeyValue = new d3_Map,\r\n          keyValues = [],\r\n          keyValue;\r\n\r\n      for (i = -1; ++i < n;) {\r\n        keyValue = key.call(node = group[i], node.__data__, i);\r\n        if (nodeByKeyValue.has(keyValue)) {\r\n          exitNodes[i] = node; // duplicate selection key\r\n        } else {\r\n          nodeByKeyValue.set(keyValue, node);\r\n        }\r\n        keyValues.push(keyValue);\r\n      }\r\n\r\n      for (i = -1; ++i < m;) {\r\n        keyValue = key.call(groupData, nodeData = groupData[i], i);\r\n        if (node = nodeByKeyValue.get(keyValue)) {\r\n          updateNodes[i] = node;\r\n          node.__data__ = nodeData;\r\n        } else if (!dataByKeyValue.has(keyValue)) { // no duplicate data key\r\n          enterNodes[i] = d3_selection_dataNode(nodeData);\r\n        }\r\n        dataByKeyValue.set(keyValue, nodeData);\r\n        nodeByKeyValue.remove(keyValue);\r\n      }\r\n\r\n      for (i = -1; ++i < n;) {\r\n        if (nodeByKeyValue.has(keyValues[i])) {\r\n          exitNodes[i] = group[i];\r\n        }\r\n      }\r\n    } else {\r\n      for (i = -1; ++i < n0;) {\r\n        node = group[i];\r\n        nodeData = groupData[i];\r\n        if (node) {\r\n          node.__data__ = nodeData;\r\n          updateNodes[i] = node;\r\n        } else {\r\n          enterNodes[i] = d3_selection_dataNode(nodeData);\r\n        }\r\n      }\r\n      for (; i < m; ++i) {\r\n        enterNodes[i] = d3_selection_dataNode(groupData[i]);\r\n      }\r\n      for (; i < n; ++i) {\r\n        exitNodes[i] = group[i];\r\n      }\r\n    }\r\n\r\n    enterNodes.update\r\n        = updateNodes;\r\n\r\n    enterNodes.parentNode\r\n        = updateNodes.parentNode\r\n        = exitNodes.parentNode\r\n        = group.parentNode;\r\n\r\n    enter.push(enterNodes);\r\n    update.push(updateNodes);\r\n    exit.push(exitNodes);\r\n  }\r\n\r\n  var enter = d3_selection_enter([]),\r\n      update = d3_selection([]),\r\n      exit = d3_selection([]);\r\n\r\n  if (typeof value === \"function\") {\r\n    while (++i < n) {\r\n      bind(group = this[i], value.call(group, group.parentNode.__data__, i));\r\n    }\r\n  } else {\r\n    while (++i < n) {\r\n      bind(group = this[i], value);\r\n    }\r\n  }\r\n\r\n  update.enter = function() { return enter; };\r\n  update.exit = function() { return exit; };\r\n  return update;\r\n};\r\n\r\nfunction d3_selection_dataNode(data) {\r\n  return {__data__: data};\r\n}\r\n\r\nd3_selectionPrototype.datum = function(value) {\r\n  return arguments.length\r\n      ? this.property(\"__data__\", value)\r\n      : this.property(\"__data__\");\r\n};\r\n\r\nd3_selectionPrototype.filter = function(filter) {\r\n  var subgroups = [],\r\n      subgroup,\r\n      group,\r\n      node;\r\n\r\n  if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\r\n\r\n  for (var j = 0, m = this.length; j < m; j++) {\r\n    subgroups.push(subgroup = []);\r\n    subgroup.parentNode = (group = this[j]).parentNode;\r\n    for (var i = 0, n = group.length; i < n; i++) {\r\n      if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\r\n        subgroup.push(node);\r\n      }\r\n    }\r\n  }\r\n\r\n  return d3_selection(subgroups);\r\n};\r\n\r\nfunction d3_selection_filter(selector) {\r\n  return function() {\r\n    return d3_selectMatches(this, selector);\r\n  };\r\n}\r\n\r\nd3_selectionPrototype.order = function() {\r\n  for (var j = -1, m = this.length; ++j < m;) {\r\n    for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\r\n      if (node = group[i]) {\r\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\r\n        next = node;\r\n      }\r\n    }\r\n  }\r\n  return this;\r\n};\r\nd3.ascending = d3_ascending;\r\n\r\nfunction d3_ascending(a, b) {\r\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n}\r\n\r\nd3_selectionPrototype.sort = function(comparator) {\r\n  comparator = d3_selection_sortComparator.apply(this, arguments);\r\n  for (var j = -1, m = this.length; ++j < m;) this[j].sort(comparator);\r\n  return this.order();\r\n};\r\n\r\nfunction d3_selection_sortComparator(comparator) {\r\n  if (!arguments.length) comparator = d3_ascending;\r\n  return function(a, b) {\r\n    return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\r\n  };\r\n}\r\n\r\nd3_selectionPrototype.each = function(callback) {\r\n  return d3_selection_each(this, function(node, i, j) {\r\n    callback.call(node, node.__data__, i, j);\r\n  });\r\n};\r\n\r\nfunction d3_selection_each(groups, callback) {\r\n  for (var j = 0, m = groups.length; j < m; j++) {\r\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\r\n      if (node = group[i]) callback(node, i, j);\r\n    }\r\n  }\r\n  return groups;\r\n}\r\n\r\nd3_selectionPrototype.call = function(callback) {\r\n  var args = d3_array(arguments);\r\n  callback.apply(args[0] = this, args);\r\n  return this;\r\n};\r\n\r\nd3_selectionPrototype.empty = function() {\r\n  return !this.node();\r\n};\r\n\r\nd3_selectionPrototype.node = function() {\r\n  for (var j = 0, m = this.length; j < m; j++) {\r\n    for (var group = this[j], i = 0, n = group.length; i < n; i++) {\r\n      var node = group[i];\r\n      if (node) return node;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nd3_selectionPrototype.size = function() {\r\n  var n = 0;\r\n  this.each(function() { ++n; });\r\n  return n;\r\n};\r\n\r\nfunction d3_selection_enter(selection) {\r\n  d3_subclass(selection, d3_selection_enterPrototype);\r\n  return selection;\r\n}\r\n\r\nvar d3_selection_enterPrototype = [];\r\n\r\nd3.selection.enter = d3_selection_enter;\r\nd3.selection.enter.prototype = d3_selection_enterPrototype;\r\n\r\nd3_selection_enterPrototype.append = d3_selectionPrototype.append;\r\nd3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\r\nd3_selection_enterPrototype.node = d3_selectionPrototype.node;\r\nd3_selection_enterPrototype.call = d3_selectionPrototype.call;\r\nd3_selection_enterPrototype.size = d3_selectionPrototype.size;\r\n\r\n\r\nd3_selection_enterPrototype.select = function(selector) {\r\n  var subgroups = [],\r\n      subgroup,\r\n      subnode,\r\n      upgroup,\r\n      group,\r\n      node;\r\n\r\n  for (var j = -1, m = this.length; ++j < m;) {\r\n    upgroup = (group = this[j]).update;\r\n    subgroups.push(subgroup = []);\r\n    subgroup.parentNode = group.parentNode;\r\n    for (var i = -1, n = group.length; ++i < n;) {\r\n      if (node = group[i]) {\r\n        subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\r\n        subnode.__data__ = node.__data__;\r\n      } else {\r\n        subgroup.push(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  return d3_selection(subgroups);\r\n};\r\n\r\nd3_selection_enterPrototype.insert = function(name, before) {\r\n  if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\r\n  return d3_selectionPrototype.insert.call(this, name, before);\r\n};\r\n\r\nfunction d3_selection_enterInsertBefore(enter) {\r\n  var i0, j0;\r\n  return function(d, i, j) {\r\n    var group = enter[j].update,\r\n        n = group.length,\r\n        node;\r\n    if (j != j0) j0 = j, i0 = 0;\r\n    if (i >= i0) i0 = i + 1;\r\n    while (!(node = group[i0]) && ++i0 < n);\r\n    return node;\r\n  };\r\n}\r\n\r\n// import \"../transition/transition\";\r\n\r\nd3_selectionPrototype.transition = function() {\r\n  var id = d3_transitionInheritId || ++d3_transitionId,\r\n      subgroups = [],\r\n      subgroup,\r\n      node,\r\n      transition = d3_transitionInherit || {time: Date.now(), ease: d3_ease_cubicInOut, delay: 0, duration: 250};\r\n\r\n  for (var j = -1, m = this.length; ++j < m;) {\r\n    subgroups.push(subgroup = []);\r\n    for (var group = this[j], i = -1, n = group.length; ++i < n;) {\r\n      if (node = group[i]) d3_transitionNode(node, i, id, transition);\r\n      subgroup.push(node);\r\n    }\r\n  }\r\n\r\n  return d3_transition(subgroups, id);\r\n};\r\n// import \"../transition/transition\";\r\n\r\nd3_selectionPrototype.interrupt = function() {\r\n  return this.each(d3_selection_interrupt);\r\n};\r\n\r\nfunction d3_selection_interrupt() {\r\n  var lock = this.__transition__;\r\n  if (lock) ++lock.active;\r\n}\r\n\r\n// TODO fast singleton implementation?\r\nd3.select = function(node) {\r\n  var group = [typeof node === \"string\" ? d3_select(node, d3_document) : node];\r\n  group.parentNode = d3_documentElement;\r\n  return d3_selection([group]);\r\n};\r\n\r\nd3.selectAll = function(nodes) {\r\n  var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\r\n  group.parentNode = d3_documentElement;\r\n  return d3_selection([group]);\r\n};\r\n\r\nvar d3_selectionRoot = d3.select(d3_documentElement);\r\n\r\nd3_selectionPrototype.on = function(type, listener, capture) {\r\n  var n = arguments.length;\r\n  if (n < 3) {\r\n\r\n    // For on(object) or on(object, boolean), the object specifies the event\r\n    // types and listeners to add or remove. The optional boolean specifies\r\n    // whether the listener captures events.\r\n    if (typeof type !== \"string\") {\r\n      if (n < 2) listener = false;\r\n      for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\r\n      return this;\r\n    }\r\n\r\n    // For on(string), return the listener for the first node.\r\n    if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\r\n\r\n    // For on(string, function), use the default capture.\r\n    capture = false;\r\n  }\r\n\r\n  // Otherwise, a type, listener and capture are specified, and handled as below.\r\n  return this.each(d3_selection_on(type, listener, capture));\r\n};\r\n\r\nfunction d3_selection_on(type, listener, capture) {\r\n  var name = \"__on\" + type,\r\n      i = type.indexOf(\".\"),\r\n      wrap = d3_selection_onListener;\r\n\r\n  if (i > 0) type = type.substring(0, i);\r\n  var filter = d3_selection_onFilters.get(type);\r\n  if (filter) type = filter, wrap = d3_selection_onFilter;\r\n\r\n  function onRemove() {\r\n    var l = this[name];\r\n    if (l) {\r\n      this.removeEventListener(type, l, l.$);\r\n      delete this[name];\r\n    }\r\n  }\r\n\r\n  function onAdd() {\r\n    var l = wrap(listener, d3_array(arguments));\r\n    onRemove.call(this);\r\n    this.addEventListener(type, this[name] = l, l.$ = capture);\r\n    l._ = listener;\r\n  }\r\n\r\n  function removeAll() {\r\n    var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"),\r\n        match;\r\n    for (var name in this) {\r\n      if (match = name.match(re)) {\r\n        var l = this[name];\r\n        this.removeEventListener(match[1], l, l.$);\r\n        delete this[name];\r\n      }\r\n    }\r\n  }\r\n\r\n  return i\r\n      ? listener ? onAdd : onRemove\r\n      : listener ? d3_noop : removeAll;\r\n}\r\n\r\nvar d3_selection_onFilters = d3.map({\r\n  mouseenter: \"mouseover\",\r\n  mouseleave: \"mouseout\"\r\n});\r\n\r\nd3_selection_onFilters.forEach(function(k) {\r\n  if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\r\n});\r\n\r\nfunction d3_selection_onListener(listener, argumentz) {\r\n  return function(e) {\r\n    var o = d3.event; // Events can be reentrant (e.g., focus).\r\n    d3.event = e;\r\n    argumentz[0] = this.__data__;\r\n    try {\r\n      listener.apply(this, argumentz);\r\n    } finally {\r\n      d3.event = o;\r\n    }\r\n  };\r\n}\r\n\r\nfunction d3_selection_onFilter(listener, argumentz) {\r\n  var l = d3_selection_onListener(listener, argumentz);\r\n  return function(e) {\r\n    var target = this, related = e.relatedTarget;\r\n    if (!related || (related !== target && !(related.compareDocumentPosition(target) & 8))) {\r\n      l.call(target, e);\r\n    }\r\n  };\r\n}\r\n\r\nvar d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"),\r\n    d3_event_dragId = 0;\r\n\r\nfunction d3_event_dragSuppress() {\r\n  var name = \".dragsuppress-\" + ++d3_event_dragId,\r\n      click = \"click\" + name,\r\n      w = d3.select(d3_window)\r\n          .on(\"touchmove\" + name, d3_eventPreventDefault)\r\n          .on(\"dragstart\" + name, d3_eventPreventDefault)\r\n          .on(\"selectstart\" + name, d3_eventPreventDefault);\r\n  if (d3_event_dragSelect) {\r\n    var style = d3_documentElement.style,\r\n        select = style[d3_event_dragSelect];\r\n    style[d3_event_dragSelect] = \"none\";\r\n  }\r\n  return function(suppressClick) {\r\n    w.on(name, null);\r\n    if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\r\n    if (suppressClick) { // suppress the next click, but only if it’s immediate\r\n      function off() { w.on(click, null); }\r\n      w.on(click, function() { d3_eventPreventDefault(); off(); }, true);\r\n      setTimeout(off, 0);\r\n    }\r\n  };\r\n}\r\n\r\nd3.mouse = function(container) {\r\n  return d3_mousePoint(container, d3_eventSource());\r\n};\r\n\r\n// https://bugs.webkit.org/show_bug.cgi?id=44083\r\nvar d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\r\n\r\nfunction d3_mousePoint(container, e) {\r\n  if (e.changedTouches) e = e.changedTouches[0];\r\n  var svg = container.ownerSVGElement || container;\r\n  if (svg.createSVGPoint) {\r\n    var point = svg.createSVGPoint();\r\n    if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\r\n      svg = d3.select(\"body\").append(\"svg\").style({\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        margin: 0,\r\n        padding: 0,\r\n        border: \"none\"\r\n      }, \"important\");\r\n      var ctm = svg[0][0].getScreenCTM();\r\n      d3_mouse_bug44083 = !(ctm.f || ctm.e);\r\n      svg.remove();\r\n    }\r\n    if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY;\r\n    else point.x = e.clientX, point.y = e.clientY;\r\n    point = point.matrixTransform(container.getScreenCTM().inverse());\r\n    return [point.x, point.y];\r\n  }\r\n  var rect = container.getBoundingClientRect();\r\n  return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];\r\n};\r\n\r\nd3.touches = function(container, touches) {\r\n  if (arguments.length < 2) touches = d3_eventSource().touches;\r\n  return touches ? d3_array(touches).map(function(touch) {\r\n    var point = d3_mousePoint(container, touch);\r\n    point.identifier = touch.identifier;\r\n    return point;\r\n  }) : [];\r\n};\r\nd3.behavior = {};\r\n\r\nd3.behavior.drag = function() {\r\n  var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"),\r\n      origin = null,\r\n      mousedown = dragstart(d3_noop, d3.mouse, d3_behavior_dragMouseSubject, \"mousemove\", \"mouseup\"),\r\n      touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_behavior_dragTouchSubject, \"touchmove\", \"touchend\");\r\n\r\n  function drag() {\r\n    this.on(\"mousedown.drag\", mousedown)\r\n        .on(\"touchstart.drag\", touchstart);\r\n  }\r\n\r\n  function dragstart(id, position, subject, move, end) {\r\n    return function() {\r\n      var that = this,\r\n          target = d3.event.target,\r\n          parent = that.parentNode,\r\n          dispatch = event.of(that, arguments),\r\n          dragged = 0,\r\n          dragId = id(),\r\n          dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId),\r\n          dragOffset,\r\n          dragSubject = d3.select(subject()).on(move + dragName, moved).on(end + dragName, ended),\r\n          dragRestore = d3_event_dragSuppress(),\r\n          position0 = position(parent, dragId);\r\n\r\n      if (origin) {\r\n        dragOffset = origin.apply(that, arguments);\r\n        dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];\r\n      } else {\r\n        dragOffset = [0, 0];\r\n      }\r\n\r\n      dispatch({type: \"dragstart\"});\r\n\r\n      function moved() {\r\n        var position1 = position(parent, dragId), dx, dy;\r\n        if (!position1) return; // this touch didn’t move\r\n\r\n        dx = position1[0] - position0[0];\r\n        dy = position1[1] - position0[1];\r\n        dragged |= dx | dy;\r\n        position0 = position1;\r\n\r\n        dispatch({\r\n          type: \"drag\",\r\n          x: position1[0] + dragOffset[0],\r\n          y: position1[1] + dragOffset[1],\r\n          dx: dx,\r\n          dy: dy\r\n        });\r\n      }\r\n\r\n      function ended() {\r\n        if (!position(parent, dragId)) return; // this touch didn’t end\r\n        dragSubject.on(move + dragName, null).on(end + dragName, null);\r\n        dragRestore(dragged && d3.event.target === target);\r\n        dispatch({type: \"dragend\"});\r\n      }\r\n    };\r\n  }\r\n\r\n  drag.origin = function(x) {\r\n    if (!arguments.length) return origin;\r\n    origin = x;\r\n    return drag;\r\n  };\r\n\r\n  return d3.rebind(drag, event, \"on\");\r\n};\r\n\r\n// While it is possible to receive a touchstart event with more than one changed\r\n// touch, the event is only shared by touches on the same target; for new\r\n// touches targetting different elements, multiple touchstart events are\r\n// received even when the touches start simultaneously. Since multiple touches\r\n// cannot move the same target to different locations concurrently without\r\n// tearing the fabric of spacetime, we allow the first touch to win.\r\nfunction d3_behavior_dragTouchId() {\r\n  return d3.event.changedTouches[0].identifier;\r\n}\r\n\r\nfunction d3_behavior_dragTouchSubject() {\r\n  return d3.event.target;\r\n}\r\n\r\nfunction d3_behavior_dragMouseSubject() {\r\n  return d3_window;\r\n}\r\nfunction d3_functor(v) {\r\n  return typeof v === \"function\" ? v : function() { return v; };\r\n}\r\n\r\nd3.functor = d3_functor;\r\nfunction d3_true() {\r\n  return true;\r\n}\r\n\r\nvar d3_timer_queueHead,\r\n    d3_timer_queueTail,\r\n    d3_timer_interval, // is an interval (or frame) active?\r\n    d3_timer_timeout, // is a timeout active?\r\n    d3_timer_active, // active timer object\r\n    d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) { setTimeout(callback, 17); };\r\n\r\n// The timer will continue to fire until callback returns true.\r\nd3.timer = function(callback, delay, then) {\r\n  var n = arguments.length;\r\n  if (n < 2) delay = 0;\r\n  if (n < 3) then = Date.now();\r\n\r\n  // Add the callback to the tail of the queue.\r\n  var time = then + delay, timer = {c: callback, t: time, f: false, n: null};\r\n  if (d3_timer_queueTail) d3_timer_queueTail.n = timer;\r\n  else d3_timer_queueHead = timer;\r\n  d3_timer_queueTail = timer;\r\n\r\n  // Start animatin'!\r\n  if (!d3_timer_interval) {\r\n    d3_timer_timeout = clearTimeout(d3_timer_timeout);\r\n    d3_timer_interval = 1;\r\n    d3_timer_frame(d3_timer_step);\r\n  }\r\n};\r\n\r\nfunction d3_timer_step() {\r\n  var now = d3_timer_mark(),\r\n      delay = d3_timer_sweep() - now;\r\n  if (delay > 24) {\r\n    if (isFinite(delay)) {\r\n      clearTimeout(d3_timer_timeout);\r\n      d3_timer_timeout = setTimeout(d3_timer_step, delay);\r\n    }\r\n    d3_timer_interval = 0;\r\n  } else {\r\n    d3_timer_interval = 1;\r\n    d3_timer_frame(d3_timer_step);\r\n  }\r\n}\r\n\r\nd3.timer.flush = function() {\r\n  d3_timer_mark();\r\n  d3_timer_sweep();\r\n};\r\n\r\nfunction d3_timer_mark() {\r\n  var now = Date.now();\r\n  d3_timer_active = d3_timer_queueHead;\r\n  while (d3_timer_active) {\r\n    if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\r\n    d3_timer_active = d3_timer_active.n;\r\n  }\r\n  return now;\r\n}\r\n\r\n// Flush after callbacks to avoid concurrent queue modification.\r\n// Returns the time of the earliest active timer, post-sweep.\r\nfunction d3_timer_sweep() {\r\n  var t0,\r\n      t1 = d3_timer_queueHead,\r\n      time = Infinity;\r\n  while (t1) {\r\n    if (t1.f) {\r\n      t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\r\n    } else {\r\n      if (t1.t < time) time = t1.t;\r\n      t1 = (t0 = t1).n;\r\n    }\r\n  }\r\n  d3_timer_queueTail = t0;\r\n  return time;\r\n}\r\nfunction d3_identity(d) {\r\n  return d;\r\n}\r\nvar π = Math.PI,\r\n    τ = 2 * π,\r\n    halfπ = π / 2,\r\n    ε = 1e-6,\r\n    ε2 = ε * ε,\r\n    d3_radians = π / 180,\r\n    d3_degrees = 180 / π;\r\n\r\nfunction d3_sgn(x) {\r\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\r\n}\r\n\r\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\r\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\r\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\r\n// negative if clockwise, and zero if the points are collinear.\r\nfunction d3_cross2d(a, b, c) {\r\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\r\n}\r\n\r\nfunction d3_acos(x) {\r\n  return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\r\n}\r\n\r\nfunction d3_asin(x) {\r\n  return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\r\n}\r\n\r\nfunction d3_sinh(x) {\r\n  return ((x = Math.exp(x)) - 1 / x) / 2;\r\n}\r\n\r\nfunction d3_cosh(x) {\r\n  return ((x = Math.exp(x)) + 1 / x) / 2;\r\n}\r\n\r\nfunction d3_tanh(x) {\r\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\r\n}\r\n\r\nfunction d3_haversin(x) {\r\n  return (x = Math.sin(x / 2)) * x;\r\n}\r\n\r\nvar d3_ease_default = function() { return d3_identity; };\r\n\r\nvar d3_ease = d3.map({\r\n  linear: d3_ease_default,\r\n  poly: d3_ease_poly,\r\n  quad: function() { return d3_ease_quad; },\r\n  cubic: function() { return d3_ease_cubic; },\r\n  sin: function() { return d3_ease_sin; },\r\n  exp: function() { return d3_ease_exp; },\r\n  circle: function() { return d3_ease_circle; },\r\n  elastic: d3_ease_elastic,\r\n  back: d3_ease_back,\r\n  bounce: function() { return d3_ease_bounce; }\r\n});\r\n\r\nvar d3_ease_mode = d3.map({\r\n  \"in\": d3_identity,\r\n  \"out\": d3_ease_reverse,\r\n  \"in-out\": d3_ease_reflect,\r\n  \"out-in\": function(f) { return d3_ease_reflect(d3_ease_reverse(f)); }\r\n});\r\n\r\nd3.ease = function(name) {\r\n  var i = name.indexOf(\"-\"),\r\n      t = i >= 0 ? name.substring(0, i) : name,\r\n      m = i >= 0 ? name.substring(i + 1) : \"in\";\r\n  t = d3_ease.get(t) || d3_ease_default;\r\n  m = d3_ease_mode.get(m) || d3_identity;\r\n  return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\r\n};\r\n\r\nfunction d3_ease_clamp(f) {\r\n  return function(t) {\r\n    return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\r\n  };\r\n}\r\n\r\nfunction d3_ease_reverse(f) {\r\n  return function(t) {\r\n    return 1 - f(1 - t);\r\n  };\r\n}\r\n\r\nfunction d3_ease_reflect(f) {\r\n  return function(t) {\r\n    return .5 * (t < .5 ? f(2 * t) : (2 - f(2 - 2 * t)));\r\n  };\r\n}\r\n\r\nfunction d3_ease_quad(t) {\r\n  return t * t;\r\n}\r\n\r\nfunction d3_ease_cubic(t) {\r\n  return t * t * t;\r\n}\r\n\r\n// Optimized clamp(reflect(poly(3))).\r\nfunction d3_ease_cubicInOut(t) {\r\n  if (t <= 0) return 0;\r\n  if (t >= 1) return 1;\r\n  var t2 = t * t, t3 = t2 * t;\r\n  return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\r\n}\r\n\r\nfunction d3_ease_poly(e) {\r\n  return function(t) {\r\n    return Math.pow(t, e);\r\n  };\r\n}\r\n\r\nfunction d3_ease_sin(t) {\r\n  return 1 - Math.cos(t * halfπ);\r\n}\r\n\r\nfunction d3_ease_exp(t) {\r\n  return Math.pow(2, 10 * (t - 1));\r\n}\r\n\r\nfunction d3_ease_circle(t) {\r\n  return 1 - Math.sqrt(1 - t * t);\r\n}\r\n\r\nfunction d3_ease_elastic(a, p) {\r\n  var s;\r\n  if (arguments.length < 2) p = 0.45;\r\n  if (arguments.length) s = p / τ * Math.asin(1 / a);\r\n  else a = 1, s = p / 4;\r\n  return function(t) {\r\n    return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\r\n  };\r\n}\r\n\r\nfunction d3_ease_back(s) {\r\n  if (!s) s = 1.70158;\r\n  return function(t) {\r\n    return t * t * ((s + 1) * t - s);\r\n  };\r\n}\r\n\r\nfunction d3_ease_bounce(t) {\r\n  return t < 1 / 2.75 ? 7.5625 * t * t\r\n      : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75\r\n      : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375\r\n      : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\r\n}\r\n\r\nfunction d3_transition(groups, id) {\r\n  d3_subclass(groups, d3_transitionPrototype);\r\n\r\n  groups.id = id; // Note: read-only!\r\n\r\n  return groups;\r\n}\r\n\r\nvar d3_transitionPrototype = [],\r\n    d3_transitionId = 0,\r\n    d3_transitionInheritId,\r\n    d3_transitionInherit;\r\n\r\nd3_transitionPrototype.call = d3_selectionPrototype.call;\r\nd3_transitionPrototype.empty = d3_selectionPrototype.empty;\r\nd3_transitionPrototype.node = d3_selectionPrototype.node;\r\nd3_transitionPrototype.size = d3_selectionPrototype.size;\r\n\r\nd3.transition = function(selection) {\r\n  return arguments.length\r\n      ? (d3_transitionInheritId ? selection.transition() : selection)\r\n      : d3_selectionRoot.transition();\r\n};\r\n\r\nd3.transition.prototype = d3_transitionPrototype;\r\n\r\n\r\nd3_transitionPrototype.select = function(selector) {\r\n  var id = this.id,\r\n      subgroups = [],\r\n      subgroup,\r\n      subnode,\r\n      node;\r\n\r\n  selector = d3_selection_selector(selector);\r\n\r\n  for (var j = -1, m = this.length; ++j < m;) {\r\n    subgroups.push(subgroup = []);\r\n    for (var group = this[j], i = -1, n = group.length; ++i < n;) {\r\n      if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\r\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\r\n        d3_transitionNode(subnode, i, id, node.__transition__[id]);\r\n        subgroup.push(subnode);\r\n      } else {\r\n        subgroup.push(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  return d3_transition(subgroups, id);\r\n};\r\n\r\nd3_transitionPrototype.selectAll = function(selector) {\r\n  var id = this.id,\r\n      subgroups = [],\r\n      subgroup,\r\n      subnodes,\r\n      node,\r\n      subnode,\r\n      transition;\r\n\r\n  selector = d3_selection_selectorAll(selector);\r\n\r\n  for (var j = -1, m = this.length; ++j < m;) {\r\n    for (var group = this[j], i = -1, n = group.length; ++i < n;) {\r\n      if (node = group[i]) {\r\n        transition = node.__transition__[id];\r\n        subnodes = selector.call(node, node.__data__, i, j);\r\n        subgroups.push(subgroup = []);\r\n        for (var k = -1, o = subnodes.length; ++k < o;) {\r\n          if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\r\n          subgroup.push(subnode);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return d3_transition(subgroups, id);\r\n};\r\n\r\nd3_transitionPrototype.filter = function(filter) {\r\n  var subgroups = [],\r\n      subgroup,\r\n      group,\r\n      node;\r\n\r\n  if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\r\n\r\n  for (var j = 0, m = this.length; j < m; j++) {\r\n    subgroups.push(subgroup = []);\r\n    for (var group = this[j], i = 0, n = group.length; i < n; i++) {\r\n      if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\r\n        subgroup.push(node);\r\n      }\r\n    }\r\n  }\r\n\r\n  return d3_transition(subgroups, this.id);\r\n};\r\nd3.color = d3_color;\r\n\r\nfunction d3_color() {}\r\n\r\nd3_color.prototype.toString = function() {\r\n  return this.rgb() + \"\";\r\n};\r\n\r\nd3.hsl = d3_hsl;\r\n\r\nfunction d3_hsl(h, s, l) {\r\n  return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l)\r\n      : arguments.length < 2 ? (h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l)\r\n      : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl))\r\n      : new d3_hsl(h, s, l);\r\n}\r\n\r\nvar d3_hslPrototype = d3_hsl.prototype = new d3_color;\r\n\r\nd3_hslPrototype.brighter = function(k) {\r\n  k = Math.pow(0.7, arguments.length ? k : 1);\r\n  return new d3_hsl(this.h, this.s, this.l / k);\r\n};\r\n\r\nd3_hslPrototype.darker = function(k) {\r\n  k = Math.pow(0.7, arguments.length ? k : 1);\r\n  return new d3_hsl(this.h, this.s, k * this.l);\r\n};\r\n\r\nd3_hslPrototype.rgb = function() {\r\n  return d3_hsl_rgb(this.h, this.s, this.l);\r\n};\r\n\r\nfunction d3_hsl_rgb(h, s, l) {\r\n  var m1,\r\n      m2;\r\n\r\n  /* Some simple corrections for h, s and l. */\r\n  h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\r\n  s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\r\n  l = l < 0 ? 0 : l > 1 ? 1 : l;\r\n\r\n  /* From FvD 13.37, CSS Color Module Level 3 */\r\n  m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\r\n  m1 = 2 * l - m2;\r\n\r\n  function v(h) {\r\n    if (h > 360) h -= 360;\r\n    else if (h < 0) h += 360;\r\n    if (h < 60) return m1 + (m2 - m1) * h / 60;\r\n    if (h < 180) return m2;\r\n    if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\r\n    return m1;\r\n  }\r\n\r\n  function vv(h) {\r\n    return Math.round(v(h) * 255);\r\n  }\r\n\r\n  return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\r\n}\r\n\r\nd3.hcl = d3_hcl;\r\n\r\nfunction d3_hcl(h, c, l) {\r\n  return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l)\r\n      : arguments.length < 2 ? (h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l)\r\n      : (h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b)\r\n      : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b)))\r\n      : new d3_hcl(h, c, l);\r\n}\r\n\r\nvar d3_hclPrototype = d3_hcl.prototype = new d3_color;\r\n\r\nd3_hclPrototype.brighter = function(k) {\r\n  return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\r\n};\r\n\r\nd3_hclPrototype.darker = function(k) {\r\n  return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\r\n};\r\n\r\nd3_hclPrototype.rgb = function() {\r\n  return d3_hcl_lab(this.h, this.c, this.l).rgb();\r\n};\r\n\r\nfunction d3_hcl_lab(h, c, l) {\r\n  if (isNaN(h)) h = 0;\r\n  if (isNaN(c)) c = 0;\r\n  return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\r\n}\r\n\r\nd3.lab = d3_lab;\r\n\r\nfunction d3_lab(l, a, b) {\r\n  return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b)\r\n      : arguments.length < 2 ? (l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b)\r\n      : (l instanceof d3_hcl ? d3_hcl_lab(l.l, l.c, l.h)\r\n      : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b)))\r\n      : new d3_lab(l, a, b);\r\n}\r\n\r\n// Corresponds roughly to RGB brighter/darker\r\nvar d3_lab_K = 18;\r\n\r\n// D65 standard referent\r\nvar d3_lab_X = 0.950470,\r\n    d3_lab_Y = 1,\r\n    d3_lab_Z = 1.088830;\r\n\r\nvar d3_labPrototype = d3_lab.prototype = new d3_color;\r\n\r\nd3_labPrototype.brighter = function(k) {\r\n  return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\r\n};\r\n\r\nd3_labPrototype.darker = function(k) {\r\n  return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\r\n};\r\n\r\nd3_labPrototype.rgb = function() {\r\n  return d3_lab_rgb(this.l, this.a, this.b);\r\n};\r\n\r\nfunction d3_lab_rgb(l, a, b) {\r\n  var y = (l + 16) / 116,\r\n      x = y + a / 500,\r\n      z = y - b / 200;\r\n  x = d3_lab_xyz(x) * d3_lab_X;\r\n  y = d3_lab_xyz(y) * d3_lab_Y;\r\n  z = d3_lab_xyz(z) * d3_lab_Z;\r\n  return new d3_rgb(\r\n    d3_xyz_rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z),\r\n    d3_xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\r\n    d3_xyz_rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z)\r\n  );\r\n}\r\n\r\nfunction d3_lab_hcl(l, a, b) {\r\n  return l > 0\r\n      ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l)\r\n      : new d3_hcl(NaN, NaN, l);\r\n}\r\n\r\nfunction d3_lab_xyz(x) {\r\n  return x > 0.206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\r\n}\r\nfunction d3_xyz_lab(x) {\r\n  return x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\r\n}\r\n\r\nfunction d3_xyz_rgb(r) {\r\n  return Math.round(255 * (r <= 0.00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - 0.055));\r\n}\r\n\r\nd3.rgb = d3_rgb;\r\n\r\nfunction d3_rgb(r, g, b) {\r\n  return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b)\r\n      : arguments.length < 2 ? (r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b)\r\n      : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb))\r\n      : new d3_rgb(r, g, b);\r\n}\r\n\r\nfunction d3_rgbNumber(value) {\r\n  return new d3_rgb(value >> 16, value >> 8 & 0xff, value & 0xff);\r\n}\r\n\r\nfunction d3_rgbString(value) {\r\n  return d3_rgbNumber(value) + \"\";\r\n}\r\n\r\nvar d3_rgbPrototype = d3_rgb.prototype = new d3_color;\r\n\r\nd3_rgbPrototype.brighter = function(k) {\r\n  k = Math.pow(0.7, arguments.length ? k : 1);\r\n  var r = this.r,\r\n      g = this.g,\r\n      b = this.b,\r\n      i = 30;\r\n  if (!r && !g && !b) return new d3_rgb(i, i, i);\r\n  if (r && r < i) r = i;\r\n  if (g && g < i) g = i;\r\n  if (b && b < i) b = i;\r\n  return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\r\n};\r\n\r\nd3_rgbPrototype.darker = function(k) {\r\n  k = Math.pow(0.7, arguments.length ? k : 1);\r\n  return new d3_rgb(k * this.r, k * this.g, k * this.b);\r\n};\r\n\r\nd3_rgbPrototype.hsl = function() {\r\n  return d3_rgb_hsl(this.r, this.g, this.b);\r\n};\r\n\r\nd3_rgbPrototype.toString = function() {\r\n  return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\r\n};\r\n\r\nfunction d3_rgb_hex(v) {\r\n  return v < 0x10\r\n      ? \"0\" + Math.max(0, v).toString(16)\r\n      : Math.min(255, v).toString(16);\r\n}\r\n\r\nfunction d3_rgb_parse(format, rgb, hsl) {\r\n  var r = 0, // red channel; int in [0, 255]\r\n      g = 0, // green channel; int in [0, 255]\r\n      b = 0, // blue channel; int in [0, 255]\r\n      m1, // CSS color specification match\r\n      m2, // CSS color specification type (e.g., rgb)\r\n      color;\r\n\r\n  /* Handle hsl, rgb. */\r\n  m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\r\n  if (m1) {\r\n    m2 = m1[2].split(\",\");\r\n    switch (m1[1]) {\r\n      case \"hsl\": {\r\n        return hsl(\r\n          parseFloat(m2[0]), // degrees\r\n          parseFloat(m2[1]) / 100, // percentage\r\n          parseFloat(m2[2]) / 100 // percentage\r\n        );\r\n      }\r\n      case \"rgb\": {\r\n        return rgb(\r\n          d3_rgb_parseNumber(m2[0]),\r\n          d3_rgb_parseNumber(m2[1]),\r\n          d3_rgb_parseNumber(m2[2])\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Named colors. */\r\n  if (color = d3_rgb_names.get(format)) return rgb(color.r, color.g, color.b);\r\n\r\n  /* Hexadecimal colors: #rgb and #rrggbb. */\r\n  if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.substring(1), 16))) {\r\n    if (format.length === 4) {\r\n      r = (color & 0xf00) >> 4; r = (r >> 4) | r;\r\n      g = (color & 0xf0); g = (g >> 4) | g;\r\n      b = (color & 0xf); b = (b << 4) | b;\r\n    } else if (format.length === 7) {\r\n      r = (color & 0xff0000) >> 16;\r\n      g = (color & 0xff00) >> 8;\r\n      b = (color & 0xff);\r\n    }\r\n  }\r\n\r\n  return rgb(r, g, b);\r\n}\r\n\r\nfunction d3_rgb_hsl(r, g, b) {\r\n  var min = Math.min(r /= 255, g /= 255, b /= 255),\r\n      max = Math.max(r, g, b),\r\n      d = max - min,\r\n      h,\r\n      s,\r\n      l = (max + min) / 2;\r\n  if (d) {\r\n    s = l < .5 ? d / (max + min) : d / (2 - max - min);\r\n    if (r == max) h = (g - b) / d + (g < b ? 6 : 0);\r\n    else if (g == max) h = (b - r) / d + 2;\r\n    else h = (r - g) / d + 4;\r\n    h *= 60;\r\n  } else {\r\n    h = NaN;\r\n    s = l > 0 && l < 1 ? 0 : h;\r\n  }\r\n  return new d3_hsl(h, s, l);\r\n}\r\n\r\nfunction d3_rgb_lab(r, g, b) {\r\n  r = d3_rgb_xyz(r);\r\n  g = d3_rgb_xyz(g);\r\n  b = d3_rgb_xyz(b);\r\n  var x = d3_xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / d3_lab_X),\r\n      y = d3_xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / d3_lab_Y),\r\n      z = d3_xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / d3_lab_Z);\r\n  return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\r\n}\r\n\r\nfunction d3_rgb_xyz(r) {\r\n  return (r /= 255) <= 0.04045 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\r\n}\r\n\r\nfunction d3_rgb_parseNumber(c) { // either integer or percentage\r\n  var f = parseFloat(c);\r\n  return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\r\n}\r\n\r\nvar d3_rgb_names = d3.map({\r\n  aliceblue: 0xf0f8ff,\r\n  antiquewhite: 0xfaebd7,\r\n  aqua: 0x00ffff,\r\n  aquamarine: 0x7fffd4,\r\n  azure: 0xf0ffff,\r\n  beige: 0xf5f5dc,\r\n  bisque: 0xffe4c4,\r\n  black: 0x000000,\r\n  blanchedalmond: 0xffebcd,\r\n  blue: 0x0000ff,\r\n  blueviolet: 0x8a2be2,\r\n  brown: 0xa52a2a,\r\n  burlywood: 0xdeb887,\r\n  cadetblue: 0x5f9ea0,\r\n  chartreuse: 0x7fff00,\r\n  chocolate: 0xd2691e,\r\n  coral: 0xff7f50,\r\n  cornflowerblue: 0x6495ed,\r\n  cornsilk: 0xfff8dc,\r\n  crimson: 0xdc143c,\r\n  cyan: 0x00ffff,\r\n  darkblue: 0x00008b,\r\n  darkcyan: 0x008b8b,\r\n  darkgoldenrod: 0xb8860b,\r\n  darkgray: 0xa9a9a9,\r\n  darkgreen: 0x006400,\r\n  darkgrey: 0xa9a9a9,\r\n  darkkhaki: 0xbdb76b,\r\n  darkmagenta: 0x8b008b,\r\n  darkolivegreen: 0x556b2f,\r\n  darkorange: 0xff8c00,\r\n  darkorchid: 0x9932cc,\r\n  darkred: 0x8b0000,\r\n  darksalmon: 0xe9967a,\r\n  darkseagreen: 0x8fbc8f,\r\n  darkslateblue: 0x483d8b,\r\n  darkslategray: 0x2f4f4f,\r\n  darkslategrey: 0x2f4f4f,\r\n  darkturquoise: 0x00ced1,\r\n  darkviolet: 0x9400d3,\r\n  deeppink: 0xff1493,\r\n  deepskyblue: 0x00bfff,\r\n  dimgray: 0x696969,\r\n  dimgrey: 0x696969,\r\n  dodgerblue: 0x1e90ff,\r\n  firebrick: 0xb22222,\r\n  floralwhite: 0xfffaf0,\r\n  forestgreen: 0x228b22,\r\n  fuchsia: 0xff00ff,\r\n  gainsboro: 0xdcdcdc,\r\n  ghostwhite: 0xf8f8ff,\r\n  gold: 0xffd700,\r\n  goldenrod: 0xdaa520,\r\n  gray: 0x808080,\r\n  green: 0x008000,\r\n  greenyellow: 0xadff2f,\r\n  grey: 0x808080,\r\n  honeydew: 0xf0fff0,\r\n  hotpink: 0xff69b4,\r\n  indianred: 0xcd5c5c,\r\n  indigo: 0x4b0082,\r\n  ivory: 0xfffff0,\r\n  khaki: 0xf0e68c,\r\n  lavender: 0xe6e6fa,\r\n  lavenderblush: 0xfff0f5,\r\n  lawngreen: 0x7cfc00,\r\n  lemonchiffon: 0xfffacd,\r\n  lightblue: 0xadd8e6,\r\n  lightcoral: 0xf08080,\r\n  lightcyan: 0xe0ffff,\r\n  lightgoldenrodyellow: 0xfafad2,\r\n  lightgray: 0xd3d3d3,\r\n  lightgreen: 0x90ee90,\r\n  lightgrey: 0xd3d3d3,\r\n  lightpink: 0xffb6c1,\r\n  lightsalmon: 0xffa07a,\r\n  lightseagreen: 0x20b2aa,\r\n  lightskyblue: 0x87cefa,\r\n  lightslategray: 0x778899,\r\n  lightslategrey: 0x778899,\r\n  lightsteelblue: 0xb0c4de,\r\n  lightyellow: 0xffffe0,\r\n  lime: 0x00ff00,\r\n  limegreen: 0x32cd32,\r\n  linen: 0xfaf0e6,\r\n  magenta: 0xff00ff,\r\n  maroon: 0x800000,\r\n  mediumaquamarine: 0x66cdaa,\r\n  mediumblue: 0x0000cd,\r\n  mediumorchid: 0xba55d3,\r\n  mediumpurple: 0x9370db,\r\n  mediumseagreen: 0x3cb371,\r\n  mediumslateblue: 0x7b68ee,\r\n  mediumspringgreen: 0x00fa9a,\r\n  mediumturquoise: 0x48d1cc,\r\n  mediumvioletred: 0xc71585,\r\n  midnightblue: 0x191970,\r\n  mintcream: 0xf5fffa,\r\n  mistyrose: 0xffe4e1,\r\n  moccasin: 0xffe4b5,\r\n  navajowhite: 0xffdead,\r\n  navy: 0x000080,\r\n  oldlace: 0xfdf5e6,\r\n  olive: 0x808000,\r\n  olivedrab: 0x6b8e23,\r\n  orange: 0xffa500,\r\n  orangered: 0xff4500,\r\n  orchid: 0xda70d6,\r\n  palegoldenrod: 0xeee8aa,\r\n  palegreen: 0x98fb98,\r\n  paleturquoise: 0xafeeee,\r\n  palevioletred: 0xdb7093,\r\n  papayawhip: 0xffefd5,\r\n  peachpuff: 0xffdab9,\r\n  peru: 0xcd853f,\r\n  pink: 0xffc0cb,\r\n  plum: 0xdda0dd,\r\n  powderblue: 0xb0e0e6,\r\n  purple: 0x800080,\r\n  red: 0xff0000,\r\n  rosybrown: 0xbc8f8f,\r\n  royalblue: 0x4169e1,\r\n  saddlebrown: 0x8b4513,\r\n  salmon: 0xfa8072,\r\n  sandybrown: 0xf4a460,\r\n  seagreen: 0x2e8b57,\r\n  seashell: 0xfff5ee,\r\n  sienna: 0xa0522d,\r\n  silver: 0xc0c0c0,\r\n  skyblue: 0x87ceeb,\r\n  slateblue: 0x6a5acd,\r\n  slategray: 0x708090,\r\n  slategrey: 0x708090,\r\n  snow: 0xfffafa,\r\n  springgreen: 0x00ff7f,\r\n  steelblue: 0x4682b4,\r\n  tan: 0xd2b48c,\r\n  teal: 0x008080,\r\n  thistle: 0xd8bfd8,\r\n  tomato: 0xff6347,\r\n  turquoise: 0x40e0d0,\r\n  violet: 0xee82ee,\r\n  wheat: 0xf5deb3,\r\n  white: 0xffffff,\r\n  whitesmoke: 0xf5f5f5,\r\n  yellow: 0xffff00,\r\n  yellowgreen: 0x9acd32\r\n});\r\n\r\nd3_rgb_names.forEach(function(key, value) {\r\n  d3_rgb_names.set(key, d3_rgbNumber(value));\r\n});\r\n\r\nd3.interpolateRgb = d3_interpolateRgb;\r\n\r\nfunction d3_interpolateRgb(a, b) {\r\n  a = d3.rgb(a);\r\n  b = d3.rgb(b);\r\n  var ar = a.r,\r\n      ag = a.g,\r\n      ab = a.b,\r\n      br = b.r - ar,\r\n      bg = b.g - ag,\r\n      bb = b.b - ab;\r\n  return function(t) {\r\n    return \"#\"\r\n        + d3_rgb_hex(Math.round(ar + br * t))\r\n        + d3_rgb_hex(Math.round(ag + bg * t))\r\n        + d3_rgb_hex(Math.round(ab + bb * t));\r\n  };\r\n}\r\n\r\nd3.interpolateObject = d3_interpolateObject;\r\n\r\nfunction d3_interpolateObject(a, b) {\r\n  var i = {},\r\n      c = {},\r\n      k;\r\n  for (k in a) {\r\n    if (k in b) {\r\n      i[k] = d3_interpolate(a[k], b[k]);\r\n    } else {\r\n      c[k] = a[k];\r\n    }\r\n  }\r\n  for (k in b) {\r\n    if (!(k in a)) {\r\n      c[k] = b[k];\r\n    }\r\n  }\r\n  return function(t) {\r\n    for (k in i) c[k] = i[k](t);\r\n    return c;\r\n  };\r\n}\r\n\r\nd3.interpolateArray = d3_interpolateArray;\r\n\r\nfunction d3_interpolateArray(a, b) {\r\n  var x = [],\r\n      c = [],\r\n      na = a.length,\r\n      nb = b.length,\r\n      n0 = Math.min(a.length, b.length),\r\n      i;\r\n  for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\r\n  for (; i < na; ++i) c[i] = a[i];\r\n  for (; i < nb; ++i) c[i] = b[i];\r\n  return function(t) {\r\n    for (i = 0; i < n0; ++i) c[i] = x[i](t);\r\n    return c;\r\n  };\r\n}\r\nd3.interpolateNumber = d3_interpolateNumber;\r\n\r\nfunction d3_interpolateNumber(a, b) {\r\n  b -= a = +a;\r\n  return function(t) { return a + b * t; };\r\n}\r\n\r\nd3.interpolateString = d3_interpolateString;\r\n\r\nfunction d3_interpolateString(a, b) {\r\n  var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, // scan index for next number in b\r\n      am, // current match in a\r\n      bm, // current match in b\r\n      bs, // string preceding current number in b, if any\r\n      i = -1, // index in s\r\n      s = [], // string constants and placeholders\r\n      q = []; // number interpolators\r\n\r\n  // Coerce inputs to strings.\r\n  a = a + \"\", b = b + \"\";\r\n\r\n  // Interpolate pairs of numbers in a & b.\r\n  while ((am = d3_interpolate_numberA.exec(a))\r\n      && (bm = d3_interpolate_numberB.exec(b))) {\r\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\r\n      bs = b.substring(bi, bs);\r\n      if (s[i]) s[i] += bs; // coalesce with previous string\r\n      else s[++i] = bs;\r\n    }\r\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\r\n      if (s[i]) s[i] += bm; // coalesce with previous string\r\n      else s[++i] = bm;\r\n    } else { // interpolate non-matching numbers\r\n      s[++i] = null;\r\n      q.push({i: i, x: d3_interpolateNumber(am, bm)});\r\n    }\r\n    bi = d3_interpolate_numberB.lastIndex;\r\n  }\r\n\r\n  // Add remains of b.\r\n  if (bi < b.length) {\r\n    bs = b.substring(bi);\r\n    if (s[i]) s[i] += bs; // coalesce with previous string\r\n    else s[++i] = bs;\r\n  }\r\n\r\n  // Special optimization for only a single match.\r\n  // Otherwise, interpolate each of the numbers and rejoin the string.\r\n  return s.length < 2\r\n      ? (q[0] ? (b = q[0].x, function(t) { return b(t) + \"\"; })\r\n      : function() { return b; })\r\n      : (b = q.length, function(t) {\r\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\r\n          return s.join(\"\");\r\n        });\r\n}\r\n\r\nvar d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\r\n    d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\r\n\r\nd3.interpolate = d3_interpolate;\r\n\r\nfunction d3_interpolate(a, b) {\r\n  var i = d3.interpolators.length, f;\r\n  while (--i >= 0 && !(f = d3.interpolators[i](a, b)));\r\n  return f;\r\n}\r\n\r\nd3.interpolators = [\r\n  function(a, b) {\r\n    var t = typeof b;\r\n    return (t === \"string\" ? (d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString)\r\n        : b instanceof d3_color ? d3_interpolateRgb\r\n        : Array.isArray(b) ? d3_interpolateArray\r\n        : t === \"object\" && isNaN(b) ? d3_interpolateObject\r\n        : d3_interpolateNumber)(a, b);\r\n  }\r\n];\r\n\r\nd3.transform = function(string) {\r\n  var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\r\n  return (d3.transform = function(string) {\r\n    if (string != null) {\r\n      g.setAttribute(\"transform\", string);\r\n      var t = g.transform.baseVal.consolidate();\r\n    }\r\n    return new d3_transform(t ? t.matrix : d3_transformIdentity);\r\n  })(string);\r\n};\r\n\r\n// Compute x-scale and normalize the first row.\r\n// Compute shear and make second row orthogonal to first.\r\n// Compute y-scale and normalize the second row.\r\n// Finally, compute the rotation.\r\nfunction d3_transform(m) {\r\n  var r0 = [m.a, m.b],\r\n      r1 = [m.c, m.d],\r\n      kx = d3_transformNormalize(r0),\r\n      kz = d3_transformDot(r0, r1),\r\n      ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\r\n  if (r0[0] * r1[1] < r1[0] * r0[1]) {\r\n    r0[0] *= -1;\r\n    r0[1] *= -1;\r\n    kx *= -1;\r\n    kz *= -1;\r\n  }\r\n  this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\r\n  this.translate = [m.e, m.f];\r\n  this.scale = [kx, ky];\r\n  this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\r\n};\r\n\r\nd3_transform.prototype.toString = function() {\r\n  return \"translate(\" + this.translate\r\n      + \")rotate(\" + this.rotate\r\n      + \")skewX(\" + this.skew\r\n      + \")scale(\" + this.scale\r\n      + \")\";\r\n};\r\n\r\nfunction d3_transformDot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\nfunction d3_transformNormalize(a) {\r\n  var k = Math.sqrt(d3_transformDot(a, a));\r\n  if (k) {\r\n    a[0] /= k;\r\n    a[1] /= k;\r\n  }\r\n  return k;\r\n}\r\n\r\nfunction d3_transformCombine(a, b, k) {\r\n  a[0] += k * b[0];\r\n  a[1] += k * b[1];\r\n  return a;\r\n}\r\n\r\nvar d3_transformIdentity = {a: 1, b: 0, c: 0, d: 1, e: 0, f: 0};\r\n\r\nd3.interpolateTransform = d3_interpolateTransform;\r\n\r\nfunction d3_interpolateTransform(a, b) {\r\n  var s = [], // string constants and placeholders\r\n      q = [], // number interpolators\r\n      n,\r\n      A = d3.transform(a),\r\n      B = d3.transform(b),\r\n      ta = A.translate,\r\n      tb = B.translate,\r\n      ra = A.rotate,\r\n      rb = B.rotate,\r\n      wa = A.skew,\r\n      wb = B.skew,\r\n      ka = A.scale,\r\n      kb = B.scale;\r\n\r\n  if (ta[0] != tb[0] || ta[1] != tb[1]) {\r\n    s.push(\"translate(\", null, \",\", null, \")\");\r\n    q.push({i: 1, x: d3_interpolateNumber(ta[0], tb[0])}, {i: 3, x: d3_interpolateNumber(ta[1], tb[1])});\r\n  } else if (tb[0] || tb[1]) {\r\n    s.push(\"translate(\" + tb + \")\");\r\n  } else {\r\n    s.push(\"\");\r\n  }\r\n\r\n  if (ra != rb) {\r\n    if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360; // shortest path\r\n    q.push({i: s.push(s.pop() + \"rotate(\", null, \")\") - 2, x: d3_interpolateNumber(ra, rb)});\r\n  } else if (rb) {\r\n    s.push(s.pop() + \"rotate(\" + rb + \")\");\r\n  }\r\n\r\n  if (wa != wb) {\r\n    q.push({i: s.push(s.pop() + \"skewX(\", null, \")\") - 2, x: d3_interpolateNumber(wa, wb)});\r\n  } else if (wb) {\r\n    s.push(s.pop() + \"skewX(\" + wb + \")\");\r\n  }\r\n\r\n  if (ka[0] != kb[0] || ka[1] != kb[1]) {\r\n    n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\r\n    q.push({i: n - 4, x: d3_interpolateNumber(ka[0], kb[0])}, {i: n - 2, x: d3_interpolateNumber(ka[1], kb[1])});\r\n  } else if (kb[0] != 1 || kb[1] != 1) {\r\n    s.push(s.pop() + \"scale(\" + kb + \")\");\r\n  }\r\n\r\n  n = q.length;\r\n  return function(t) {\r\n    var i = -1, o;\r\n    while (++i < n) s[(o = q[i]).i] = o.x(t);\r\n    return s.join(\"\");\r\n  };\r\n}\r\n\r\nd3_transitionPrototype.tween = function(name, tween) {\r\n  var id = this.id;\r\n  if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\r\n  return d3_selection_each(this, tween == null\r\n        ? function(node) { node.__transition__[id].tween.remove(name); }\r\n        : function(node) { node.__transition__[id].tween.set(name, tween); });\r\n};\r\n\r\nfunction d3_transition_tween(groups, name, value, tween) {\r\n  var id = groups.id;\r\n  return d3_selection_each(groups, typeof value === \"function\"\r\n      ? function(node, i, j) { node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j))); }\r\n      : (value = tween(value), function(node) { node.__transition__[id].tween.set(name, value); }));\r\n}\r\n\r\nd3_transitionPrototype.attr = function(nameNS, value) {\r\n  if (arguments.length < 2) {\r\n\r\n    // For attr(object), the object specifies the names and values of the\r\n    // attributes to transition. The values may be functions that are\r\n    // evaluated for each element.\r\n    for (value in nameNS) this.attr(value, nameNS[value]);\r\n    return this;\r\n  }\r\n\r\n  var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate,\r\n      name = d3.ns.qualify(nameNS);\r\n\r\n  // For attr(string, null), remove the attribute with the specified name.\r\n  function attrNull() {\r\n    this.removeAttribute(name);\r\n  }\r\n  function attrNullNS() {\r\n    this.removeAttributeNS(name.space, name.local);\r\n  }\r\n\r\n  // For attr(string, string), set the attribute with the specified name.\r\n  function attrTween(b) {\r\n    return b == null ? attrNull : (b += \"\", function() {\r\n      var a = this.getAttribute(name), i;\r\n      return a !== b && (i = interpolate(a, b), function(t) { this.setAttribute(name, i(t)); });\r\n    });\r\n  }\r\n  function attrTweenNS(b) {\r\n    return b == null ? attrNullNS : (b += \"\", function() {\r\n      var a = this.getAttributeNS(name.space, name.local), i;\r\n      return a !== b && (i = interpolate(a, b), function(t) { this.setAttributeNS(name.space, name.local, i(t)); });\r\n    });\r\n  }\r\n\r\n  return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\r\n};\r\n\r\nd3_transitionPrototype.attrTween = function(nameNS, tween) {\r\n  var name = d3.ns.qualify(nameNS);\r\n\r\n  function attrTween(d, i) {\r\n    var f = tween.call(this, d, i, this.getAttribute(name));\r\n    return f && function(t) { this.setAttribute(name, f(t)); };\r\n  }\r\n  function attrTweenNS(d, i) {\r\n    var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\r\n    return f && function(t) { this.setAttributeNS(name.space, name.local, f(t)); };\r\n  }\r\n\r\n  return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\r\n};\r\n\r\nd3_transitionPrototype.style = function(name, value, priority) {\r\n  var n = arguments.length;\r\n  if (n < 3) {\r\n\r\n    // For style(object) or style(object, string), the object specifies the\r\n    // names and values of the attributes to set or remove. The values may be\r\n    // functions that are evaluated for each element. The optional string\r\n    // specifies the priority.\r\n    if (typeof name !== \"string\") {\r\n      if (n < 2) value = \"\";\r\n      for (priority in name) this.style(priority, name[priority], value);\r\n      return this;\r\n    }\r\n\r\n    // For style(string, string) or style(string, function), use the default\r\n    // priority. The priority is ignored for style(string, null).\r\n    priority = \"\";\r\n  }\r\n\r\n  // For style(name, null) or style(name, null, priority), remove the style\r\n  // property with the specified name. The priority is ignored.\r\n  function styleNull() {\r\n    this.style.removeProperty(name);\r\n  }\r\n\r\n  // For style(name, string) or style(name, string, priority), set the style\r\n  // property with the specified name, using the specified priority.\r\n  // Otherwise, a name, value and priority are specified, and handled as below.\r\n  function styleString(b) {\r\n    return b == null ? styleNull : (b += \"\", function() {\r\n      var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\r\n      return a !== b && (i = d3_interpolate(a, b), function(t) { this.style.setProperty(name, i(t), priority); });\r\n    });\r\n  }\r\n\r\n  return d3_transition_tween(this, \"style.\" + name, value, styleString);\r\n};\r\n\r\nd3_transitionPrototype.styleTween = function(name, tween, priority) {\r\n  if (arguments.length < 3) priority = \"\";\r\n\r\n  function styleTween(d, i) {\r\n    var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\r\n    return f && function(t) { this.style.setProperty(name, f(t), priority); };\r\n  }\r\n\r\n  return this.tween(\"style.\" + name, styleTween);\r\n};\r\n\r\nd3_transitionPrototype.text = function(value) {\r\n  return d3_transition_tween(this, \"text\", value, d3_transition_text);\r\n};\r\n\r\nfunction d3_transition_text(b) {\r\n  if (b == null) b = \"\";\r\n  return function() { this.textContent = b; };\r\n}\r\n\r\nd3_transitionPrototype.remove = function() {\r\n  return this.each(\"end.transition\", function() {\r\n    var p;\r\n    if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);\r\n  });\r\n};\r\n\r\nd3_transitionPrototype.ease = function(value) {\r\n  var id = this.id;\r\n  if (arguments.length < 1) return this.node().__transition__[id].ease;\r\n  if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\r\n  return d3_selection_each(this, function(node) { node.__transition__[id].ease = value; });\r\n};\r\n\r\nd3_transitionPrototype.delay = function(value) {\r\n  var id = this.id;\r\n  if (arguments.length < 1) return this.node().__transition__[id].delay;\r\n  return d3_selection_each(this, typeof value === \"function\"\r\n      ? function(node, i, j) { node.__transition__[id].delay = +value.call(node, node.__data__, i, j); }\r\n      : (value = +value, function(node) { node.__transition__[id].delay = value; }));\r\n};\r\n\r\nd3_transitionPrototype.duration = function(value) {\r\n  var id = this.id;\r\n  if (arguments.length < 1) return this.node().__transition__[id].duration;\r\n  return d3_selection_each(this, typeof value === \"function\"\r\n      ? function(node, i, j) { node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j)); }\r\n      : (value = Math.max(1, value), function(node) { node.__transition__[id].duration = value; }));\r\n};\r\n\r\nd3_transitionPrototype.transition = function() {\r\n  var id0 = this.id,\r\n      id1 = ++d3_transitionId,\r\n      subgroups = [],\r\n      subgroup,\r\n      group,\r\n      node,\r\n      transition;\r\n\r\n  for (var j = 0, m = this.length; j < m; j++) {\r\n    subgroups.push(subgroup = []);\r\n    for (var group = this[j], i = 0, n = group.length; i < n; i++) {\r\n      if (node = group[i]) {\r\n        transition = Object.create(node.__transition__[id0]);\r\n        transition.delay += transition.duration;\r\n        d3_transitionNode(node, i, id1, transition);\r\n      }\r\n      subgroup.push(node);\r\n    }\r\n  }\r\n\r\n  return d3_transition(subgroups, id1);\r\n};\r\n\r\nfunction d3_transitionNode(node, i, id, inherit) {\r\n  var lock = node.__transition__ || (node.__transition__ = {active: 0, count: 0}),\r\n      transition = lock[id];\r\n\r\n  if (!transition) {\r\n    var time = inherit.time;\r\n\r\n    transition = lock[id] = {\r\n      tween: new d3_Map,\r\n      time: time,\r\n      ease: inherit.ease,\r\n      delay: inherit.delay,\r\n      duration: inherit.duration\r\n    };\r\n\r\n    ++lock.count;\r\n\r\n    d3.timer(function(elapsed) {\r\n      var d = node.__data__,\r\n          ease = transition.ease,\r\n          delay = transition.delay,\r\n          duration = transition.duration,\r\n          timer = d3_timer_active,\r\n          tweened = [];\r\n\r\n      timer.t = delay + time;\r\n      if (delay <= elapsed) return start(elapsed - delay);\r\n      timer.c = start;\r\n\r\n      function start(elapsed) {\r\n        if (lock.active > id) return stop();\r\n        lock.active = id;\r\n        transition.event && transition.event.start.call(node, d, i);\r\n\r\n        transition.tween.forEach(function(key, value) {\r\n          if (value = value.call(node, d, i)) {\r\n            tweened.push(value);\r\n          }\r\n        });\r\n\r\n        d3.timer(function() { // defer to end of current frame\r\n          timer.c = tick(elapsed || 1) ? d3_true : tick;\r\n          return 1;\r\n        }, 0, time);\r\n      }\r\n\r\n      function tick(elapsed) {\r\n        if (lock.active !== id) return stop();\r\n\r\n        var t = elapsed / duration,\r\n            e = ease(t),\r\n            n = tweened.length;\r\n\r\n        while (n > 0) {\r\n          tweened[--n].call(node, e);\r\n        }\r\n\r\n        if (t >= 1) {\r\n          transition.event && transition.event.end.call(node, d, i);\r\n          return stop();\r\n        }\r\n      }\r\n\r\n      function stop() {\r\n        if (--lock.count) delete lock[id];\r\n        else delete node.__transition__;\r\n        return 1;\r\n      }\r\n    }, 0, time);\r\n  }\r\n}\r\n\r\nd3_transitionPrototype.each = function(type, listener) {\r\n  var id = this.id;\r\n  if (arguments.length < 2) {\r\n    var inherit = d3_transitionInherit,\r\n        inheritId = d3_transitionInheritId;\r\n    d3_transitionInheritId = id;\r\n    d3_selection_each(this, function(node, i, j) {\r\n      d3_transitionInherit = node.__transition__[id];\r\n      type.call(node, node.__data__, i, j);\r\n    });\r\n    d3_transitionInherit = inherit;\r\n    d3_transitionInheritId = inheritId;\r\n  } else {\r\n    d3_selection_each(this, function(node) {\r\n      var transition = node.__transition__[id];\r\n      (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\r\n    });\r\n  }\r\n  return this;\r\n};\r\n\r\nd3.xhr = d3_xhrType(d3_identity);\r\n\r\nfunction d3_xhrType(response) {\r\n  return function(url, mimeType, callback) {\r\n    if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, mimeType = null;\r\n    return d3_xhr(url, mimeType, response, callback);\r\n  };\r\n}\r\n\r\nfunction d3_xhr(url, mimeType, response, callback) {\r\n  var xhr = {},\r\n      dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\r\n      headers = {},\r\n      request = new XMLHttpRequest,\r\n      responseType = null;\r\n\r\n  // If IE does not support CORS, use XDomainRequest.\r\n  if (d3_window.XDomainRequest\r\n      && !(\"withCredentials\" in request)\r\n      && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest;\r\n\r\n  \"onload\" in request\r\n      ? request.onload = request.onerror = respond\r\n      : request.onreadystatechange = function() { request.readyState > 3 && respond(); };\r\n\r\n  function respond() {\r\n    var status = request.status, result;\r\n    if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {\r\n      try {\r\n        result = response.call(xhr, request);\r\n      } catch (e) {\r\n        dispatch.error.call(xhr, e);\r\n        return;\r\n      }\r\n      dispatch.load.call(xhr, result);\r\n    } else {\r\n      dispatch.error.call(xhr, request);\r\n    }\r\n  }\r\n\r\n  request.onprogress = function(event) {\r\n    var o = d3.event;\r\n    d3.event = event;\r\n    try { dispatch.progress.call(xhr, request); }\r\n    finally { d3.event = o; }\r\n  };\r\n\r\n  xhr.header = function(name, value) {\r\n    name = (name + \"\").toLowerCase();\r\n    if (arguments.length < 2) return headers[name];\r\n    if (value == null) delete headers[name];\r\n    else headers[name] = value + \"\";\r\n    return xhr;\r\n  };\r\n\r\n  // If mimeType is non-null and no Accept header is set, a default is used.\r\n  xhr.mimeType = function(value) {\r\n    if (!arguments.length) return mimeType;\r\n    mimeType = value == null ? null : value + \"\";\r\n    return xhr;\r\n  };\r\n\r\n  // Specifies what type the response value should take;\r\n  // for instance, arraybuffer, blob, document, or text.\r\n  xhr.responseType = function(value) {\r\n    if (!arguments.length) return responseType;\r\n    responseType = value;\r\n    return xhr;\r\n  };\r\n\r\n  // Specify how to convert the response content to a specific type;\r\n  // changes the callback value on \"load\" events.\r\n  xhr.response = function(value) {\r\n    response = value;\r\n    return xhr;\r\n  };\r\n\r\n  // Convenience methods.\r\n  [\"get\", \"post\"].forEach(function(method) {\r\n    xhr[method] = function() {\r\n      return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));\r\n    };\r\n  });\r\n\r\n  // If callback is non-null, it will be used for error and load events.\r\n  xhr.send = function(method, data, callback) {\r\n    if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\r\n    request.open(method, url, true);\r\n    if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\r\n    if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\r\n    if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\r\n    if (responseType != null) request.responseType = responseType;\r\n    if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) { callback(null, request); });\r\n    dispatch.beforesend.call(xhr, request);\r\n    request.send(data == null ? null : data);\r\n    return xhr;\r\n  };\r\n\r\n  xhr.abort = function() {\r\n    request.abort();\r\n    return xhr;\r\n  };\r\n\r\n  d3.rebind(xhr, dispatch, \"on\");\r\n\r\n  return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\r\n};\r\n\r\nfunction d3_xhr_fixCallback(callback) {\r\n  return callback.length === 1\r\n      ? function(error, request) { callback(error == null ? request : null); }\r\n      : callback;\r\n}\r\n\r\nd3.json = function(url, callback) {\r\n  return d3_xhr(url, \"application/json\", d3_json, callback);\r\n};\r\n\r\nfunction d3_json(request) {\r\n  return JSON.parse(request.responseText);\r\n}\r\nvar d3_time = d3.time = {},\r\n    d3_date = Date;\r\n\r\nfunction d3_date_utc() {\r\n  this._ = new Date(arguments.length > 1\r\n      ? Date.UTC.apply(this, arguments)\r\n      : arguments[0]);\r\n}\r\n\r\nd3_date_utc.prototype = {\r\n  getDate: function() { return this._.getUTCDate(); },\r\n  getDay: function() { return this._.getUTCDay(); },\r\n  getFullYear: function() { return this._.getUTCFullYear(); },\r\n  getHours: function() { return this._.getUTCHours(); },\r\n  getMilliseconds: function() { return this._.getUTCMilliseconds(); },\r\n  getMinutes: function() { return this._.getUTCMinutes(); },\r\n  getMonth: function() { return this._.getUTCMonth(); },\r\n  getSeconds: function() { return this._.getUTCSeconds(); },\r\n  getTime: function() { return this._.getTime(); },\r\n  getTimezoneOffset: function() { return 0; },\r\n  valueOf: function() { return this._.valueOf(); },\r\n  setDate: function() { d3_time_prototype.setUTCDate.apply(this._, arguments); },\r\n  setDay: function() { d3_time_prototype.setUTCDay.apply(this._, arguments); },\r\n  setFullYear: function() { d3_time_prototype.setUTCFullYear.apply(this._, arguments); },\r\n  setHours: function() { d3_time_prototype.setUTCHours.apply(this._, arguments); },\r\n  setMilliseconds: function() { d3_time_prototype.setUTCMilliseconds.apply(this._, arguments); },\r\n  setMinutes: function() { d3_time_prototype.setUTCMinutes.apply(this._, arguments); },\r\n  setMonth: function() { d3_time_prototype.setUTCMonth.apply(this._, arguments); },\r\n  setSeconds: function() { d3_time_prototype.setUTCSeconds.apply(this._, arguments); },\r\n  setTime: function() { d3_time_prototype.setTime.apply(this._, arguments); }\r\n};\r\n\r\nvar d3_time_prototype = Date.prototype;\r\nfunction d3_format_precision(x, p) {\r\n  return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\r\n}\r\nd3.round = function(x, n) {\r\n  return n\r\n      ? Math.round(x * (n = Math.pow(10, n))) / n\r\n      : Math.round(x);\r\n};\r\n\r\nvar d3_formatPrefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"].map(d3_formatPrefix);\r\n\r\nd3.formatPrefix = function(value, precision) {\r\n  var i = 0;\r\n  if (value) {\r\n    if (value < 0) value *= -1;\r\n    if (precision) value = d3.round(value, d3_format_precision(value, precision));\r\n    i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\r\n    i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\r\n  }\r\n  return d3_formatPrefixes[8 + i / 3];\r\n};\r\n\r\nfunction d3_formatPrefix(d, i) {\r\n  var k = Math.pow(10, abs(8 - i) * 3);\r\n  return {\r\n    scale: i > 8 ? function(d) { return d / k; } : function(d) { return d * k; },\r\n    symbol: d\r\n  };\r\n}\r\n\r\nfunction d3_locale_numberFormat(locale) {\r\n  var locale_decimal = locale.decimal,\r\n      locale_thousands = locale.thousands,\r\n      locale_grouping = locale.grouping,\r\n      locale_currency = locale.currency,\r\n      formatGroup = locale_grouping ? function(value) {\r\n        var i = value.length,\r\n            t = [],\r\n            j = 0,\r\n            g = locale_grouping[0];\r\n        while (i > 0 && g > 0) {\r\n          t.push(value.substring(i -= g, i + g));\r\n          g = locale_grouping[j = (j + 1) % locale_grouping.length];\r\n        }\r\n        return t.reverse().join(locale_thousands);\r\n      } : d3_identity;\r\n\r\n  return function(specifier) {\r\n    var match = d3_format_re.exec(specifier),\r\n        fill = match[1] || \" \",\r\n        align = match[2] || \">\",\r\n        sign = match[3] || \"\",\r\n        symbol = match[4] || \"\",\r\n        zfill = match[5],\r\n        width = +match[6],\r\n        comma = match[7],\r\n        precision = match[8],\r\n        type = match[9],\r\n        scale = 1,\r\n        prefix = \"\",\r\n        suffix = \"\",\r\n        integer = false;\r\n\r\n    if (precision) precision = +precision.substring(1);\r\n\r\n    if (zfill || fill === \"0\" && align === \"=\") {\r\n      zfill = fill = \"0\";\r\n      align = \"=\";\r\n      if (comma) width -= Math.floor((width - 1) / 4);\r\n    }\r\n\r\n    switch (type) {\r\n      case \"n\": comma = true; type = \"g\"; break;\r\n      case \"%\": scale = 100; suffix = \"%\"; type = \"f\"; break;\r\n      case \"p\": scale = 100; suffix = \"%\"; type = \"r\"; break;\r\n      case \"b\":\r\n      case \"o\":\r\n      case \"x\":\r\n      case \"X\": if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\r\n      case \"c\":\r\n      case \"d\": integer = true; precision = 0; break;\r\n      case \"s\": scale = -1; type = \"r\"; break;\r\n    }\r\n\r\n    if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\r\n\r\n    // If no precision is specified for r, fallback to general notation.\r\n    if (type == \"r\" && !precision) type = \"g\";\r\n\r\n    // Ensure that the requested precision is in the supported range.\r\n    if (precision != null) {\r\n      if (type == \"g\") precision = Math.max(1, Math.min(21, precision));\r\n      else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\r\n    }\r\n\r\n    type = d3_format_types.get(type) || d3_format_typeDefault;\r\n\r\n    var zcomma = zfill && comma;\r\n\r\n    return function(value) {\r\n      var fullSuffix = suffix;\r\n\r\n      // Return the empty string for floats formatted as ints.\r\n      if (integer && (value % 1)) return \"\";\r\n\r\n      // Convert negative to positive, and record the sign prefix.\r\n      var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign;\r\n\r\n      // Apply the scale, computing it from the value's exponent for si format.\r\n      // Preserve the existing suffix, if any, such as the currency symbol.\r\n      if (scale < 0) {\r\n        var unit = d3.formatPrefix(value, precision);\r\n        value = unit.scale(value);\r\n        fullSuffix = unit.symbol + suffix;\r\n      } else {\r\n        value *= scale;\r\n      }\r\n\r\n      // Convert to the desired precision.\r\n      value = type(value, precision);\r\n\r\n      // Break the value into the integer part (before) and decimal part (after).\r\n      var i = value.lastIndexOf(\".\"),\r\n          before = i < 0 ? value : value.substring(0, i),\r\n          after = i < 0 ? \"\" : locale_decimal + value.substring(i + 1);\r\n\r\n       // If the fill character is not \"0\", grouping is applied before padding.\r\n      if (!zfill && comma) before = formatGroup(before);\r\n\r\n      var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length),\r\n          padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\r\n\r\n      // If the fill character is \"0\", grouping is applied after padding.\r\n      if (zcomma) before = formatGroup(padding + before);\r\n\r\n      // Apply prefix.\r\n      negative += prefix;\r\n\r\n      // Rejoin integer and decimal parts.\r\n      value = before + after;\r\n\r\n      return (align === \"<\" ? negative + value + padding\r\n            : align === \">\" ? padding + negative + value\r\n            : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length)\r\n            : negative + (zcomma ? value : padding + value)) + fullSuffix;\r\n    };\r\n  };\r\n}\r\n\r\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\r\nvar d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\r\n\r\nvar d3_format_types = d3.map({\r\n  b: function(x) { return x.toString(2); },\r\n  c: function(x) { return String.fromCharCode(x); },\r\n  o: function(x) { return x.toString(8); },\r\n  x: function(x) { return x.toString(16); },\r\n  X: function(x) { return x.toString(16).toUpperCase(); },\r\n  g: function(x, p) { return x.toPrecision(p); },\r\n  e: function(x, p) { return x.toExponential(p); },\r\n  f: function(x, p) { return x.toFixed(p); },\r\n  r: function(x, p) { return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p)))); }\r\n});\r\n\r\nfunction d3_format_typeDefault(x) {\r\n  return x + \"\";\r\n}\r\n\r\nfunction d3_time_interval(local, step, number) {\r\n\r\n  function round(date) {\r\n    var d0 = local(date), d1 = offset(d0, 1);\r\n    return date - d0 < d1 - date ? d0 : d1;\r\n  }\r\n\r\n  function ceil(date) {\r\n    step(date = local(new d3_date(date - 1)), 1);\r\n    return date;\r\n  }\r\n\r\n  function offset(date, k) {\r\n    step(date = new d3_date(+date), k);\r\n    return date;\r\n  }\r\n\r\n  function range(t0, t1, dt) {\r\n    var time = ceil(t0), times = [];\r\n    if (dt > 1) {\r\n      while (time < t1) {\r\n        if (!(number(time) % dt)) times.push(new Date(+time));\r\n        step(time, 1);\r\n      }\r\n    } else {\r\n      while (time < t1) times.push(new Date(+time)), step(time, 1);\r\n    }\r\n    return times;\r\n  }\r\n\r\n  function range_utc(t0, t1, dt) {\r\n    try {\r\n      d3_date = d3_date_utc;\r\n      var utc = new d3_date_utc();\r\n      utc._ = t0;\r\n      return range(utc, t1, dt);\r\n    } finally {\r\n      d3_date = Date;\r\n    }\r\n  }\r\n\r\n  local.floor = local;\r\n  local.round = round;\r\n  local.ceil = ceil;\r\n  local.offset = offset;\r\n  local.range = range;\r\n\r\n  var utc = local.utc = d3_time_interval_utc(local);\r\n  utc.floor = utc;\r\n  utc.round = d3_time_interval_utc(round);\r\n  utc.ceil = d3_time_interval_utc(ceil);\r\n  utc.offset = d3_time_interval_utc(offset);\r\n  utc.range = range_utc;\r\n\r\n  return local;\r\n}\r\n\r\nfunction d3_time_interval_utc(method) {\r\n  return function(date, k) {\r\n    try {\r\n      d3_date = d3_date_utc;\r\n      var utc = new d3_date_utc();\r\n      utc._ = date;\r\n      return method(utc, k)._;\r\n    } finally {\r\n      d3_date = Date;\r\n    }\r\n  };\r\n}\r\n\r\nd3_time.year = d3_time_interval(function(date) {\r\n  date = d3_time.day(date);\r\n  date.setMonth(0, 1);\r\n  return date;\r\n}, function(date, offset) {\r\n  date.setFullYear(date.getFullYear() + offset);\r\n}, function(date) {\r\n  return date.getFullYear();\r\n});\r\n\r\nd3_time.years = d3_time.year.range;\r\nd3_time.years.utc = d3_time.year.utc.range;\r\n\r\nd3_time.day = d3_time_interval(function(date) {\r\n  var day = new d3_date(2000, 0);\r\n  day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n  return day;\r\n}, function(date, offset) {\r\n  date.setDate(date.getDate() + offset);\r\n}, function(date) {\r\n  return date.getDate() - 1;\r\n});\r\n\r\nd3_time.days = d3_time.day.range;\r\nd3_time.days.utc = d3_time.day.utc.range;\r\n\r\nd3_time.dayOfYear = function(date) {\r\n  var year = d3_time.year(date);\r\n  return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\r\n};\r\n\r\n[\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"].forEach(function(day, i) {\r\n  i = 7 - i;\r\n\r\n  var interval = d3_time[day] = d3_time_interval(function(date) {\r\n    (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\r\n    return date;\r\n  }, function(date, offset) {\r\n    date.setDate(date.getDate() + Math.floor(offset) * 7);\r\n  }, function(date) {\r\n    var day = d3_time.year(date).getDay();\r\n    return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\r\n  });\r\n\r\n  d3_time[day + \"s\"] = interval.range;\r\n  d3_time[day + \"s\"].utc = interval.utc.range;\r\n\r\n  d3_time[day + \"OfYear\"] = function(date) {\r\n    var day = d3_time.year(date).getDay();\r\n    return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\r\n  };\r\n});\r\n\r\nd3_time.week = d3_time.sunday;\r\nd3_time.weeks = d3_time.sunday.range;\r\nd3_time.weeks.utc = d3_time.sunday.utc.range;\r\nd3_time.weekOfYear = d3_time.sundayOfYear;\r\n\r\nfunction d3_locale_timeFormat(locale) {\r\n  var locale_dateTime = locale.dateTime,\r\n      locale_date = locale.date,\r\n      locale_time = locale.time,\r\n      locale_periods = locale.periods,\r\n      locale_days = locale.days,\r\n      locale_shortDays = locale.shortDays,\r\n      locale_months = locale.months,\r\n      locale_shortMonths = locale.shortMonths;\r\n\r\n  function d3_time_format(template) {\r\n    var n = template.length;\r\n\r\n    function format(date) {\r\n      var string = [],\r\n          i = -1,\r\n          j = 0,\r\n          c,\r\n          p,\r\n          f;\r\n      while (++i < n) {\r\n        if (template.charCodeAt(i) === 37) {\r\n          string.push(template.substring(j, i));\r\n          if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\r\n          if (f = d3_time_formats[c]) c = f(date, p == null ? (c === \"e\" ? \" \" : \"0\") : p);\r\n          string.push(c);\r\n          j = i + 1;\r\n        }\r\n      }\r\n      string.push(template.substring(j, i));\r\n      return string.join(\"\");\r\n    }\r\n\r\n    format.parse = function(string) {\r\n      var d = {y: 1900, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0, Z: null},\r\n          i = d3_time_parse(d, template, string, 0);\r\n      if (i != string.length) return null;\r\n\r\n      // The am-pm flag is 0 for AM, and 1 for PM.\r\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\r\n\r\n      // If a time zone is specified, it is always relative to UTC;\r\n      // we need to use d3_date_utc if we aren’t already.\r\n      var localZ = d.Z != null && d3_date !== d3_date_utc,\r\n          date = new (localZ ? d3_date_utc : d3_date);\r\n\r\n      // Set year, month, date.\r\n      if (\"j\" in d) date.setFullYear(d.y, 0, d.j);\r\n      else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\r\n        date.setFullYear(d.y, 0, 1);\r\n        date.setFullYear(d.y, 0, \"W\" in d\r\n            ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7\r\n            :  d.w          + d.U * 7 - (date.getDay() + 6) % 7);\r\n      } else date.setFullYear(d.y, d.m, d.d);\r\n\r\n      // Set hours, minutes, seconds and milliseconds.\r\n      date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);\r\n\r\n      return localZ ? date._ : date;\r\n    };\r\n\r\n    format.toString = function() {\r\n      return template;\r\n    };\r\n\r\n    return format;\r\n  }\r\n\r\n  function d3_time_parse(date, template, string, j) {\r\n    var c,\r\n        p,\r\n        t,\r\n        i = 0,\r\n        n = template.length,\r\n        m = string.length;\r\n    while (i < n) {\r\n      if (j >= m) return -1;\r\n      c = template.charCodeAt(i++);\r\n      if (c === 37) {\r\n        t = template.charAt(i++);\r\n        p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\r\n        if (!p || ((j = p(date, string, j)) < 0)) return -1;\r\n      } else if (c != string.charCodeAt(j++)) {\r\n        return -1;\r\n      }\r\n    }\r\n    return j;\r\n  }\r\n\r\n  d3_time_format.utc = function(template) {\r\n    var local = d3_time_format(template);\r\n\r\n    function format(date) {\r\n      try {\r\n        d3_date = d3_date_utc;\r\n        var utc = new d3_date();\r\n        utc._ = date;\r\n        return local(utc);\r\n      } finally {\r\n        d3_date = Date;\r\n      }\r\n    }\r\n\r\n    format.parse = function(string) {\r\n      try {\r\n        d3_date = d3_date_utc;\r\n        var date = local.parse(string);\r\n        return date && date._;\r\n      } finally {\r\n        d3_date = Date;\r\n      }\r\n    };\r\n\r\n    format.toString = local.toString;\r\n\r\n    return format;\r\n  };\r\n\r\n  d3_time_format.multi =\r\n  d3_time_format.utc.multi = d3_time_formatMulti;\r\n\r\n  var d3_time_periodLookup = d3.map(),\r\n      d3_time_dayRe = d3_time_formatRe(locale_days),\r\n      d3_time_dayLookup = d3_time_formatLookup(locale_days),\r\n      d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays),\r\n      d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays),\r\n      d3_time_monthRe = d3_time_formatRe(locale_months),\r\n      d3_time_monthLookup = d3_time_formatLookup(locale_months),\r\n      d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths),\r\n      d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\r\n\r\n  locale_periods.forEach(function(p, i) {\r\n    d3_time_periodLookup.set(p.toLowerCase(), i);\r\n  });\r\n\r\n  var d3_time_formats = {\r\n    a: function(d) { return locale_shortDays[d.getDay()]; },\r\n    A: function(d) { return locale_days[d.getDay()]; },\r\n    b: function(d) { return locale_shortMonths[d.getMonth()]; },\r\n    B: function(d) { return locale_months[d.getMonth()]; },\r\n    c: d3_time_format(locale_dateTime),\r\n    d: function(d, p) { return d3_time_formatPad(d.getDate(), p, 2); },\r\n    e: function(d, p) { return d3_time_formatPad(d.getDate(), p, 2); },\r\n    H: function(d, p) { return d3_time_formatPad(d.getHours(), p, 2); },\r\n    I: function(d, p) { return d3_time_formatPad(d.getHours() % 12 || 12, p, 2); },\r\n    j: function(d, p) { return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3); },\r\n    L: function(d, p) { return d3_time_formatPad(d.getMilliseconds(), p, 3); },\r\n    m: function(d, p) { return d3_time_formatPad(d.getMonth() + 1, p, 2); },\r\n    M: function(d, p) { return d3_time_formatPad(d.getMinutes(), p, 2); },\r\n    p: function(d) { return locale_periods[+(d.getHours() >= 12)]; },\r\n    S: function(d, p) { return d3_time_formatPad(d.getSeconds(), p, 2); },\r\n    U: function(d, p) { return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2); },\r\n    w: function(d) { return d.getDay(); },\r\n    W: function(d, p) { return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2); },\r\n    x: d3_time_format(locale_date),\r\n    X: d3_time_format(locale_time),\r\n    y: function(d, p) { return d3_time_formatPad(d.getFullYear() % 100, p, 2); },\r\n    Y: function(d, p) { return d3_time_formatPad(d.getFullYear() % 10000, p, 4); },\r\n    Z: d3_time_zone,\r\n    \"%\": function() { return \"%\"; }\r\n  };\r\n\r\n  var d3_time_parsers = {\r\n    a: d3_time_parseWeekdayAbbrev,\r\n    A: d3_time_parseWeekday,\r\n    b: d3_time_parseMonthAbbrev,\r\n    B: d3_time_parseMonth,\r\n    c: d3_time_parseLocaleFull,\r\n    d: d3_time_parseDay,\r\n    e: d3_time_parseDay,\r\n    H: d3_time_parseHour24,\r\n    I: d3_time_parseHour24,\r\n    j: d3_time_parseDayOfYear,\r\n    L: d3_time_parseMilliseconds,\r\n    m: d3_time_parseMonthNumber,\r\n    M: d3_time_parseMinutes,\r\n    p: d3_time_parseAmPm,\r\n    S: d3_time_parseSeconds,\r\n    U: d3_time_parseWeekNumberSunday,\r\n    w: d3_time_parseWeekdayNumber,\r\n    W: d3_time_parseWeekNumberMonday,\r\n    x: d3_time_parseLocaleDate,\r\n    X: d3_time_parseLocaleTime,\r\n    y: d3_time_parseYear,\r\n    Y: d3_time_parseFullYear,\r\n    Z: d3_time_parseZone,\r\n    \"%\": d3_time_parseLiteralPercent\r\n  };\r\n\r\n  function d3_time_parseWeekdayAbbrev(date, string, i) {\r\n    d3_time_dayAbbrevRe.lastIndex = 0;\r\n    var n = d3_time_dayAbbrevRe.exec(string.substring(i));\r\n    return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\r\n  }\r\n\r\n  function d3_time_parseWeekday(date, string, i) {\r\n    d3_time_dayRe.lastIndex = 0;\r\n    var n = d3_time_dayRe.exec(string.substring(i));\r\n    return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\r\n  }\r\n\r\n  function d3_time_parseMonthAbbrev(date, string, i) {\r\n    d3_time_monthAbbrevRe.lastIndex = 0;\r\n    var n = d3_time_monthAbbrevRe.exec(string.substring(i));\r\n    return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\r\n  }\r\n\r\n  function d3_time_parseMonth(date, string, i) {\r\n    d3_time_monthRe.lastIndex = 0;\r\n    var n = d3_time_monthRe.exec(string.substring(i));\r\n    return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\r\n  }\r\n\r\n  function d3_time_parseLocaleFull(date, string, i) {\r\n    return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\r\n  }\r\n\r\n  function d3_time_parseLocaleDate(date, string, i) {\r\n    return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\r\n  }\r\n\r\n  function d3_time_parseLocaleTime(date, string, i) {\r\n    return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\r\n  }\r\n\r\n  function d3_time_parseAmPm(date, string, i) {\r\n    var n = d3_time_periodLookup.get(string.substring(i, i += 2).toLowerCase());\r\n    return n == null ? -1 : (date.p = n, i);\r\n  }\r\n\r\n  return d3_time_format;\r\n}\r\n\r\nvar d3_time_formatPads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\r\n    d3_time_numberRe = /^\\s*\\d+/, // note: ignores next directive\r\n    d3_time_percentRe = /^%/;\r\n\r\nfunction d3_time_formatPad(value, fill, width) {\r\n  var sign = value < 0 ? \"-\" : \"\",\r\n      string = (sign ? -value : value) + \"\",\r\n      length = string.length;\r\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\r\n}\r\n\r\nfunction d3_time_formatRe(names) {\r\n  return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\r\n}\r\n\r\nfunction d3_time_formatLookup(names) {\r\n  var map = new d3_Map, i = -1, n = names.length;\r\n  while (++i < n) map.set(names[i].toLowerCase(), i);\r\n  return map;\r\n}\r\n\r\nfunction d3_time_parseWeekdayNumber(date, string, i) {\r\n  d3_time_numberRe.lastIndex = 0;\r\n  var n = d3_time_numberRe.exec(string.substring(i, i + 1));\r\n  return n ? (date.w = +n[0], i + n[0].length) : -1;\r\n}\r\n\r\nfunction d3_time_parseWeekNumberSunday(date, string, i) {\r\n  d3_time_numberRe.lastIndex = 0;\r\n  var n = d3_time_numberRe.exec(string.substring(i));\r\n  return n ? (date.U = +n[0], i + n[0].length) : -1;\r\n}\r\n\r\nfunction d3_time_parseWeekNumberMonday(date, string, i) {\r\n  d3_time_numberRe.lastIndex = 0;\r\n  var n = d3_time_numberRe.exec(string.substring(i));\r\n  return n ? (date.W = +n[0], i + n[0].length) : -1;\r\n}\r\n\r\nfunction d3_time_parseFullYear(date, string, i) {\r\n  d3_time_numberRe.lastIndex = 0;\r\n  var n = d3_time_numberRe.exec(string.substring(i, i + 4));\r\n  return n ? (date.y = +n[0], i + n[0].length) : -1;\r\n}\r\n\r\nfunction d3_time_parseYear(date, string, i) {\r\n  d3_time_numberRe.lastIndex = 0;\r\n  var n = d3_time_numberRe.exec(string.substring(i, i + 2));\r\n  return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\r\n}\r\n\r\nfunction d3_time_parseZone(date, string, i) {\r\n  return /^[+-]\\d{4}$/.test(string = string.substring(i, i + 5))\r\n      ? (date.Z = -string, i + 5) // sign differs from getTimezoneOffset!\r\n      : -1;\r\n}\r\n\r\nfunction d3_time_expandYear(d) {\r\n  return d + (d > 68 ? 1900 : 2000);\r\n}\r\n\r\nfunction d3_time_parseMonthNumber(date, string, i) {\r\n  d3_time_numberRe.lastIndex = 0;\r\n  var n = d3_time_numberRe.exec(string.substring(i, i + 2));\r\n  return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\r\n}\r\n\r\nfunction d3_time_parseDay(date, string, i) {\r\n  d3_time_numberRe.lastIndex = 0;\r\n  var n = d3_time_numberRe.exec(string.substring(i, i + 2));\r\n  return n ? (date.d = +n[0], i + n[0].length) : -1;\r\n}\r\n\r\nfunction d3_time_parseDayOfYear(date, string, i) {\r\n  d3_time_numberRe.lastIndex = 0;\r\n  var n = d3_time_numberRe.exec(string.substring(i, i + 3));\r\n  return n ? (date.j = +n[0], i + n[0].length) : -1;\r\n}\r\n\r\n// Note: we don't validate that the hour is in the range [0,23] or [1,12].\r\nfunction d3_time_parseHour24(date, string, i) {\r\n  d3_time_numberRe.lastIndex = 0;\r\n  var n = d3_time_numberRe.exec(string.substring(i, i + 2));\r\n  return n ? (date.H = +n[0], i + n[0].length) : -1;\r\n}\r\n\r\nfunction d3_time_parseMinutes(date, string, i) {\r\n  d3_time_numberRe.lastIndex = 0;\r\n  var n = d3_time_numberRe.exec(string.substring(i, i + 2));\r\n  return n ? (date.M = +n[0], i + n[0].length) : -1;\r\n}\r\n\r\nfunction d3_time_parseSeconds(date, string, i) {\r\n  d3_time_numberRe.lastIndex = 0;\r\n  var n = d3_time_numberRe.exec(string.substring(i, i + 2));\r\n  return n ? (date.S = +n[0], i + n[0].length) : -1;\r\n}\r\n\r\nfunction d3_time_parseMilliseconds(date, string, i) {\r\n  d3_time_numberRe.lastIndex = 0;\r\n  var n = d3_time_numberRe.exec(string.substring(i, i + 3));\r\n  return n ? (date.L = +n[0], i + n[0].length) : -1;\r\n}\r\n\r\n// TODO table of time zone offset names?\r\nfunction d3_time_zone(d) {\r\n  var z = d.getTimezoneOffset(),\r\n      zs = z > 0 ? \"-\" : \"+\",\r\n      zh = ~~(abs(z) / 60),\r\n      zm = abs(z) % 60;\r\n  return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\r\n}\r\n\r\nfunction d3_time_parseLiteralPercent(date, string, i) {\r\n  d3_time_percentRe.lastIndex = 0;\r\n  var n = d3_time_percentRe.exec(string.substring(i, i + 1));\r\n  return n ? i + n[0].length : -1;\r\n}\r\n\r\nfunction d3_time_formatMulti(formats) {\r\n  var n = formats.length, i = -1;\r\n  while (++i < n) formats[i][0] = this(formats[i][0]);\r\n  return function(date) {\r\n    var i = 0, f = formats[i];\r\n    while (!f[1](date)) f = formats[++i];\r\n    return f[0](date);\r\n  };\r\n}\r\n\r\nd3.locale = function(locale) {\r\n  return {\r\n    numberFormat: d3_locale_numberFormat(locale),\r\n    timeFormat: d3_locale_timeFormat(locale)\r\n  };\r\n};\r\n\r\nvar d3_locale_enUS = d3.locale({\r\n  decimal: \".\",\r\n  thousands: \",\",\r\n  grouping: [3],\r\n  currency: [\"$\", \"\"],\r\n  dateTime: \"%a %b %e %X %Y\",\r\n  date: \"%m/%d/%Y\",\r\n  time: \"%H:%M:%S\",\r\n  periods: [\"AM\", \"PM\"],\r\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\r\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\r\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n});\r\n\r\nvar d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\r\n\r\nd3.text = d3_xhrType(function(request) {\r\n  return request.responseText;\r\n});\r\nd3.geo = {};\r\nd3.merge = function(arrays) {\r\n  var n = arrays.length,\r\n      m,\r\n      i = -1,\r\n      j = 0,\r\n      merged,\r\n      array;\r\n\r\n  while (++i < n) j += arrays[i].length;\r\n  merged = new Array(j);\r\n\r\n  while (--n >= 0) {\r\n    array = arrays[n];\r\n    m = array.length;\r\n    while (--m >= 0) {\r\n      merged[--j] = array[m];\r\n    }\r\n  }\r\n\r\n  return merged;\r\n};\r\n\r\nfunction d3_geo_spherical(cartesian) {\r\n  return [\r\n    Math.atan2(cartesian[1], cartesian[0]),\r\n    d3_asin(cartesian[2])\r\n  ];\r\n}\r\n\r\nfunction d3_geo_sphericalEqual(a, b) {\r\n  return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\r\n}\r\n\r\n// General spherical polygon clipping algorithm: takes a polygon, cuts it into\r\n// visible line segments and rejoins the segments by interpolating along the\r\n// clip edge.\r\nfunction d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\r\n  var subject = [],\r\n      clip = [];\r\n\r\n  segments.forEach(function(segment) {\r\n    if ((n = segment.length - 1) <= 0) return;\r\n    var n, p0 = segment[0], p1 = segment[n];\r\n\r\n    // If the first and last points of a segment are coincident, then treat as\r\n    // a closed ring.\r\n    // TODO if all rings are closed, then the winding order of the exterior\r\n    // ring should be checked.\r\n    if (d3_geo_sphericalEqual(p0, p1)) {\r\n      listener.lineStart();\r\n      for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\r\n      listener.lineEnd();\r\n      return;\r\n    }\r\n\r\n    var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true),\r\n        b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\r\n    a.o = b;\r\n    subject.push(a);\r\n    clip.push(b);\r\n    a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\r\n    b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\r\n    a.o = b;\r\n    subject.push(a);\r\n    clip.push(b);\r\n  });\r\n  clip.sort(compare);\r\n  d3_geo_clipPolygonLinkCircular(subject);\r\n  d3_geo_clipPolygonLinkCircular(clip);\r\n  if (!subject.length) return;\r\n\r\n  for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\r\n    clip[i].e = entry = !entry;\r\n  }\r\n\r\n  var start = subject[0],\r\n      points,\r\n      point;\r\n  while (1) {\r\n    // Find first unvisited intersection.\r\n    var current = start,\r\n        isSubject = true;\r\n    while (current.v) if ((current = current.n) === start) return;\r\n    points = current.z;\r\n    listener.lineStart();\r\n    do {\r\n      current.v = current.o.v = true;\r\n      if (current.e) {\r\n        if (isSubject) {\r\n          for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\r\n        } else {\r\n          interpolate(current.x, current.n.x, 1, listener);\r\n        }\r\n        current = current.n;\r\n      } else {\r\n        if (isSubject) {\r\n          points = current.p.z;\r\n          for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\r\n        } else {\r\n          interpolate(current.x, current.p.x, -1, listener);\r\n        }\r\n        current = current.p;\r\n      }\r\n      current = current.o;\r\n      points = current.z;\r\n      isSubject = !isSubject;\r\n    } while (!current.v);\r\n    listener.lineEnd();\r\n  }\r\n}\r\n\r\nfunction d3_geo_clipPolygonLinkCircular(array) {\r\n  if (!(n = array.length)) return;\r\n  var n,\r\n      i = 0,\r\n      a = array[0],\r\n      b;\r\n  while (++i < n) {\r\n    a.n = b = array[i];\r\n    b.p = a;\r\n    a = b;\r\n  }\r\n  a.n = b = array[0];\r\n  b.p = a;\r\n}\r\n\r\nfunction d3_geo_clipPolygonIntersection(point, points, other, entry) {\r\n  this.x = point;\r\n  this.z = points;\r\n  this.o = other; // another intersection\r\n  this.e = entry; // is an entry?\r\n  this.v = false; // visited\r\n  this.n = this.p = null; // next & previous\r\n}\r\n\r\nfunction d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\r\n  return function(rotate, listener) {\r\n    var line = clipLine(listener),\r\n        rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\r\n\r\n    var clip = {\r\n      point: point,\r\n      lineStart: lineStart,\r\n      lineEnd: lineEnd,\r\n      polygonStart: function() {\r\n        clip.point = pointRing;\r\n        clip.lineStart = ringStart;\r\n        clip.lineEnd = ringEnd;\r\n        segments = [];\r\n        polygon = [];\r\n      },\r\n      polygonEnd: function() {\r\n        clip.point = point;\r\n        clip.lineStart = lineStart;\r\n        clip.lineEnd = lineEnd;\r\n\r\n        segments = d3.merge(segments);\r\n        var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\r\n        if (segments.length) {\r\n          if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\r\n          d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\r\n        } else if (clipStartInside) {\r\n          if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\r\n          listener.lineStart();\r\n          interpolate(null, null, 1, listener);\r\n          listener.lineEnd();\r\n        }\r\n        if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\r\n        segments = polygon = null;\r\n      },\r\n      sphere: function() {\r\n        listener.polygonStart();\r\n        listener.lineStart();\r\n        interpolate(null, null, 1, listener);\r\n        listener.lineEnd();\r\n        listener.polygonEnd();\r\n      }\r\n    };\r\n\r\n    function point(λ, φ) {\r\n      var point = rotate(λ, φ);\r\n      if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\r\n    }\r\n    function pointLine(λ, φ) {\r\n      var point = rotate(λ, φ);\r\n      line.point(point[0], point[1]);\r\n    }\r\n    function lineStart() { clip.point = pointLine; line.lineStart(); }\r\n    function lineEnd() { clip.point = point; line.lineEnd(); }\r\n\r\n    var segments;\r\n\r\n    var buffer = d3_geo_clipBufferListener(),\r\n        ringListener = clipLine(buffer),\r\n        polygonStarted = false,\r\n        polygon,\r\n        ring;\r\n\r\n    function pointRing(λ, φ) {\r\n      ring.push([λ, φ]);\r\n      var point = rotate(λ, φ);\r\n      ringListener.point(point[0], point[1]);\r\n    }\r\n\r\n    function ringStart() {\r\n      ringListener.lineStart();\r\n      ring = [];\r\n    }\r\n\r\n    function ringEnd() {\r\n      pointRing(ring[0][0], ring[0][1]);\r\n      ringListener.lineEnd();\r\n\r\n      var clean = ringListener.clean(),\r\n          ringSegments = buffer.buffer(),\r\n          segment,\r\n          n = ringSegments.length;\r\n\r\n      ring.pop();\r\n      polygon.push(ring);\r\n      ring = null;\r\n\r\n      if (!n) return;\r\n\r\n      // No intersections.\r\n      if (clean & 1) {\r\n        segment = ringSegments[0];\r\n        var n = segment.length - 1,\r\n            i = -1,\r\n            point;\r\n        if (n > 0) {\r\n          if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\r\n          listener.lineStart();\r\n          while (++i < n) listener.point((point = segment[i])[0], point[1]);\r\n          listener.lineEnd();\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Rejoin connected segments.\r\n      // TODO reuse bufferListener.rejoin()?\r\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\r\n\r\n      segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\r\n    }\r\n\r\n    return clip;\r\n  };\r\n}\r\n\r\nfunction d3_geo_clipSegmentLength1(segment) {\r\n  return segment.length > 1;\r\n}\r\n\r\nfunction d3_geo_clipBufferListener() {\r\n  var lines = [],\r\n      line;\r\n  return {\r\n    lineStart: function() { lines.push(line = []); },\r\n    point: function(λ, φ) { line.push([λ, φ]); },\r\n    lineEnd: d3_noop,\r\n    buffer: function() {\r\n      var buffer = lines;\r\n      lines = [];\r\n      line = null;\r\n      return buffer;\r\n    },\r\n    rejoin: function() {\r\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\r\n    }\r\n  };\r\n}\r\n\r\n// Intersection points are sorted along the clip edge. For both antimeridian\r\n// cutting and circle clipping, the same comparison is used.\r\nfunction d3_geo_clipSort(a, b) {\r\n  return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1])\r\n       - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\r\n}\r\n// Adds floating point numbers with twice the normal precision.\r\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\r\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\r\n// 305–363 (1997).\r\n// Code adapted from GeographicLib by Charles F. F. Karney,\r\n// http://geographiclib.sourceforge.net/\r\n// See lib/geographiclib/LICENSE for details.\r\n\r\nfunction d3_adder() {}\r\n\r\nd3_adder.prototype = {\r\n  s: 0, // rounded value\r\n  t: 0, // exact error\r\n  add: function(y) {\r\n    d3_adderSum(y, this.t, d3_adderTemp);\r\n    d3_adderSum(d3_adderTemp.s, this.s, this);\r\n    if (this.s) this.t += d3_adderTemp.t;\r\n    else this.s = d3_adderTemp.t;\r\n  },\r\n  reset: function() {\r\n    this.s = this.t = 0;\r\n  },\r\n  valueOf: function() {\r\n    return this.s;\r\n  }\r\n};\r\n\r\nvar d3_adderTemp = new d3_adder;\r\n\r\nfunction d3_adderSum(a, b, o) {\r\n  var x = o.s = a + b, // a + b\r\n      bv = x - a, av = x - bv; // b_virtual & a_virtual\r\n  o.t = (a - av) + (b - bv); // a_roundoff + b_roundoff\r\n}\r\n\r\nd3.geo.stream = function(object, listener) {\r\n  if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\r\n    d3_geo_streamObjectType[object.type](object, listener);\r\n  } else {\r\n    d3_geo_streamGeometry(object, listener);\r\n  }\r\n};\r\n\r\nfunction d3_geo_streamGeometry(geometry, listener) {\r\n  if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\r\n    d3_geo_streamGeometryType[geometry.type](geometry, listener);\r\n  }\r\n}\r\n\r\nvar d3_geo_streamObjectType = {\r\n  Feature: function(feature, listener) {\r\n    d3_geo_streamGeometry(feature.geometry, listener);\r\n  },\r\n  FeatureCollection: function(object, listener) {\r\n    var features = object.features, i = -1, n = features.length;\r\n    while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\r\n  }\r\n};\r\n\r\nvar d3_geo_streamGeometryType = {\r\n  Sphere: function(object, listener) {\r\n    listener.sphere();\r\n  },\r\n  Point: function(object, listener) {\r\n    object = object.coordinates;\r\n    listener.point(object[0], object[1], object[2]);\r\n  },\r\n  MultiPoint: function(object, listener) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\r\n  },\r\n  LineString: function(object, listener) {\r\n    d3_geo_streamLine(object.coordinates, listener, 0);\r\n  },\r\n  MultiLineString: function(object, listener) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\r\n  },\r\n  Polygon: function(object, listener) {\r\n    d3_geo_streamPolygon(object.coordinates, listener);\r\n  },\r\n  MultiPolygon: function(object, listener) {\r\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n    while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\r\n  },\r\n  GeometryCollection: function(object, listener) {\r\n    var geometries = object.geometries, i = -1, n = geometries.length;\r\n    while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\r\n  }\r\n};\r\n\r\nfunction d3_geo_streamLine(coordinates, listener, closed) {\r\n  var i = -1, n = coordinates.length - closed, coordinate;\r\n  listener.lineStart();\r\n  while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\r\n  listener.lineEnd();\r\n}\r\n\r\nfunction d3_geo_streamPolygon(coordinates, listener) {\r\n  var i = -1, n = coordinates.length;\r\n  listener.polygonStart();\r\n  while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\r\n  listener.polygonEnd();\r\n}\r\n\r\nd3.geo.area = function(object) {\r\n  d3_geo_areaSum = 0;\r\n  d3.geo.stream(object, d3_geo_area);\r\n  return d3_geo_areaSum;\r\n};\r\n\r\nvar d3_geo_areaSum,\r\n    d3_geo_areaRingSum = new d3_adder;\r\n\r\nvar d3_geo_area = {\r\n  sphere: function() { d3_geo_areaSum += 4 * π; },\r\n  point: d3_noop,\r\n  lineStart: d3_noop,\r\n  lineEnd: d3_noop,\r\n\r\n  // Only count area for polygon rings.\r\n  polygonStart: function() {\r\n    d3_geo_areaRingSum.reset();\r\n    d3_geo_area.lineStart = d3_geo_areaRingStart;\r\n  },\r\n  polygonEnd: function() {\r\n    var area = 2 * d3_geo_areaRingSum;\r\n    d3_geo_areaSum += area < 0 ? 4 * π + area : area;\r\n    d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\r\n  }\r\n};\r\n\r\nfunction d3_geo_areaRingStart() {\r\n  var λ00, φ00, λ0, cosφ0, sinφ0; // start point and previous point\r\n\r\n  // For the first point, …\r\n  d3_geo_area.point = function(λ, φ) {\r\n    d3_geo_area.point = nextPoint;\r\n    λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), sinφ0 = Math.sin(φ);\r\n  };\r\n\r\n  // For subsequent points, …\r\n  function nextPoint(λ, φ) {\r\n    λ *= d3_radians;\r\n    φ = φ * d3_radians / 2 + π / 4; // half the angular distance from south pole\r\n\r\n    // Spherical excess E for a spherical triangle with vertices: south pole,\r\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\r\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\r\n    var dλ = λ - λ0,\r\n        sdλ = dλ >= 0 ? 1 : -1,\r\n        adλ = sdλ * dλ,\r\n        cosφ = Math.cos(φ),\r\n        sinφ = Math.sin(φ),\r\n        k = sinφ0 * sinφ,\r\n        u = cosφ0 * cosφ + k * Math.cos(adλ),\r\n        v = k * sdλ * Math.sin(adλ);\r\n    d3_geo_areaRingSum.add(Math.atan2(v, u));\r\n\r\n    // Advance the previous points.\r\n    λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\r\n  }\r\n\r\n  // For the last point, return to the start.\r\n  d3_geo_area.lineEnd = function() {\r\n    nextPoint(λ00, φ00);\r\n  };\r\n}\r\n// TODO\r\n// cross and scale return new vectors,\r\n// whereas add and normalize operate in-place\r\n\r\nfunction d3_geo_cartesian(spherical) {\r\n  var λ = spherical[0],\r\n      φ = spherical[1],\r\n      cosφ = Math.cos(φ);\r\n  return [\r\n    cosφ * Math.cos(λ),\r\n    cosφ * Math.sin(λ),\r\n    Math.sin(φ)\r\n  ];\r\n}\r\n\r\nfunction d3_geo_cartesianDot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\nfunction d3_geo_cartesianCross(a, b) {\r\n  return [\r\n    a[1] * b[2] - a[2] * b[1],\r\n    a[2] * b[0] - a[0] * b[2],\r\n    a[0] * b[1] - a[1] * b[0]\r\n  ];\r\n}\r\n\r\nfunction d3_geo_cartesianAdd(a, b) {\r\n  a[0] += b[0];\r\n  a[1] += b[1];\r\n  a[2] += b[2];\r\n}\r\n\r\nfunction d3_geo_cartesianScale(vector, k) {\r\n  return [\r\n    vector[0] * k,\r\n    vector[1] * k,\r\n    vector[2] * k\r\n  ];\r\n}\r\n\r\nfunction d3_geo_cartesianNormalize(d) {\r\n  var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\r\n  d[0] /= l;\r\n  d[1] /= l;\r\n  d[2] /= l;\r\n}\r\n\r\nfunction d3_geo_pointInPolygon(point, polygon) {\r\n  var meridian = point[0],\r\n      parallel = point[1],\r\n      meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0],\r\n      polarAngle = 0,\r\n      winding = 0;\r\n  d3_geo_areaRingSum.reset();\r\n\r\n  for (var i = 0, n = polygon.length; i < n; ++i) {\r\n    var ring = polygon[i],\r\n        m = ring.length;\r\n    if (!m) continue;\r\n    var point0 = ring[0],\r\n        λ0 = point0[0],\r\n        φ0 = point0[1] / 2 + π / 4,\r\n        sinφ0 = Math.sin(φ0),\r\n        cosφ0 = Math.cos(φ0),\r\n        j = 1;\r\n\r\n    while (true) {\r\n      if (j === m) j = 0;\r\n      point = ring[j];\r\n      var λ = point[0],\r\n          φ = point[1] / 2 + π / 4,\r\n          sinφ = Math.sin(φ),\r\n          cosφ = Math.cos(φ),\r\n          dλ = λ - λ0,\r\n          sdλ = dλ >= 0 ? 1 : -1,\r\n          adλ = sdλ * dλ,\r\n          antimeridian = adλ > π,\r\n          k = sinφ0 * sinφ;\r\n      d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\r\n\r\n      polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\r\n\r\n      // Are the longitudes either side of the point's meridian, and are the\r\n      // latitudes smaller than the parallel?\r\n      if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\r\n        var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\r\n        d3_geo_cartesianNormalize(arc);\r\n        var intersection = d3_geo_cartesianCross(meridianNormal, arc);\r\n        d3_geo_cartesianNormalize(intersection);\r\n        var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\r\n        if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\r\n          winding += antimeridian ^ dλ >= 0 ? 1 : -1;\r\n        }\r\n      }\r\n      if (!j++) break;\r\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\r\n    }\r\n  }\r\n\r\n  // First, determine whether the South pole is inside or outside:\r\n  //\r\n  // It is inside if:\r\n  // * the polygon winds around it in a clockwise direction.\r\n  // * the polygon does not (cumulatively) wind around it, but has a negative\r\n  //   (counter-clockwise) area.\r\n  //\r\n  // Second, count the (signed) number of times a segment crosses a meridian\r\n  // from the point to the South pole.  If it is zero, then the point is the\r\n  // same side as the South pole.\r\n\r\n  return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ (winding & 1);\r\n}\r\n\r\nvar d3_geo_clipAntimeridian = d3_geo_clip(\r\n    d3_true,\r\n    d3_geo_clipAntimeridianLine,\r\n    d3_geo_clipAntimeridianInterpolate,\r\n    [-π, -π / 2]);\r\n\r\n// Takes a line and cuts into visible segments. Return values:\r\n//   0: there were intersections or the line was empty.\r\n//   1: no intersections.\r\n//   2: there were intersections, and the first and last segments should be\r\n//      rejoined.\r\nfunction d3_geo_clipAntimeridianLine(listener) {\r\n  var λ0 = NaN,\r\n      φ0 = NaN,\r\n      sλ0 = NaN,\r\n      clean; // no intersections\r\n\r\n  return {\r\n    lineStart: function() {\r\n      listener.lineStart();\r\n      clean = 1;\r\n    },\r\n    point: function(λ1, φ1) {\r\n      var sλ1 = λ1 > 0 ? π : -π,\r\n          dλ = abs(λ1 - λ0);\r\n      if (abs(dλ - π) < ε) { // line crosses a pole\r\n        listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\r\n        listener.point(sλ0, φ0);\r\n        listener.lineEnd();\r\n        listener.lineStart();\r\n        listener.point(sλ1, φ0);\r\n        listener.point(λ1, φ0);\r\n        clean = 0;\r\n      } else if (sλ0 !== sλ1 && dλ >= π) { // line crosses antimeridian\r\n        // handle degeneracies\r\n        if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\r\n        if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\r\n        φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\r\n        listener.point(sλ0, φ0);\r\n        listener.lineEnd();\r\n        listener.lineStart();\r\n        listener.point(sλ1, φ0);\r\n        clean = 0;\r\n      }\r\n      listener.point(λ0 = λ1, φ0 = φ1);\r\n      sλ0 = sλ1;\r\n    },\r\n    lineEnd: function() {\r\n      listener.lineEnd();\r\n      λ0 = φ0 = NaN;\r\n    },\r\n    // if there are intersections, we always rejoin the first and last segments.\r\n    clean: function() { return 2 - clean; }\r\n  };\r\n}\r\n\r\nfunction d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\r\n  var cosφ0,\r\n      cosφ1,\r\n      sinλ0_λ1 = Math.sin(λ0 - λ1);\r\n  return abs(sinλ0_λ1) > ε\r\n      ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1)\r\n                 - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0))\r\n                 / (cosφ0 * cosφ1 * sinλ0_λ1))\r\n      : (φ0 + φ1) / 2;\r\n}\r\n\r\nfunction d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\r\n  var φ;\r\n  if (from == null) {\r\n    φ = direction * halfπ;\r\n    listener.point(-π,  φ);\r\n    listener.point( 0,  φ);\r\n    listener.point( π,  φ);\r\n    listener.point( π,  0);\r\n    listener.point( π, -φ);\r\n    listener.point( 0, -φ);\r\n    listener.point(-π, -φ);\r\n    listener.point(-π,  0);\r\n    listener.point(-π,  φ);\r\n  } else if (abs(from[0] - to[0]) > ε) {\r\n    var s = from[0] < to[0] ? π : -π;\r\n    φ = direction * s / 2;\r\n    listener.point(-s, φ);\r\n    listener.point( 0, φ);\r\n    listener.point( s, φ);\r\n  } else {\r\n    listener.point(to[0], to[1]);\r\n  }\r\n}\r\n\r\nfunction d3_geo_equirectangular(λ, φ) {\r\n  return [λ, φ];\r\n}\r\n\r\n(d3.geo.equirectangular = function() {\r\n  return d3_geo_projection(d3_geo_equirectangular);\r\n}).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\r\n\r\nd3.geo.rotation = function(rotate) {\r\n  rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\r\n\r\n  function forward(coordinates) {\r\n    coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\r\n    return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\r\n  }\r\n\r\n  forward.invert = function(coordinates) {\r\n    coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\r\n    return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\r\n  };\r\n\r\n  return forward;\r\n};\r\n\r\nfunction d3_geo_identityRotation(λ, φ) {\r\n  return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\r\n}\r\n\r\nd3_geo_identityRotation.invert = d3_geo_equirectangular;\r\n\r\n// Note: |δλ| must be < 2π\r\nfunction d3_geo_rotation(δλ, δφ, δγ) {\r\n  return δλ ? (δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ))\r\n    : d3_geo_rotationλ(δλ))\r\n    : (δφ || δγ ? d3_geo_rotationφγ(δφ, δγ)\r\n    : d3_geo_identityRotation);\r\n}\r\n\r\nfunction d3_geo_forwardRotationλ(δλ) {\r\n  return function(λ, φ) {\r\n    return λ += δλ, [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\r\n  };\r\n}\r\n\r\nfunction d3_geo_rotationλ(δλ) {\r\n  var rotation = d3_geo_forwardRotationλ(δλ);\r\n  rotation.invert = d3_geo_forwardRotationλ(-δλ);\r\n  return rotation;\r\n}\r\n\r\nfunction d3_geo_rotationφγ(δφ, δγ) {\r\n  var cosδφ = Math.cos(δφ),\r\n      sinδφ = Math.sin(δφ),\r\n      cosδγ = Math.cos(δγ),\r\n      sinδγ = Math.sin(δγ);\r\n\r\n  function rotation(λ, φ) {\r\n    var cosφ = Math.cos(φ),\r\n        x = Math.cos(λ) * cosφ,\r\n        y = Math.sin(λ) * cosφ,\r\n        z = Math.sin(φ),\r\n        k = z * cosδφ + x * sinδφ;\r\n    return [\r\n      Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ),\r\n      d3_asin(k * cosδγ + y * sinδγ)\r\n    ];\r\n  }\r\n\r\n  rotation.invert = function(λ, φ) {\r\n    var cosφ = Math.cos(φ),\r\n        x = Math.cos(λ) * cosφ,\r\n        y = Math.sin(λ) * cosφ,\r\n        z = Math.sin(φ),\r\n        k = z * cosδγ - y * sinδγ;\r\n    return [\r\n      Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ),\r\n      d3_asin(k * cosδφ - x * sinδφ)\r\n    ];\r\n  };\r\n\r\n  return rotation;\r\n}\r\n\r\nd3.geo.circle = function() {\r\n  var origin = [0, 0],\r\n      angle,\r\n      precision = 6,\r\n      interpolate;\r\n\r\n  function circle() {\r\n    var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin,\r\n        rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert,\r\n        ring = [];\r\n\r\n    interpolate(null, null, 1, {\r\n      point: function(x, y) {\r\n        ring.push(x = rotate(x, y));\r\n        x[0] *= d3_degrees, x[1] *= d3_degrees;\r\n      }\r\n    });\r\n\r\n    return {type: \"Polygon\", coordinates: [ring]};\r\n  }\r\n\r\n  circle.origin = function(x) {\r\n    if (!arguments.length) return origin;\r\n    origin = x;\r\n    return circle;\r\n  };\r\n\r\n  circle.angle = function(x) {\r\n    if (!arguments.length) return angle;\r\n    interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\r\n    return circle;\r\n  };\r\n\r\n  circle.precision = function(_) {\r\n    if (!arguments.length) return precision;\r\n    interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\r\n    return circle;\r\n  };\r\n\r\n  return circle.angle(90);\r\n};\r\n\r\n// Interpolates along a circle centered at [0°, 0°], with a given radius and\r\n// precision.\r\nfunction d3_geo_circleInterpolate(radius, precision) {\r\n  var cr = Math.cos(radius),\r\n      sr = Math.sin(radius);\r\n  return function(from, to, direction, listener) {\r\n    var step = direction * precision;\r\n    if (from != null) {\r\n      from = d3_geo_circleAngle(cr, from);\r\n      to = d3_geo_circleAngle(cr, to);\r\n      if (direction > 0 ? from < to: from > to) from += direction * τ;\r\n    } else {\r\n      from = radius + direction * τ;\r\n      to = radius - .5 * step;\r\n    }\r\n    for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\r\n      listener.point((point = d3_geo_spherical([\r\n        cr,\r\n        -sr * Math.cos(t),\r\n        -sr * Math.sin(t)\r\n      ]))[0], point[1]);\r\n    }\r\n  };\r\n}\r\n\r\n// Signed angle of a cartesian point relative to [cr, 0, 0].\r\nfunction d3_geo_circleAngle(cr, point) {\r\n  var a = d3_geo_cartesian(point);\r\n  a[0] -= cr;\r\n  d3_geo_cartesianNormalize(a);\r\n  var angle = d3_acos(-a[1]);\r\n  return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\r\n}\r\n\r\n// Clip features against a small circle centered at [0°, 0°].\r\nfunction d3_geo_clipCircle(radius) {\r\n  var cr = Math.cos(radius),\r\n      smallRadius = cr > 0,\r\n      notHemisphere = abs(cr) > ε, // TODO optimise for this common case\r\n      interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\r\n\r\n  return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);\r\n\r\n  function visible(λ, φ) {\r\n    return Math.cos(λ) * Math.cos(φ) > cr;\r\n  }\r\n\r\n  // Takes a line and cuts into visible segments. Return values used for\r\n  // polygon clipping:\r\n  //   0: there were intersections or the line was empty.\r\n  //   1: no intersections.\r\n  //   2: there were intersections, and the first and last segments should be\r\n  //      rejoined.\r\n  function clipLine(listener) {\r\n    var point0, // previous point\r\n        c0, // code for previous point\r\n        v0, // visibility of previous point\r\n        v00, // visibility of first point\r\n        clean; // no intersections\r\n    return {\r\n      lineStart: function() {\r\n        v00 = v0 = false;\r\n        clean = 1;\r\n      },\r\n      point: function(λ, φ) {\r\n        var point1 = [λ, φ],\r\n            point2,\r\n            v = visible(λ, φ),\r\n            c = smallRadius\r\n              ? v ? 0 : code(λ, φ)\r\n              : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\r\n        if (!point0 && (v00 = v0 = v)) listener.lineStart();\r\n        // Handle degeneracies.\r\n        // TODO ignore if not clipping polygons.\r\n        if (v !== v0) {\r\n          point2 = intersect(point0, point1);\r\n          if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\r\n            point1[0] += ε;\r\n            point1[1] += ε;\r\n            v = visible(point1[0], point1[1]);\r\n          }\r\n        }\r\n        if (v !== v0) {\r\n          clean = 0;\r\n          if (v) {\r\n            // outside going in\r\n            listener.lineStart();\r\n            point2 = intersect(point1, point0);\r\n            listener.point(point2[0], point2[1]);\r\n          } else {\r\n            // inside going out\r\n            point2 = intersect(point0, point1);\r\n            listener.point(point2[0], point2[1]);\r\n            listener.lineEnd();\r\n          }\r\n          point0 = point2;\r\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\r\n          var t;\r\n          // If the codes for two points are different, or are both zero,\r\n          // and there this segment intersects with the small circle.\r\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\r\n            clean = 0;\r\n            if (smallRadius) {\r\n              listener.lineStart();\r\n              listener.point(t[0][0], t[0][1]);\r\n              listener.point(t[1][0], t[1][1]);\r\n              listener.lineEnd();\r\n            } else {\r\n              listener.point(t[1][0], t[1][1]);\r\n              listener.lineEnd();\r\n              listener.lineStart();\r\n              listener.point(t[0][0], t[0][1]);\r\n            }\r\n          }\r\n        }\r\n        if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\r\n          listener.point(point1[0], point1[1]);\r\n        }\r\n        point0 = point1, v0 = v, c0 = c;\r\n      },\r\n      lineEnd: function() {\r\n        if (v0) listener.lineEnd();\r\n        point0 = null;\r\n      },\r\n      // Rejoin first and last segments if there were intersections and the first\r\n      // and last points were visible.\r\n      clean: function() { return clean | ((v00 && v0) << 1); }\r\n    };\r\n  }\r\n\r\n  // Intersects the great circle between a and b with the clip circle.\r\n  function intersect(a, b, two) {\r\n    var pa = d3_geo_cartesian(a),\r\n        pb = d3_geo_cartesian(b);\r\n\r\n    // We have two planes, n1.p = d1 and n2.p = d2.\r\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\r\n    var n1 = [1, 0, 0], // normal\r\n        n2 = d3_geo_cartesianCross(pa, pb),\r\n        n2n2 = d3_geo_cartesianDot(n2, n2),\r\n        n1n2 = n2[0], // d3_geo_cartesianDot(n1, n2),\r\n        determinant = n2n2 - n1n2 * n1n2;\r\n\r\n    // Two polar points.\r\n    if (!determinant) return !two && a;\r\n\r\n    var c1 =  cr * n2n2 / determinant,\r\n        c2 = -cr * n1n2 / determinant,\r\n        n1xn2 = d3_geo_cartesianCross(n1, n2),\r\n        A = d3_geo_cartesianScale(n1, c1),\r\n        B = d3_geo_cartesianScale(n2, c2);\r\n    d3_geo_cartesianAdd(A, B);\r\n\r\n    // Solve |p(t)|^2 = 1.\r\n    var u = n1xn2,\r\n        w = d3_geo_cartesianDot(A, u),\r\n        uu = d3_geo_cartesianDot(u, u),\r\n        t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\r\n\r\n    if (t2 < 0) return;\r\n\r\n    var t = Math.sqrt(t2),\r\n        q = d3_geo_cartesianScale(u, (-w - t) / uu);\r\n    d3_geo_cartesianAdd(q, A);\r\n    q = d3_geo_spherical(q);\r\n    if (!two) return q;\r\n\r\n    // Two intersection points.\r\n    var λ0 = a[0],\r\n        λ1 = b[0],\r\n        φ0 = a[1],\r\n        φ1 = b[1],\r\n        z;\r\n    if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\r\n    var δλ = λ1 - λ0,\r\n        polar = abs(δλ - π) < ε,\r\n        meridian = polar || δλ < ε;\r\n\r\n    if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\r\n\r\n    // Check that the first point is between a and b.\r\n    if (meridian\r\n        ? polar\r\n          ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1)\r\n          : φ0 <= q[1] && q[1] <= φ1\r\n        : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\r\n      var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\r\n      d3_geo_cartesianAdd(q1, A);\r\n      return [q, d3_geo_spherical(q1)];\r\n    }\r\n  }\r\n\r\n  // Generates a 4-bit vector representing the location of a point relative to\r\n  // the small circle's bounding box.\r\n  function code(λ, φ) {\r\n    var r = smallRadius ? radius : π - radius,\r\n        code = 0;\r\n    if (λ < -r) code |= 1; // left\r\n    else if (λ > r) code |= 2; // right\r\n    if (φ < -r) code |= 4; // below\r\n    else if (φ > r) code |= 8; // above\r\n    return code;\r\n  }\r\n}\r\n\r\n// Liang–Barsky line clipping.\r\nfunction d3_geom_clipLine(x0, y0, x1, y1) {\r\n  return function(line) {\r\n    var a = line.a,\r\n        b = line.b,\r\n        ax = a.x,\r\n        ay = a.y,\r\n        bx = b.x,\r\n        by = b.y,\r\n        t0 = 0,\r\n        t1 = 1,\r\n        dx = bx - ax,\r\n        dy = by - ay,\r\n        r;\r\n\r\n    r = x0 - ax;\r\n    if (!dx && r > 0) return;\r\n    r /= dx;\r\n    if (dx < 0) {\r\n      if (r < t0) return;\r\n      if (r < t1) t1 = r;\r\n    } else if (dx > 0) {\r\n      if (r > t1) return;\r\n      if (r > t0) t0 = r;\r\n    }\r\n\r\n    r = x1 - ax;\r\n    if (!dx && r < 0) return;\r\n    r /= dx;\r\n    if (dx < 0) {\r\n      if (r > t1) return;\r\n      if (r > t0) t0 = r;\r\n    } else if (dx > 0) {\r\n      if (r < t0) return;\r\n      if (r < t1) t1 = r;\r\n    }\r\n\r\n    r = y0 - ay;\r\n    if (!dy && r > 0) return;\r\n    r /= dy;\r\n    if (dy < 0) {\r\n      if (r < t0) return;\r\n      if (r < t1) t1 = r;\r\n    } else if (dy > 0) {\r\n      if (r > t1) return;\r\n      if (r > t0) t0 = r;\r\n    }\r\n\r\n    r = y1 - ay;\r\n    if (!dy && r < 0) return;\r\n    r /= dy;\r\n    if (dy < 0) {\r\n      if (r > t1) return;\r\n      if (r > t0) t0 = r;\r\n    } else if (dy > 0) {\r\n      if (r < t0) return;\r\n      if (r < t1) t1 = r;\r\n    }\r\n\r\n    if (t0 > 0) line.a = {x: ax + t0 * dx, y: ay + t0 * dy};\r\n    if (t1 < 1) line.b = {x: ax + t1 * dx, y: ay + t1 * dy};\r\n    return line;\r\n  };\r\n}\r\n\r\nvar d3_geo_clipExtentMAX = 1e9;\r\n\r\nd3.geo.clipExtent = function() {\r\n  var x0, y0, x1, y1,\r\n      stream,\r\n      clip,\r\n      clipExtent = {\r\n        stream: function(output) {\r\n          if (stream) stream.valid = false;\r\n          stream = clip(output);\r\n          stream.valid = true; // allow caching by d3.geo.path\r\n          return stream;\r\n        },\r\n        extent: function(_) {\r\n          if (!arguments.length) return [[x0, y0], [x1, y1]];\r\n          clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\r\n          if (stream) stream.valid = false, stream = null;\r\n          return clipExtent;\r\n        }\r\n      };\r\n  return clipExtent.extent([[0, 0], [960, 500]]);\r\n};\r\n\r\nfunction d3_geo_clipExtent(x0, y0, x1, y1) {\r\n  return function(listener) {\r\n    var listener_ = listener,\r\n        bufferListener = d3_geo_clipBufferListener(),\r\n        clipLine = d3_geom_clipLine(x0, y0, x1, y1),\r\n        segments,\r\n        polygon,\r\n        ring;\r\n\r\n    var clip = {\r\n      point: point,\r\n      lineStart: lineStart,\r\n      lineEnd: lineEnd,\r\n      polygonStart: function() {\r\n        listener = bufferListener;\r\n        segments = [];\r\n        polygon = [];\r\n        clean = true;\r\n      },\r\n      polygonEnd: function() {\r\n        listener = listener_;\r\n        segments = d3.merge(segments);\r\n        var clipStartInside = insidePolygon([x0, y1]),\r\n            inside = clean && clipStartInside,\r\n            visible = segments.length;\r\n        if (inside || visible) {\r\n          listener.polygonStart();\r\n          if (inside) {\r\n            listener.lineStart();\r\n            interpolate(null, null, 1, listener);\r\n            listener.lineEnd();\r\n          }\r\n          if (visible) {\r\n            d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\r\n          }\r\n          listener.polygonEnd();\r\n        }\r\n        segments = polygon = ring = null;\r\n      }\r\n    };\r\n\r\n    function insidePolygon(p) {\r\n      var wn = 0, // the winding number counter\r\n          n = polygon.length,\r\n          y = p[1];\r\n\r\n      for (var i = 0; i < n; ++i) {\r\n        for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\r\n          b = v[j];\r\n          if (a[1] <= y) {\r\n            if (b[1] >  y && d3_cross2d(a, b, p) > 0) ++wn;\r\n          } else {\r\n            if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\r\n          }\r\n          a = b;\r\n        }\r\n      }\r\n      return wn !== 0;\r\n    }\r\n\r\n    function interpolate(from, to, direction, listener) {\r\n      var a = 0, a1 = 0;\r\n      if (from == null ||\r\n          (a = corner(from, direction)) !== (a1 = corner(to, direction)) ||\r\n          comparePoints(from, to) < 0 ^ direction > 0) {\r\n        do {\r\n          listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\r\n        } while ((a = (a + direction + 4) % 4) !== a1);\r\n      } else {\r\n        listener.point(to[0], to[1]);\r\n      }\r\n    }\r\n\r\n    function pointVisible(x, y) {\r\n      return x0 <= x && x <= x1 && y0 <= y && y <= y1;\r\n    }\r\n\r\n    function point(x, y) {\r\n      if (pointVisible(x, y)) listener.point(x, y);\r\n    }\r\n\r\n    var x__, y__, v__, // first point\r\n        x_, y_, v_, // previous point\r\n        first,\r\n        clean;\r\n\r\n    function lineStart() {\r\n      clip.point = linePoint;\r\n      if (polygon) polygon.push(ring = []);\r\n      first = true;\r\n      v_ = false;\r\n      x_ = y_ = NaN;\r\n    }\r\n\r\n    function lineEnd() {\r\n      // TODO rather than special-case polygons, simply handle them separately.\r\n      // Ideally, coincident intersection points should be jittered to avoid\r\n      // clipping issues.\r\n      if (segments) {\r\n        linePoint(x__, y__);\r\n        if (v__ && v_) bufferListener.rejoin();\r\n        segments.push(bufferListener.buffer());\r\n      }\r\n      clip.point = point;\r\n      if (v_) listener.lineEnd();\r\n    }\r\n\r\n    function linePoint(x, y) {\r\n      x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\r\n      y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\r\n      var v = pointVisible(x, y);\r\n      if (polygon) ring.push([x, y]);\r\n      if (first) {\r\n        x__ = x, y__ = y, v__ = v;\r\n        first = false;\r\n        if (v) {\r\n          listener.lineStart();\r\n          listener.point(x, y);\r\n        }\r\n      } else {\r\n        if (v && v_) listener.point(x, y);\r\n        else {\r\n          var l = {a: {x: x_, y: y_}, b: {x: x, y: y}};\r\n          if (clipLine(l)) {\r\n            if (!v_) {\r\n              listener.lineStart();\r\n              listener.point(l.a.x, l.a.y);\r\n            }\r\n            listener.point(l.b.x, l.b.y);\r\n            if (!v) listener.lineEnd();\r\n            clean = false;\r\n          } else if (v) {\r\n            listener.lineStart();\r\n            listener.point(x, y);\r\n            clean = false;\r\n          }\r\n        }\r\n      }\r\n      x_ = x, y_ = y, v_ = v;\r\n    }\r\n\r\n    return clip;\r\n  };\r\n\r\n  function corner(p, direction) {\r\n    return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3\r\n        : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1\r\n        : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0\r\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < ε\r\n  }\r\n\r\n  function compare(a, b) {\r\n    return comparePoints(a.x, b.x);\r\n  }\r\n\r\n  function comparePoints(a, b) {\r\n    var ca = corner(a, 1),\r\n        cb = corner(b, 1);\r\n    return ca !== cb ? ca - cb\r\n        : ca === 0 ? b[1] - a[1]\r\n        : ca === 1 ? a[0] - b[0]\r\n        : ca === 2 ? a[1] - b[1]\r\n        : b[0] - a[0];\r\n  }\r\n}\r\nfunction d3_geo_compose(a, b) {\r\n\r\n  function compose(x, y) {\r\n    return x = a(x, y), b(x[0], x[1]);\r\n  }\r\n\r\n  if (a.invert && b.invert) compose.invert = function(x, y) {\r\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\r\n  };\r\n\r\n  return compose;\r\n}\r\n\r\nfunction d3_geo_conic(projectAt) {\r\n  var φ0 = 0,\r\n      φ1 = π / 3,\r\n      m = d3_geo_projectionMutator(projectAt),\r\n      p = m(φ0, φ1);\r\n\r\n  p.parallels = function(_) {\r\n    if (!arguments.length) return [φ0 / π * 180, φ1 / π * 180];\r\n    return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\r\n  };\r\n\r\n  return p;\r\n}\r\n\r\nfunction d3_geo_conicEqualArea(φ0, φ1) {\r\n  var sinφ0 = Math.sin(φ0),\r\n      n = (sinφ0 + Math.sin(φ1)) / 2,\r\n      C = 1 + sinφ0 * (2 * n - sinφ0),\r\n      ρ0 = Math.sqrt(C) / n;\r\n\r\n  function forward(λ, φ) {\r\n    var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\r\n    return [\r\n      ρ * Math.sin(λ *= n),\r\n      ρ0 - ρ * Math.cos(λ)\r\n    ];\r\n  }\r\n\r\n  forward.invert = function(x, y) {\r\n    var ρ0_y = ρ0 - y;\r\n    return [\r\n      Math.atan2(x, ρ0_y) / n,\r\n      d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))\r\n    ];\r\n  };\r\n\r\n  return forward;\r\n}\r\n\r\n(d3.geo.conicEqualArea = function() {\r\n  return d3_geo_conic(d3_geo_conicEqualArea);\r\n}).raw = d3_geo_conicEqualArea;\r\n\r\n// ESRI:102003\r\nd3.geo.albers = function() {\r\n  return d3.geo.conicEqualArea()\r\n      .rotate([96, 0])\r\n      .center([-.6, 38.7])\r\n      .parallels([29.5, 45.5])\r\n      .scale(1070);\r\n};\r\n\r\n// A composite projection for the United States, configured by default for\r\n// 960×500. Also works quite well at 960×600 with scale 1285. The set of\r\n// standard parallels for each region comes from USGS, which is published here:\r\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\r\nd3.geo.albersUsa = function() {\r\n  var lower48 = d3.geo.albers();\r\n\r\n  // EPSG:3338\r\n  var alaska = d3.geo.conicEqualArea()\r\n      .rotate([154, 0])\r\n      .center([-2, 58.5])\r\n      .parallels([55, 65]);\r\n\r\n  // ESRI:102007\r\n  var hawaii = d3.geo.conicEqualArea()\r\n      .rotate([157, 0])\r\n      .center([-3, 19.9])\r\n      .parallels([8, 18]);\r\n\r\n  var point,\r\n      pointStream = {point: function(x, y) { point = [x, y]; }},\r\n      lower48Point,\r\n      alaskaPoint,\r\n      hawaiiPoint;\r\n\r\n  function albersUsa(coordinates) {\r\n    var x = coordinates[0], y = coordinates[1];\r\n    point = null;\r\n    (lower48Point(x, y), point)\r\n        || (alaskaPoint(x, y), point)\r\n        || hawaiiPoint(x, y);\r\n    return point;\r\n  }\r\n\r\n  albersUsa.invert = function(coordinates) {\r\n    var k = lower48.scale(),\r\n        t = lower48.translate(),\r\n        x = (coordinates[0] - t[0]) / k,\r\n        y = (coordinates[1] - t[1]) / k;\r\n    return (y >= .120 && y < .234 && x >= -.425 && x < -.214 ? alaska\r\n        : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii\r\n        : lower48).invert(coordinates);\r\n  };\r\n\r\n  // A naïve multi-projection stream.\r\n  // The projections must have mutually exclusive clip regions on the sphere,\r\n  // as this will avoid emitting interleaving lines and polygons.\r\n  albersUsa.stream = function(stream) {\r\n    var lower48Stream = lower48.stream(stream),\r\n        alaskaStream = alaska.stream(stream),\r\n        hawaiiStream = hawaii.stream(stream);\r\n    return {\r\n      point: function(x, y) {\r\n        lower48Stream.point(x, y);\r\n        alaskaStream.point(x, y);\r\n        hawaiiStream.point(x, y);\r\n      },\r\n      sphere: function() {\r\n        lower48Stream.sphere();\r\n        alaskaStream.sphere();\r\n        hawaiiStream.sphere();\r\n      },\r\n      lineStart: function() {\r\n        lower48Stream.lineStart();\r\n        alaskaStream.lineStart();\r\n        hawaiiStream.lineStart();\r\n      },\r\n      lineEnd: function() {\r\n        lower48Stream.lineEnd();\r\n        alaskaStream.lineEnd();\r\n        hawaiiStream.lineEnd();\r\n      },\r\n      polygonStart: function() {\r\n        lower48Stream.polygonStart();\r\n        alaskaStream.polygonStart();\r\n        hawaiiStream.polygonStart();\r\n      },\r\n      polygonEnd: function() {\r\n        lower48Stream.polygonEnd();\r\n        alaskaStream.polygonEnd();\r\n        hawaiiStream.polygonEnd();\r\n      }\r\n    };\r\n  };\r\n\r\n  albersUsa.precision = function(_) {\r\n    if (!arguments.length) return lower48.precision();\r\n    lower48.precision(_);\r\n    alaska.precision(_);\r\n    hawaii.precision(_);\r\n    return albersUsa;\r\n  };\r\n\r\n  albersUsa.scale = function(_) {\r\n    if (!arguments.length) return lower48.scale();\r\n    lower48.scale(_);\r\n    alaska.scale(_ * .35);\r\n    hawaii.scale(_);\r\n    return albersUsa.translate(lower48.translate());\r\n  };\r\n\r\n  albersUsa.translate = function(_) {\r\n    if (!arguments.length) return lower48.translate();\r\n    var k = lower48.scale(), x = +_[0], y = +_[1];\r\n\r\n    lower48Point = lower48\r\n        .translate(_)\r\n        .clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]])\r\n        .stream(pointStream).point;\r\n\r\n    alaskaPoint = alaska\r\n        .translate([x - .307 * k, y + .201 * k])\r\n        .clipExtent([[x - .425 * k + ε, y + .120 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]])\r\n        .stream(pointStream).point;\r\n\r\n    hawaiiPoint = hawaii\r\n        .translate([x - .205 * k, y + .212 * k])\r\n        .clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]])\r\n        .stream(pointStream).point;\r\n\r\n    return albersUsa;\r\n  };\r\n\r\n  return albersUsa.scale(1070);\r\n};\r\n\r\nd3.geo.bounds = (function() {\r\n  var λ0, φ0, λ1, φ1, // bounds\r\n      λ_, // previous λ-coordinate\r\n      λ__, φ__, // first point\r\n      p0, // previous 3D point\r\n      dλSum,\r\n      ranges,\r\n      range;\r\n\r\n  var bound = {\r\n    point: point,\r\n    lineStart: lineStart,\r\n    lineEnd: lineEnd,\r\n\r\n    polygonStart: function() {\r\n      bound.point = ringPoint;\r\n      bound.lineStart = ringStart;\r\n      bound.lineEnd = ringEnd;\r\n      dλSum = 0;\r\n      d3_geo_area.polygonStart();\r\n    },\r\n    polygonEnd: function() {\r\n      d3_geo_area.polygonEnd();\r\n      bound.point = point;\r\n      bound.lineStart = lineStart;\r\n      bound.lineEnd = lineEnd;\r\n      if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90);\r\n      else if (dλSum > ε) φ1 = 90;\r\n      else if (dλSum < -ε) φ0 = -90;\r\n      range[0] = λ0, range[1] = λ1;\r\n    }\r\n  };\r\n\r\n  function point(λ, φ) {\r\n    ranges.push(range = [λ0 = λ, λ1 = λ]);\r\n    if (φ < φ0) φ0 = φ;\r\n    if (φ > φ1) φ1 = φ;\r\n  }\r\n\r\n  function linePoint(λ, φ) {\r\n    var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);\r\n    if (p0) {\r\n      var normal = d3_geo_cartesianCross(p0, p),\r\n          equatorial = [normal[1], -normal[0], 0],\r\n          inflection = d3_geo_cartesianCross(equatorial, normal);\r\n      d3_geo_cartesianNormalize(inflection);\r\n      inflection = d3_geo_spherical(inflection);\r\n      var dλ = λ - λ_,\r\n          s = dλ > 0 ? 1 : -1,\r\n          λi = inflection[0] * d3_degrees * s,\r\n          antimeridian = abs(dλ) > 180;\r\n      if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\r\n        var φi = inflection[1] * d3_degrees;\r\n        if (φi > φ1) φ1 = φi;\r\n      } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\r\n        var φi = -inflection[1] * d3_degrees;\r\n        if (φi < φ0) φ0 = φi;\r\n      } else {\r\n        if (φ < φ0) φ0 = φ;\r\n        if (φ > φ1) φ1 = φ;\r\n      }\r\n      if (antimeridian) {\r\n        if (λ < λ_) {\r\n          if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\r\n        } else {\r\n          if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\r\n        }\r\n      } else {\r\n        if (λ1 >= λ0) {\r\n          if (λ < λ0) λ0 = λ;\r\n          if (λ > λ1) λ1 = λ;\r\n        } else {\r\n          if (λ > λ_) {\r\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\r\n          } else {\r\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      point(λ, φ);\r\n    }\r\n    p0 = p, λ_ = λ;\r\n  }\r\n\r\n  function lineStart() { bound.point = linePoint; }\r\n  function lineEnd() {\r\n    range[0] = λ0, range[1] = λ1;\r\n    bound.point = point;\r\n    p0 = null;\r\n  }\r\n\r\n  function ringPoint(λ, φ) {\r\n    if (p0) {\r\n      var dλ = λ - λ_;\r\n      dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\r\n    } else λ__ = λ, φ__ = φ;\r\n    d3_geo_area.point(λ, φ);\r\n    linePoint(λ, φ);\r\n  }\r\n\r\n  function ringStart() {\r\n    d3_geo_area.lineStart();\r\n  }\r\n\r\n  function ringEnd() {\r\n    ringPoint(λ__, φ__);\r\n    d3_geo_area.lineEnd();\r\n    if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\r\n    range[0] = λ0, range[1] = λ1;\r\n    p0 = null;\r\n  }\r\n\r\n  // Finds the left-right distance between two longitudes.\r\n  // This is almost the same as (λ1 - λ0 + 360°) % 360°, except that we want\r\n  // the distance between ±180° to be 360°.\r\n  function angle(λ0, λ1) { return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1; }\r\n\r\n  function compareRanges(a, b) { return a[0] - b[0]; }\r\n\r\n  function withinRange(x, range) {\r\n    return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\r\n  }\r\n\r\n  return function(feature) {\r\n    φ1 = λ1 = -(λ0 = φ0 = Infinity);\r\n    ranges = [];\r\n\r\n    d3.geo.stream(feature, bound);\r\n\r\n    var n = ranges.length;\r\n    if (n) {\r\n      // First, sort ranges by their minimum longitudes.\r\n      ranges.sort(compareRanges);\r\n\r\n      // Then, merge any ranges that overlap.\r\n      for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {\r\n        b = ranges[i];\r\n        if (withinRange(b[0], a) || withinRange(b[1], a)) {\r\n          if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\r\n          if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\r\n        } else {\r\n          merged.push(a = b);\r\n        }\r\n      }\r\n\r\n      // Finally, find the largest gap between the merged ranges.\r\n      // The final bounding box will be the inverse of this gap.\r\n      var best = -Infinity, dλ;\r\n      for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\r\n        b = merged[i];\r\n        if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\r\n      }\r\n    }\r\n    ranges = range = null;\r\n\r\n    return λ0 === Infinity || φ0 === Infinity\r\n        ? [[NaN, NaN], [NaN, NaN]]\r\n        : [[λ0, φ0], [λ1, φ1]];\r\n  };\r\n})();\r\n\r\nd3.geo.centroid = function(object) {\r\n  d3_geo_centroidW0 = d3_geo_centroidW1 =\r\n  d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 =\r\n  d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 =\r\n  d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\r\n  d3.geo.stream(object, d3_geo_centroid);\r\n\r\n  var x = d3_geo_centroidX2,\r\n      y = d3_geo_centroidY2,\r\n      z = d3_geo_centroidZ2,\r\n      m = x * x + y * y + z * z;\r\n\r\n  // If the area-weighted centroid is undefined, fall back to length-weighted centroid.\r\n  if (m < ε2) {\r\n    x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\r\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\r\n    if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\r\n    m = x * x + y * y + z * z;\r\n    // If the feature still has an undefined centroid, then return.\r\n    if (m < ε2) return [NaN, NaN];\r\n  }\r\n\r\n  return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];\r\n};\r\n\r\nvar d3_geo_centroidW0,\r\n    d3_geo_centroidW1,\r\n    d3_geo_centroidX0,\r\n    d3_geo_centroidY0,\r\n    d3_geo_centroidZ0,\r\n    d3_geo_centroidX1,\r\n    d3_geo_centroidY1,\r\n    d3_geo_centroidZ1,\r\n    d3_geo_centroidX2,\r\n    d3_geo_centroidY2,\r\n    d3_geo_centroidZ2;\r\n\r\nvar d3_geo_centroid = {\r\n  sphere: d3_noop,\r\n  point: d3_geo_centroidPoint,\r\n  lineStart: d3_geo_centroidLineStart,\r\n  lineEnd: d3_geo_centroidLineEnd,\r\n  polygonStart: function() {\r\n    d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\r\n  },\r\n  polygonEnd: function() {\r\n    d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\r\n  }\r\n};\r\n\r\n// Arithmetic mean of Cartesian vectors.\r\nfunction d3_geo_centroidPoint(λ, φ) {\r\n  λ *= d3_radians;\r\n  var cosφ = Math.cos(φ *= d3_radians);\r\n  d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\r\n}\r\n\r\nfunction d3_geo_centroidPointXYZ(x, y, z) {\r\n  ++d3_geo_centroidW0;\r\n  d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\r\n  d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\r\n  d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\r\n}\r\n\r\nfunction d3_geo_centroidLineStart() {\r\n  var x0, y0, z0; // previous point\r\n\r\n  d3_geo_centroid.point = function(λ, φ) {\r\n    λ *= d3_radians;\r\n    var cosφ = Math.cos(φ *= d3_radians);\r\n    x0 = cosφ * Math.cos(λ);\r\n    y0 = cosφ * Math.sin(λ);\r\n    z0 = Math.sin(φ);\r\n    d3_geo_centroid.point = nextPoint;\r\n    d3_geo_centroidPointXYZ(x0, y0, z0);\r\n  };\r\n\r\n  function nextPoint(λ, φ) {\r\n    λ *= d3_radians;\r\n    var cosφ = Math.cos(φ *= d3_radians),\r\n        x = cosφ * Math.cos(λ),\r\n        y = cosφ * Math.sin(λ),\r\n        z = Math.sin(φ),\r\n        w = Math.atan2(\r\n          Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w),\r\n          x0 * x + y0 * y + z0 * z);\r\n    d3_geo_centroidW1 += w;\r\n    d3_geo_centroidX1 += w * (x0 + (x0 = x));\r\n    d3_geo_centroidY1 += w * (y0 + (y0 = y));\r\n    d3_geo_centroidZ1 += w * (z0 + (z0 = z));\r\n    d3_geo_centroidPointXYZ(x0, y0, z0);\r\n  }\r\n}\r\n\r\nfunction d3_geo_centroidLineEnd() {\r\n  d3_geo_centroid.point = d3_geo_centroidPoint;\r\n}\r\n\r\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\r\n// J. Applied Mechanics 42, 239 (1975).\r\nfunction d3_geo_centroidRingStart() {\r\n  var λ00, φ00, // first point\r\n      x0, y0, z0; // previous point\r\n\r\n  d3_geo_centroid.point = function(λ, φ) {\r\n    λ00 = λ, φ00 = φ;\r\n    d3_geo_centroid.point = nextPoint;\r\n    λ *= d3_radians;\r\n    var cosφ = Math.cos(φ *= d3_radians);\r\n    x0 = cosφ * Math.cos(λ);\r\n    y0 = cosφ * Math.sin(λ);\r\n    z0 = Math.sin(φ);\r\n    d3_geo_centroidPointXYZ(x0, y0, z0);\r\n  };\r\n\r\n  d3_geo_centroid.lineEnd = function() {\r\n    nextPoint(λ00, φ00);\r\n    d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\r\n    d3_geo_centroid.point = d3_geo_centroidPoint;\r\n  };\r\n\r\n  function nextPoint(λ, φ) {\r\n    λ *= d3_radians;\r\n    var cosφ = Math.cos(φ *= d3_radians),\r\n        x = cosφ * Math.cos(λ),\r\n        y = cosφ * Math.sin(λ),\r\n        z = Math.sin(φ),\r\n        cx = y0 * z - z0 * y,\r\n        cy = z0 * x - x0 * z,\r\n        cz = x0 * y - y0 * x,\r\n        m = Math.sqrt(cx * cx + cy * cy + cz * cz),\r\n        u = x0 * x + y0 * y + z0 * z,\r\n        v = m && -d3_acos(u) / m, // area weight\r\n        w = Math.atan2(m, u); // line weight\r\n    d3_geo_centroidX2 += v * cx;\r\n    d3_geo_centroidY2 += v * cy;\r\n    d3_geo_centroidZ2 += v * cz;\r\n    d3_geo_centroidW1 += w;\r\n    d3_geo_centroidX1 += w * (x0 + (x0 = x));\r\n    d3_geo_centroidY1 += w * (y0 + (y0 = y));\r\n    d3_geo_centroidZ1 += w * (z0 + (z0 = z));\r\n    d3_geo_centroidPointXYZ(x0, y0, z0);\r\n  }\r\n}\r\n\r\n// TODO Unify this code with d3.geom.polygon area?\r\n\r\nvar d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\r\n  point: d3_noop,\r\n  lineStart: d3_noop,\r\n  lineEnd: d3_noop,\r\n\r\n  // Only count area for polygon rings.\r\n  polygonStart: function() {\r\n    d3_geo_pathAreaPolygon = 0;\r\n    d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\r\n  },\r\n  polygonEnd: function() {\r\n    d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\r\n    d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\r\n  }\r\n};\r\n\r\nfunction d3_geo_pathAreaRingStart() {\r\n  var x00, y00, x0, y0;\r\n\r\n  // For the first point, …\r\n  d3_geo_pathArea.point = function(x, y) {\r\n    d3_geo_pathArea.point = nextPoint;\r\n    x00 = x0 = x, y00 = y0 = y;\r\n  };\r\n\r\n  // For subsequent points, …\r\n  function nextPoint(x, y) {\r\n    d3_geo_pathAreaPolygon += y0 * x - x0 * y;\r\n    x0 = x, y0 = y;\r\n  }\r\n\r\n  // For the last point, return to the start.\r\n  d3_geo_pathArea.lineEnd = function() {\r\n    nextPoint(x00, y00);\r\n  };\r\n}\r\n\r\nvar d3_geo_pathBoundsX0,\r\n    d3_geo_pathBoundsY0,\r\n    d3_geo_pathBoundsX1,\r\n    d3_geo_pathBoundsY1;\r\n\r\nvar d3_geo_pathBounds = {\r\n  point: d3_geo_pathBoundsPoint,\r\n  lineStart: d3_noop,\r\n  lineEnd: d3_noop,\r\n  polygonStart: d3_noop,\r\n  polygonEnd: d3_noop\r\n};\r\n\r\nfunction d3_geo_pathBoundsPoint(x, y) {\r\n  if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\r\n  if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\r\n  if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\r\n  if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\r\n}\r\nfunction d3_geo_pathBuffer() {\r\n  var pointCircle = d3_geo_pathBufferCircle(4.5),\r\n      buffer = [];\r\n\r\n  var stream = {\r\n    point: point,\r\n\r\n    // While inside a line, override point to moveTo then lineTo.\r\n    lineStart: function() { stream.point = pointLineStart; },\r\n    lineEnd: lineEnd,\r\n\r\n    // While inside a polygon, override lineEnd to closePath.\r\n    polygonStart: function() { stream.lineEnd = lineEndPolygon; },\r\n    polygonEnd: function() { stream.lineEnd = lineEnd; stream.point = point; },\r\n\r\n    pointRadius: function(_) {\r\n      pointCircle = d3_geo_pathBufferCircle(_);\r\n      return stream;\r\n    },\r\n\r\n    result: function() {\r\n      if (buffer.length) {\r\n        var result = buffer.join(\"\");\r\n        buffer = [];\r\n        return result;\r\n      }\r\n    }\r\n  };\r\n\r\n  function point(x, y) {\r\n    buffer.push(\"M\", x, \",\", y, pointCircle);\r\n  }\r\n\r\n  function pointLineStart(x, y) {\r\n    buffer.push(\"M\", x, \",\", y);\r\n    stream.point = pointLine;\r\n  }\r\n\r\n  function pointLine(x, y) {\r\n    buffer.push(\"L\", x, \",\", y);\r\n  }\r\n\r\n  function lineEnd() {\r\n    stream.point = point;\r\n  }\r\n\r\n  function lineEndPolygon() {\r\n    buffer.push(\"Z\");\r\n  }\r\n\r\n  return stream;\r\n}\r\n\r\nfunction d3_geo_pathBufferCircle(radius) {\r\n  return \"m0,\" + radius\r\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\r\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\r\n      + \"z\";\r\n}\r\n\r\n// TODO Unify this code with d3.geom.polygon centroid?\r\n// TODO Enforce positive area for exterior, negative area for interior?\r\n\r\nvar d3_geo_pathCentroid = {\r\n  point: d3_geo_pathCentroidPoint,\r\n\r\n  // For lines, weight by length.\r\n  lineStart: d3_geo_pathCentroidLineStart,\r\n  lineEnd: d3_geo_pathCentroidLineEnd,\r\n\r\n  // For polygons, weight by area.\r\n  polygonStart: function() {\r\n    d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\r\n  },\r\n  polygonEnd: function() {\r\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\r\n    d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\r\n    d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\r\n  }\r\n};\r\n\r\nfunction d3_geo_pathCentroidPoint(x, y) {\r\n  d3_geo_centroidX0 += x;\r\n  d3_geo_centroidY0 += y;\r\n  ++d3_geo_centroidZ0;\r\n}\r\n\r\nfunction d3_geo_pathCentroidLineStart() {\r\n  var x0, y0;\r\n\r\n  d3_geo_pathCentroid.point = function(x, y) {\r\n    d3_geo_pathCentroid.point = nextPoint;\r\n    d3_geo_pathCentroidPoint(x0 = x, y0 = y);\r\n  };\r\n\r\n  function nextPoint(x, y) {\r\n    var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\r\n    d3_geo_centroidX1 += z * (x0 + x) / 2;\r\n    d3_geo_centroidY1 += z * (y0 + y) / 2;\r\n    d3_geo_centroidZ1 += z;\r\n    d3_geo_pathCentroidPoint(x0 = x, y0 = y);\r\n  }\r\n}\r\n\r\nfunction d3_geo_pathCentroidLineEnd() {\r\n  d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\r\n}\r\n\r\nfunction d3_geo_pathCentroidRingStart() {\r\n  var x00, y00, x0, y0;\r\n\r\n  // For the first point, …\r\n  d3_geo_pathCentroid.point = function(x, y) {\r\n    d3_geo_pathCentroid.point = nextPoint;\r\n    d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\r\n  };\r\n\r\n  // For subsequent points, …\r\n  function nextPoint(x, y) {\r\n    var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\r\n    d3_geo_centroidX1 += z * (x0 + x) / 2;\r\n    d3_geo_centroidY1 += z * (y0 + y) / 2;\r\n    d3_geo_centroidZ1 += z;\r\n\r\n    z = y0 * x - x0 * y;\r\n    d3_geo_centroidX2 += z * (x0 + x);\r\n    d3_geo_centroidY2 += z * (y0 + y);\r\n    d3_geo_centroidZ2 += z * 3;\r\n    d3_geo_pathCentroidPoint(x0 = x, y0 = y);\r\n  }\r\n\r\n  // For the last point, return to the start.\r\n  d3_geo_pathCentroid.lineEnd = function() {\r\n    nextPoint(x00, y00);\r\n  };\r\n}\r\n\r\nfunction d3_geo_pathContext(context) {\r\n  var pointRadius = 4.5;\r\n\r\n  var stream = {\r\n    point: point,\r\n\r\n    // While inside a line, override point to moveTo then lineTo.\r\n    lineStart: function() { stream.point = pointLineStart; },\r\n    lineEnd: lineEnd,\r\n\r\n    // While inside a polygon, override lineEnd to closePath.\r\n    polygonStart: function() { stream.lineEnd = lineEndPolygon; },\r\n    polygonEnd: function() { stream.lineEnd = lineEnd; stream.point = point; },\r\n\r\n    pointRadius: function(_) {\r\n      pointRadius = _;\r\n      return stream;\r\n    },\r\n\r\n    result: d3_noop\r\n  };\r\n\r\n  function point(x, y) {\r\n    context.moveTo(x, y);\r\n    context.arc(x, y, pointRadius, 0, τ);\r\n  }\r\n\r\n  function pointLineStart(x, y) {\r\n    context.moveTo(x, y);\r\n    stream.point = pointLine;\r\n  }\r\n\r\n  function pointLine(x, y) {\r\n    context.lineTo(x, y);\r\n  }\r\n\r\n  function lineEnd() {\r\n    stream.point = point;\r\n  }\r\n\r\n  function lineEndPolygon() {\r\n    context.closePath();\r\n  }\r\n\r\n  return stream;\r\n}\r\n\r\nfunction d3_geo_resample(project) {\r\n  var δ2 = .5, // precision, px²\r\n      cosMinDistance = Math.cos(30 * d3_radians), // cos(minimum angular distance)\r\n      maxDepth = 16;\r\n\r\n  function resample(stream) {\r\n    return (maxDepth ? resampleRecursive : resampleNone)(stream);\r\n  }\r\n\r\n  function resampleNone(stream) {\r\n    return d3_geo_transformPoint(stream, function(x, y) {\r\n      x = project(x, y);\r\n      stream.point(x[0], x[1]);\r\n    });\r\n  }\r\n\r\n  function resampleRecursive(stream) {\r\n    var λ00, φ00, x00, y00, a00, b00, c00, // first point\r\n        λ0, x0, y0, a0, b0, c0; // previous point\r\n\r\n    var resample = {\r\n      point: point,\r\n      lineStart: lineStart,\r\n      lineEnd: lineEnd,\r\n      polygonStart: function() { stream.polygonStart(); resample.lineStart = ringStart; },\r\n      polygonEnd: function() { stream.polygonEnd(); resample.lineStart = lineStart; }\r\n    };\r\n\r\n    function point(x, y) {\r\n      x = project(x, y);\r\n      stream.point(x[0], x[1]);\r\n    }\r\n\r\n    function lineStart() {\r\n      x0 = NaN;\r\n      resample.point = linePoint;\r\n      stream.lineStart();\r\n    }\r\n\r\n    function linePoint(λ, φ) {\r\n      var c = d3_geo_cartesian([λ, φ]), p = project(λ, φ);\r\n      resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\r\n      stream.point(x0, y0);\r\n    }\r\n\r\n    function lineEnd() {\r\n      resample.point = point;\r\n      stream.lineEnd();\r\n    }\r\n\r\n    function ringStart() {\r\n      lineStart();\r\n      resample.point = ringPoint;\r\n      resample.lineEnd = ringEnd;\r\n    }\r\n\r\n    function ringPoint(λ, φ) {\r\n      linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\r\n      resample.point = linePoint;\r\n    }\r\n\r\n    function ringEnd() {\r\n      resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\r\n      resample.lineEnd = lineEnd;\r\n      lineEnd();\r\n    }\r\n\r\n    return resample;\r\n  }\r\n\r\n  function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\r\n    var dx = x1 - x0,\r\n        dy = y1 - y0,\r\n        d2 = dx * dx + dy * dy;\r\n    if (d2 > 4 * δ2 && depth--) {\r\n      var a = a0 + a1,\r\n          b = b0 + b1,\r\n          c = c0 + c1,\r\n          m = Math.sqrt(a * a + b * b + c * c),\r\n          φ2 = Math.asin(c /= m),\r\n          λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a),\r\n          p = project(λ2, φ2),\r\n          x2 = p[0],\r\n          y2 = p[1],\r\n          dx2 = x2 - x0,\r\n          dy2 = y2 - y0,\r\n          dz = dy * dx2 - dx * dy2;\r\n      if (dz * dz / d2 > δ2 // perpendicular projected distance\r\n          || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 // midpoint close to an end\r\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\r\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\r\n        stream.point(x2, y2);\r\n        resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\r\n      }\r\n    }\r\n  }\r\n\r\n  resample.precision = function(_) {\r\n    if (!arguments.length) return Math.sqrt(δ2);\r\n    maxDepth = (δ2 = _ * _) > 0 && 16;\r\n    return resample;\r\n  };\r\n\r\n  return resample;\r\n}\r\n\r\nd3.geo.path = function() {\r\n  var pointRadius = 4.5,\r\n      projection,\r\n      context,\r\n      projectStream,\r\n      contextStream,\r\n      cacheStream;\r\n\r\n  function path(object) {\r\n    if (object) {\r\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\r\n      if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\r\n      d3.geo.stream(object, cacheStream);\r\n    }\r\n    return contextStream.result();\r\n  }\r\n\r\n  path.area = function(object) {\r\n    d3_geo_pathAreaSum = 0;\r\n    d3.geo.stream(object, projectStream(d3_geo_pathArea));\r\n    return d3_geo_pathAreaSum;\r\n  };\r\n\r\n  path.centroid = function(object) {\r\n    d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 =\r\n    d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 =\r\n    d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\r\n    d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\r\n    return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2]\r\n        : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1]\r\n        : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0]\r\n        : [NaN, NaN];\r\n  };\r\n\r\n  path.bounds = function(object) {\r\n    d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\r\n    d3.geo.stream(object, projectStream(d3_geo_pathBounds));\r\n    return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];\r\n  };\r\n\r\n  path.projection = function(_) {\r\n    if (!arguments.length) return projection;\r\n    projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\r\n    return reset();\r\n  };\r\n\r\n  path.context = function(_) {\r\n    if (!arguments.length) return context;\r\n    contextStream = (context = _) == null ? new d3_geo_pathBuffer : new d3_geo_pathContext(_);\r\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\r\n    return reset();\r\n  };\r\n\r\n  path.pointRadius = function(_) {\r\n    if (!arguments.length) return pointRadius;\r\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\r\n    return path;\r\n  };\r\n\r\n  function reset() {\r\n    cacheStream = null;\r\n    return path;\r\n  }\r\n\r\n  return path.projection(d3.geo.albersUsa()).context(null);\r\n};\r\n\r\nfunction d3_geo_pathProjectStream(project) {\r\n  var resample = d3_geo_resample(function(x, y) { return project([x * d3_degrees, y * d3_degrees]); });\r\n  return function(stream) { return d3_geo_projectionRadians(resample(stream)); };\r\n}\r\n\r\nd3.geo.transform = function(methods) {\r\n  return {\r\n    stream: function(stream) {\r\n      var transform = new d3_geo_transform(stream);\r\n      for (var k in methods) transform[k] = methods[k];\r\n      return transform;\r\n    }\r\n  };\r\n};\r\n\r\nfunction d3_geo_transform(stream) {\r\n  this.stream = stream;\r\n}\r\n\r\nd3_geo_transform.prototype = {\r\n  point: function(x, y) { this.stream.point(x, y); },\r\n  sphere: function() { this.stream.sphere(); },\r\n  lineStart: function() { this.stream.lineStart(); },\r\n  lineEnd: function() { this.stream.lineEnd(); },\r\n  polygonStart: function() { this.stream.polygonStart(); },\r\n  polygonEnd: function() { this.stream.polygonEnd(); }\r\n};\r\n\r\nfunction d3_geo_transformPoint(stream, point) {\r\n  return {\r\n    point: point,\r\n    sphere: function() { stream.sphere(); },\r\n    lineStart: function() { stream.lineStart(); },\r\n    lineEnd: function() { stream.lineEnd(); },\r\n    polygonStart: function() { stream.polygonStart(); },\r\n    polygonEnd: function() { stream.polygonEnd(); },\r\n  };\r\n}\r\n\r\nd3.geo.projection = d3_geo_projection;\r\nd3.geo.projectionMutator = d3_geo_projectionMutator;\r\n\r\nfunction d3_geo_projection(project) {\r\n  return d3_geo_projectionMutator(function() { return project; })();\r\n}\r\n\r\nfunction d3_geo_projectionMutator(projectAt) {\r\n  var project,\r\n      rotate,\r\n      projectRotate,\r\n      projectResample = d3_geo_resample(function(x, y) { x = project(x, y); return [x[0] * k + δx, δy - x[1] * k]; }),\r\n      k = 150, // scale\r\n      x = 480, y = 250, // translate\r\n      λ = 0, φ = 0, // center\r\n      δλ = 0, δφ = 0, δγ = 0, // rotate\r\n      δx, δy, // center\r\n      preclip = d3_geo_clipAntimeridian,\r\n      postclip = d3_identity,\r\n      clipAngle = null,\r\n      clipExtent = null,\r\n      stream;\r\n\r\n  function projection(point) {\r\n    point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\r\n    return [point[0] * k + δx, δy - point[1] * k];\r\n  }\r\n\r\n  function invert(point) {\r\n    point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\r\n    return point && [point[0] * d3_degrees, point[1] * d3_degrees];\r\n  }\r\n\r\n  projection.stream = function(output) {\r\n    if (stream) stream.valid = false;\r\n    stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\r\n    stream.valid = true; // allow caching by d3.geo.path\r\n    return stream;\r\n  };\r\n\r\n  projection.clipAngle = function(_) {\r\n    if (!arguments.length) return clipAngle;\r\n    preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\r\n    return invalidate();\r\n  };\r\n\r\n  projection.clipExtent = function(_) {\r\n    if (!arguments.length) return clipExtent;\r\n    clipExtent = _;\r\n    postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\r\n    return invalidate();\r\n  };\r\n\r\n  projection.scale = function(_) {\r\n    if (!arguments.length) return k;\r\n    k = +_;\r\n    return reset();\r\n  };\r\n\r\n  projection.translate = function(_) {\r\n    if (!arguments.length) return [x, y];\r\n    x = +_[0];\r\n    y = +_[1];\r\n    return reset();\r\n  };\r\n\r\n  projection.center = function(_) {\r\n    if (!arguments.length) return [λ * d3_degrees, φ * d3_degrees];\r\n    λ = _[0] % 360 * d3_radians;\r\n    φ = _[1] % 360 * d3_radians;\r\n    return reset();\r\n  };\r\n\r\n  projection.rotate = function(_) {\r\n    if (!arguments.length) return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];\r\n    δλ = _[0] % 360 * d3_radians;\r\n    δφ = _[1] % 360 * d3_radians;\r\n    δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\r\n    return reset();\r\n  };\r\n\r\n  d3.rebind(projection, projectResample, \"precision\");\r\n\r\n  function reset() {\r\n    projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\r\n    var center = project(λ, φ);\r\n    δx = x - center[0] * k;\r\n    δy = y + center[1] * k;\r\n    return invalidate();\r\n  }\r\n\r\n  function invalidate() {\r\n    if (stream) stream.valid = false, stream = null;\r\n    return projection;\r\n  }\r\n\r\n  return function() {\r\n    project = projectAt.apply(this, arguments);\r\n    projection.invert = project.invert && invert;\r\n    return reset();\r\n  };\r\n}\r\n\r\nfunction d3_geo_projectionRadians(stream) {\r\n  return d3_geo_transformPoint(stream, function(x, y) {\r\n    stream.point(x * d3_radians, y * d3_radians);\r\n  });\r\n}\r\n\r\nfunction d3_geo_mercator(λ, φ) {\r\n  return [λ, Math.log(Math.tan(π / 4 + φ / 2))];\r\n}\r\n\r\nd3_geo_mercator.invert = function(x, y) {\r\n  return [x, 2 * Math.atan(Math.exp(y)) - halfπ];\r\n};\r\n\r\nfunction d3_geo_mercatorProjection(project) {\r\n  var m = d3_geo_projection(project),\r\n      scale = m.scale,\r\n      translate = m.translate,\r\n      clipExtent = m.clipExtent,\r\n      clipAuto;\r\n\r\n  m.scale = function() {\r\n    var v = scale.apply(m, arguments);\r\n    return v === m ? (clipAuto ? m.clipExtent(null) : m) : v;\r\n  };\r\n\r\n  m.translate = function() {\r\n    var v = translate.apply(m, arguments);\r\n    return v === m ? (clipAuto ? m.clipExtent(null) : m) : v;\r\n  };\r\n\r\n  m.clipExtent = function(_) {\r\n    var v = clipExtent.apply(m, arguments);\r\n    if (v === m) {\r\n      if (clipAuto = _ == null) {\r\n        var k = π * scale(), t = translate();\r\n        clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);\r\n      }\r\n    } else if (clipAuto) {\r\n      v = null;\r\n    }\r\n    return v;\r\n  };\r\n\r\n  return m.clipExtent(null);\r\n}\r\n\r\n(d3.geo.mercator = function() {\r\n  return d3_geo_mercatorProjection(d3_geo_mercator);\r\n}).raw = d3_geo_mercator;\r\n  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n  else {}\r\n  this.d3 = d3;\r\n}();\r\n\n\n//# sourceURL=webpack:///./dist/d3.js?");

/***/ }),

/***/ "./lib/base64.js":
/*!***********************!*\
  !*** ./lib/base64.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\r\n * $Id: base64.js,v 2.12 2013/05/06 07:54:20 dankogai Exp dankogai $\r\n *\r\n *  Licensed under the MIT license.\r\n *    http://opensource.org/licenses/mit-license\r\n *\r\n *  References:\r\n *    http://en.wikipedia.org/wiki/Base64\r\n */\r\n\r\n(function(global) {\r\n    'use strict';\r\n    if (global.Base64) return;\r\n    var version = \"2.1.2\";\r\n    // if node.js, we use Buffer\r\n    var buffer;\r\n    if ( true && module.exports) {\r\n        buffer = __webpack_require__(/*! buffer */ \"./node_modules/_buffer@4.9.2@buffer/index.js\").Buffer;\r\n    }\r\n    // constants\r\n    var b64chars\r\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n    var b64tab = function(bin) {\r\n        var t = {};\r\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\r\n        return t;\r\n    }(b64chars);\r\n    var fromCharCode = String.fromCharCode;\r\n    // encoder stuff\r\n    var cb_utob = function(c) {\r\n        if (c.length < 2) {\r\n            var cc = c.charCodeAt(0);\r\n            return cc < 0x80 ? c\r\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\r\n                                + fromCharCode(0x80 | (cc & 0x3f)))\r\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\r\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\r\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\r\n        } else {\r\n            var cc = 0x10000\r\n                + (c.charCodeAt(0) - 0xD800) * 0x400\r\n                + (c.charCodeAt(1) - 0xDC00);\r\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\r\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\r\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\r\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\r\n        }\r\n    };\r\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\r\n    var utob = function(u) {\r\n        return u.replace(re_utob, cb_utob);\r\n    };\r\n    var cb_encode = function(ccc) {\r\n        var padlen = [0, 2, 1][ccc.length % 3],\r\n        ord = ccc.charCodeAt(0) << 16\r\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\r\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\r\n        chars = [\r\n            b64chars.charAt( ord >>> 18),\r\n            b64chars.charAt((ord >>> 12) & 63),\r\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\r\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\r\n        ];\r\n        return chars.join('');\r\n    };\r\n    var btoa = global.btoa || function(b) {\r\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\r\n    };\r\n    var _encode = buffer\r\n        ? function (u) { return (new buffer(u)).toString('base64') } \r\n    : function (u) { return btoa(utob(u)) }\r\n    ;\r\n    var encode = function(u, urisafe) {\r\n        return !urisafe \r\n            ? _encode(u)\r\n            : _encode(u).replace(/[+\\/]/g, function(m0) {\r\n                return m0 == '+' ? '-' : '_';\r\n            }).replace(/=/g, '');\r\n    };\r\n    var encodeURI = function(u) { return encode(u, true) };\r\n    // decoder stuff\r\n    var re_btou = new RegExp([\r\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\r\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\r\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\r\n    ].join('|'), 'g');\r\n    var cb_btou = function(cccc) {\r\n        switch(cccc.length) {\r\n        case 4:\r\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\r\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\r\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\r\n                |     (0x3f & cccc.charCodeAt(3)),\r\n            offset = cp - 0x10000;\r\n            return (fromCharCode((offset  >>> 10) + 0xD800)\r\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\r\n        case 3:\r\n            return fromCharCode(\r\n                ((0x0f & cccc.charCodeAt(0)) << 12)\r\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\r\n                    |  (0x3f & cccc.charCodeAt(2))\r\n            );\r\n        default:\r\n            return  fromCharCode(\r\n                ((0x1f & cccc.charCodeAt(0)) << 6)\r\n                    |  (0x3f & cccc.charCodeAt(1))\r\n            );\r\n        }\r\n    };\r\n    var btou = function(b) {\r\n        return b.replace(re_btou, cb_btou);\r\n    };\r\n    var cb_decode = function(cccc) {\r\n        var len = cccc.length,\r\n        padlen = len % 4,\r\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\r\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\r\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\r\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\r\n        chars = [\r\n            fromCharCode( n >>> 16),\r\n            fromCharCode((n >>>  8) & 0xff),\r\n            fromCharCode( n         & 0xff)\r\n        ];\r\n        chars.length -= [0, 0, 2, 1][padlen];\r\n        return chars.join('');\r\n    };\r\n    var atob = global.atob || function(a){\r\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\r\n    };\r\n    var _decode = buffer\r\n        ? function(a) { return (new buffer(a, 'base64')).toString() }\r\n    : function(a) { return btou(atob(a)) };\r\n    var decode = function(a){\r\n        return _decode(\r\n            a.replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\r\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\r\n        );\r\n    };\r\n    // export Base64\r\n    global.Base64 = {\r\n        VERSION: version,\r\n        atob: atob,\r\n        btoa: btoa,\r\n        fromBase64: decode,\r\n        toBase64: encode,\r\n        utob: utob,\r\n        encode: encode,\r\n        encodeURI: encodeURI,\r\n        btou: btou,\r\n        decode: decode\r\n    };\r\n    // if ES5 is available, make Base64.extendString() available\r\n    if (typeof Object.defineProperty === 'function') {\r\n        var noEnum = function(v){\r\n            return {value:v,enumerable:false,writable:true,configurable:true};\r\n        };\r\n        global.Base64.extendString = function () {\r\n            Object.defineProperty(\r\n                String.prototype, 'fromBase64', noEnum(function () {\r\n                    return decode(this)\r\n                }));\r\n            Object.defineProperty(\r\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\r\n                    return encode(this, urisafe)\r\n                }));\r\n            Object.defineProperty(\r\n                String.prototype, 'toBase64URI', noEnum(function () {\r\n                    return encode(this, true)\r\n                }));\r\n        };\r\n    }\r\n    // that's it!\r\n})(this);\r\n\n\n//# sourceURL=webpack:///./lib/base64.js?");

/***/ }),

/***/ "./lib/blob.js":
/*!*********************!*\
  !*** ./lib/blob.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* Blob.js\r\n * A Blob implementation.\r\n * 2013-06-20\r\n * \r\n * By Eli Grey, http://eligrey.com\r\n * By Devin Samarin, https://github.com/eboyjr\r\n * License: X11/MIT\r\n *   See LICENSE.md\r\n */\r\n\r\n/*global self, unescape */\r\n/*jslint bitwise: true, regexp: true, confusion: true, es5: true, vars: true, white: true,\r\n  plusplus: true */\r\n\r\n/*! @source http://purl.eligrey.com/github/Blob.js/blob/master/Blob.js */\r\n\r\nif (typeof Blob !== \"function\" || typeof URL === \"undefined\")\r\nif (typeof Blob === \"function\" && typeof webkitURL !== \"undefined\") self.URL = webkitURL;\r\nelse var Blob = (function (view) {\r\n\t\"use strict\";\r\n\r\n\tvar BlobBuilder = view.BlobBuilder || view.WebKitBlobBuilder || view.MozBlobBuilder || view.MSBlobBuilder || (function(view) {\r\n\t\tvar\r\n\t\t\t  get_class = function(object) {\r\n\t\t\t\treturn Object.prototype.toString.call(object).match(/^\\[object\\s(.*)\\]$/)[1];\r\n\t\t\t}\r\n\t\t\t, FakeBlobBuilder = function BlobBuilder() {\r\n\t\t\t\tthis.data = [];\r\n\t\t\t}\r\n\t\t\t, FakeBlob = function Blob(data, type, encoding) {\r\n\t\t\t\tthis.data = data;\r\n\t\t\t\tthis.size = data.length;\r\n\t\t\t\tthis.type = type;\r\n\t\t\t\tthis.encoding = encoding;\r\n\t\t\t}\r\n\t\t\t, FBB_proto = FakeBlobBuilder.prototype\r\n\t\t\t, FB_proto = FakeBlob.prototype\r\n\t\t\t, FileReaderSync = view.FileReaderSync\r\n\t\t\t, FileException = function(type) {\r\n\t\t\t\tthis.code = this[this.name = type];\r\n\t\t\t}\r\n\t\t\t, file_ex_codes = (\r\n\t\t\t\t  \"NOT_FOUND_ERR SECURITY_ERR ABORT_ERR NOT_READABLE_ERR ENCODING_ERR \"\r\n\t\t\t\t+ \"NO_MODIFICATION_ALLOWED_ERR INVALID_STATE_ERR SYNTAX_ERR\"\r\n\t\t\t).split(\" \")\r\n\t\t\t, file_ex_code = file_ex_codes.length\r\n\t\t\t, real_URL = view.URL || view.webkitURL || view\r\n\t\t\t, real_create_object_URL = real_URL.createObjectURL\r\n\t\t\t, real_revoke_object_URL = real_URL.revokeObjectURL\r\n\t\t\t, URL = real_URL\r\n\t\t\t, btoa = view.btoa\r\n\t\t\t, atob = view.atob\r\n\t\t\t\r\n\t\t\t, ArrayBuffer = view.ArrayBuffer\r\n\t\t\t, Uint8Array = view.Uint8Array\r\n\t\t;\r\n\t\tFakeBlob.fake = FB_proto.fake = true;\r\n\t\twhile (file_ex_code--) {\r\n\t\t\tFileException.prototype[file_ex_codes[file_ex_code]] = file_ex_code + 1;\r\n\t\t}\r\n\t\tif (!real_URL.createObjectURL) {\r\n\t\t\tURL = view.URL = {};\r\n\t\t}\r\n\t\tURL.createObjectURL = function(blob) {\r\n\t\t\tvar\r\n\t\t\t\t  type = blob.type\r\n\t\t\t\t, data_URI_header\r\n\t\t\t;\r\n\t\t\tif (type === null) {\r\n\t\t\t\ttype = \"application/octet-stream\";\r\n\t\t\t}\r\n\t\t\tif (blob instanceof FakeBlob) {\r\n\t\t\t\tdata_URI_header = \"data:\" + type;\r\n\t\t\t\tif (blob.encoding === \"base64\") {\r\n\t\t\t\t\treturn data_URI_header + \";base64,\" + blob.data;\r\n\t\t\t\t} else if (blob.encoding === \"URI\") {\r\n\t\t\t\t\treturn data_URI_header + \",\" + decodeURIComponent(blob.data);\r\n\t\t\t\t} if (btoa) {\r\n\t\t\t\t\treturn data_URI_header + \";base64,\" + btoa(blob.data);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn data_URI_header + \",\" + encodeURIComponent(blob.data);\r\n\t\t\t\t}\r\n\t\t\t} else if (real_create_object_URL) {\r\n\t\t\t\treturn real_create_object_URL.call(real_URL, blob);\r\n\t\t\t}\r\n\t\t};\r\n\t\tURL.revokeObjectURL = function(object_URL) {\r\n\t\t\tif (object_URL.substring(0, 5) !== \"data:\" && real_revoke_object_URL) {\r\n\t\t\t\treal_revoke_object_URL.call(real_URL, object_URL);\r\n\t\t\t}\r\n\t\t};\r\n\t\tFBB_proto.append = function(data/*, endings*/) {\r\n\t\t\tvar bb = this.data;\r\n\t\t\t// decode data to a binary string\r\n\t\t\tif (Uint8Array && (data instanceof ArrayBuffer || data instanceof Uint8Array)) {\r\n\t\t\t\tvar\r\n\t\t\t\t\t  str = \"\"\r\n\t\t\t\t\t, buf = new Uint8Array(data)\r\n\t\t\t\t\t, i = 0\r\n\t\t\t\t\t, buf_len = buf.length\r\n\t\t\t\t;\r\n\t\t\t\tfor (; i < buf_len; i++) {\r\n\t\t\t\t\tstr += String.fromCharCode(buf[i]);\r\n\t\t\t\t}\r\n\t\t\t\tbb.push(str);\r\n\t\t\t} else if (get_class(data) === \"Blob\" || get_class(data) === \"File\") {\r\n\t\t\t\tif (FileReaderSync) {\r\n\t\t\t\t\tvar fr = new FileReaderSync;\r\n\t\t\t\t\tbb.push(fr.readAsBinaryString(data));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// async FileReader won't work as BlobBuilder is sync\r\n\t\t\t\t\tthrow new FileException(\"NOT_READABLE_ERR\");\r\n\t\t\t\t}\r\n\t\t\t} else if (data instanceof FakeBlob) {\r\n\t\t\t\tif (data.encoding === \"base64\" && atob) {\r\n\t\t\t\t\tbb.push(atob(data.data));\r\n\t\t\t\t} else if (data.encoding === \"URI\") {\r\n\t\t\t\t\tbb.push(decodeURIComponent(data.data));\r\n\t\t\t\t} else if (data.encoding === \"raw\") {\r\n\t\t\t\t\tbb.push(data.data);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (typeof data !== \"string\") {\r\n\t\t\t\t\tdata += \"\"; // convert unsupported types to strings\r\n\t\t\t\t}\r\n\t\t\t\t// decode UTF-16 to binary string\r\n\t\t\t\tbb.push(unescape(encodeURIComponent(data)));\r\n\t\t\t}\r\n\t\t};\r\n\t\tFBB_proto.getBlob = function(type) {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\ttype = null;\r\n\t\t\t}\r\n\t\t\treturn new FakeBlob(this.data.join(\"\"), type, \"raw\");\r\n\t\t};\r\n\t\tFBB_proto.toString = function() {\r\n\t\t\treturn \"[object BlobBuilder]\";\r\n\t\t};\r\n\t\tFB_proto.slice = function(start, end, type) {\r\n\t\t\tvar args = arguments.length;\r\n\t\t\tif (args < 3) {\r\n\t\t\t\ttype = null;\r\n\t\t\t}\r\n\t\t\treturn new FakeBlob(\r\n\t\t\t\t  this.data.slice(start, args > 1 ? end : this.data.length)\r\n\t\t\t\t, type\r\n\t\t\t\t, this.encoding\r\n\t\t\t);\r\n\t\t};\r\n\t\tFB_proto.toString = function() {\r\n\t\t\treturn \"[object Blob]\";\r\n\t\t};\r\n\t\treturn FakeBlobBuilder;\r\n\t}(view));\r\n\r\n\treturn function Blob(blobParts, options) {\r\n\t\tvar type = options ? (options.type || \"\") : \"\";\r\n\t\tvar builder = new BlobBuilder();\r\n\t\tif (blobParts) {\r\n\t\t\tfor (var i = 0, len = blobParts.length; i < len; i++) {\r\n\t\t\t\tbuilder.append(blobParts[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn builder.getBlob(type);\r\n\t};\r\n}(self));\r\n\n\n//# sourceURL=webpack:///./lib/blob.js?");

/***/ }),

/***/ "./lib/bucket.js":
/*!***********************!*\
  !*** ./lib/bucket.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function bucket() {\r\n\r\n    var event = d3.dispatch('chosen'),\r\n        deposits;\r\n\r\n    return {\r\n        deposit: deposit,\r\n        store: store\r\n    };\r\n\r\n    function deposit() {\r\n        return function(selection) {\r\n            deposits = selection;\r\n            selection.each(function() {\r\n                var sel = d3.select(this);\r\n                sel.attr('data-text', sel.text());\r\n            });\r\n        };\r\n    }\r\n\r\n    function store() {\r\n        var clone, dropped, dims;\r\n        function change() {\r\n            event.chosen(\r\n            deposits.filter(function() {\r\n                return d3.select(this).classed('filled');\r\n            })\r\n            .map(function(elems) {\r\n                return elems.map(function(e) {\r\n                    return d3.select(e).text();\r\n                });\r\n            })[0]);\r\n        }\r\n        var drag = d3.behavior.drag()\r\n            .origin(function() {\r\n                // return { x: d3.event.pageX, y: d3.event.pageY };\r\n                return { x: this.offsetLeft, y: this.offsetTop };\r\n            })\r\n            .on('dragstart', function() {\r\n                clone = d3.select(this.parentNode.insertBefore(this.cloneNode(true), this));\r\n                d3.select(this)\r\n                    .style('position', 'absolute')\r\n                    .style('pointer-events', 'none');\r\n                dims = [this.offsetWidth, this.offsetHeight];\r\n            })\r\n            .on('drag', function() {\r\n                d3.select(this)\r\n                    .style('left', d3.event.x - (dims[0] / 2) + 'px')\r\n                    .style('top', d3.event.y - (dims[1] / 2) + 'px');\r\n            })\r\n            .on('dragend', function() {\r\n                var self = d3.select(this);\r\n                var target = d3.select(d3.event.sourceEvent.target);\r\n                if (target.classed('bucket')) {\r\n                    target\r\n                        .text(self.text())\r\n                        .classed('filled', true);\r\n                    target\r\n                        .append('span')\r\n                        .classed('remove-button', true)\r\n                        .on('click', function() {\r\n                            target\r\n                                .text(target.attr('data-text'))\r\n                                .classed('filled', false);\r\n                            change();\r\n                        });\r\n                    self.remove();\r\n                    clone.call(drag);\r\n                    change();\r\n                } else {\r\n                    self.remove();\r\n                    clone.call(drag);\r\n                }\r\n            });\r\n\r\n        return d3.rebind(function(selection) {\r\n            selection.each(function() {\r\n                var sel = d3.select(this).call(drag);\r\n                sel.attr('data-text', sel.text());\r\n            });\r\n        }, event, 'on');\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./lib/bucket.js?");

/***/ }),

/***/ "./lib/codemirror/lib/codemirror.js":
/*!******************************************!*\
  !*** ./lib/codemirror/lib/codemirror.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// CodeMirror version 3.14\r\n//\r\n// CodeMirror is the only global var we claim\r\nwindow.CodeMirror = (function() {\r\n  \"use strict\";\r\n\r\n  // BROWSER SNIFFING\r\n\r\n  // Crude, but necessary to handle a number of hard-to-feature-detect\r\n  // bugs and behavior differences.\r\n  var gecko = /gecko\\/\\d/i.test(navigator.userAgent);\r\n  var ie = /MSIE \\d/.test(navigator.userAgent);\r\n  var ie_lt8 = ie && (document.documentMode == null || document.documentMode < 8);\r\n  var ie_lt9 = ie && (document.documentMode == null || document.documentMode < 9);\r\n  var webkit = /WebKit\\//.test(navigator.userAgent);\r\n  var qtwebkit = webkit && /Qt\\/\\d+\\.\\d+/.test(navigator.userAgent);\r\n  var chrome = /Chrome\\//.test(navigator.userAgent);\r\n  var opera = /Opera\\//.test(navigator.userAgent);\r\n  var safari = /Apple Computer/.test(navigator.vendor);\r\n  var khtml = /KHTML\\//.test(navigator.userAgent);\r\n  var mac_geLion = /Mac OS X 1\\d\\D([7-9]|\\d\\d)\\D/.test(navigator.userAgent);\r\n  var mac_geMountainLion = /Mac OS X 1\\d\\D([8-9]|\\d\\d)\\D/.test(navigator.userAgent);\r\n  var phantom = /PhantomJS/.test(navigator.userAgent);\r\n\r\n  var ios = /AppleWebKit/.test(navigator.userAgent) && /Mobile\\/\\w+/.test(navigator.userAgent);\r\n  // This is woefully incomplete. Suggestions for alternative methods welcome.\r\n  var mobile = ios || /Android|webOS|BlackBerry|Opera Mini|Opera Mobi|IEMobile/i.test(navigator.userAgent);\r\n  var mac = ios || /Mac/.test(navigator.platform);\r\n  var windows = /windows/i.test(navigator.platform);\r\n\r\n  var opera_version = opera && navigator.userAgent.match(/Version\\/(\\d*\\.\\d*)/);\r\n  if (opera_version) opera_version = Number(opera_version[1]);\r\n  // Some browsers use the wrong event properties to signal cmd/ctrl on OS X\r\n  var flipCtrlCmd = mac && (qtwebkit || opera && (opera_version == null || opera_version < 12.11));\r\n  var captureMiddleClick = gecko || (ie && !ie_lt9);\r\n\r\n  // Optimize some code when these features are not used\r\n  var sawReadOnlySpans = false, sawCollapsedSpans = false;\r\n\r\n  // CONSTRUCTOR\r\n\r\n  function CodeMirror(place, options) {\r\n    if (!(this instanceof CodeMirror)) return new CodeMirror(place, options);\r\n\r\n    this.options = options = options || {};\r\n    // Determine effective options based on given values and defaults.\r\n    for (var opt in defaults) if (!options.hasOwnProperty(opt) && defaults.hasOwnProperty(opt))\r\n      options[opt] = defaults[opt];\r\n    setGuttersForLineNumbers(options);\r\n\r\n    var docStart = typeof options.value == \"string\" ? 0 : options.value.first;\r\n    var display = this.display = makeDisplay(place, docStart);\r\n    display.wrapper.CodeMirror = this;\r\n    updateGutters(this);\r\n    if (options.autofocus && !mobile) focusInput(this);\r\n\r\n    this.state = {keyMaps: [],\r\n                  overlays: [],\r\n                  modeGen: 0,\r\n                  overwrite: false, focused: false,\r\n                  suppressEdits: false, pasteIncoming: false,\r\n                  draggingText: false,\r\n                  highlight: new Delayed()};\r\n\r\n    themeChanged(this);\r\n    if (options.lineWrapping)\r\n      this.display.wrapper.className += \" CodeMirror-wrap\";\r\n\r\n    var doc = options.value;\r\n    if (typeof doc == \"string\") doc = new Doc(options.value, options.mode);\r\n    operation(this, attachDoc)(this, doc);\r\n\r\n    // Override magic textarea content restore that IE sometimes does\r\n    // on our hidden textarea on reload\r\n    if (ie) setTimeout(bind(resetInput, this, true), 20);\r\n\r\n    registerEventHandlers(this);\r\n    // IE throws unspecified error in certain cases, when\r\n    // trying to access activeElement before onload\r\n    var hasFocus; try { hasFocus = (document.activeElement == display.input); } catch(e) { }\r\n    if (hasFocus || (options.autofocus && !mobile)) setTimeout(bind(onFocus, this), 20);\r\n    else onBlur(this);\r\n\r\n    operation(this, function() {\r\n      for (var opt in optionHandlers)\r\n        if (optionHandlers.propertyIsEnumerable(opt))\r\n          optionHandlers[opt](this, options[opt], Init);\r\n      for (var i = 0; i < initHooks.length; ++i) initHooks[i](this);\r\n    })();\r\n  }\r\n\r\n  // DISPLAY CONSTRUCTOR\r\n\r\n  function makeDisplay(place, docStart) {\r\n    var d = {};\r\n\r\n    var input = d.input = elt(\"textarea\", null, null, \"position: absolute; padding: 0; width: 1px; height: 1em; outline: none; font-size: 4px;\");\r\n    if (webkit) input.style.width = \"1000px\";\r\n    else input.setAttribute(\"wrap\", \"off\");\r\n    // if border: 0; -- iOS fails to open keyboard (issue #1287)\r\n    if (ios) input.style.border = \"1px solid black\";\r\n    input.setAttribute(\"autocorrect\", \"off\"); input.setAttribute(\"autocapitalize\", \"off\"); input.setAttribute(\"spellcheck\", \"false\");\r\n\r\n    // Wraps and hides input textarea\r\n    d.inputDiv = elt(\"div\", [input], null, \"overflow: hidden; position: relative; width: 3px; height: 0px;\");\r\n    // The actual fake scrollbars.\r\n    d.scrollbarH = elt(\"div\", [elt(\"div\", null, null, \"height: 1px\")], \"CodeMirror-hscrollbar\");\r\n    d.scrollbarV = elt(\"div\", [elt(\"div\", null, null, \"width: 1px\")], \"CodeMirror-vscrollbar\");\r\n    d.scrollbarFiller = elt(\"div\", null, \"CodeMirror-scrollbar-filler\");\r\n    d.gutterFiller = elt(\"div\", null, \"CodeMirror-gutter-filler\");\r\n    // DIVs containing the selection and the actual code\r\n    d.lineDiv = elt(\"div\", null, \"CodeMirror-code\");\r\n    d.selectionDiv = elt(\"div\", null, null, \"position: relative; z-index: 1\");\r\n    // Blinky cursor, and element used to ensure cursor fits at the end of a line\r\n    d.cursor = elt(\"div\", \"\\u00a0\", \"CodeMirror-cursor\");\r\n    // Secondary cursor, shown when on a 'jump' in bi-directional text\r\n    d.otherCursor = elt(\"div\", \"\\u00a0\", \"CodeMirror-cursor CodeMirror-secondarycursor\");\r\n    // Used to measure text size\r\n    d.measure = elt(\"div\", null, \"CodeMirror-measure\");\r\n    // Wraps everything that needs to exist inside the vertically-padded coordinate system\r\n    d.lineSpace = elt(\"div\", [d.measure, d.selectionDiv, d.lineDiv, d.cursor, d.otherCursor],\r\n                         null, \"position: relative; outline: none\");\r\n    // Moved around its parent to cover visible view\r\n    d.mover = elt(\"div\", [elt(\"div\", [d.lineSpace], \"CodeMirror-lines\")], null, \"position: relative\");\r\n    // Set to the height of the text, causes scrolling\r\n    d.sizer = elt(\"div\", [d.mover], \"CodeMirror-sizer\");\r\n    // D is needed because behavior of elts with overflow: auto and padding is inconsistent across browsers\r\n    d.heightForcer = elt(\"div\", null, null, \"position: absolute; height: \" + scrollerCutOff + \"px; width: 1px;\");\r\n    // Will contain the gutters, if any\r\n    d.gutters = elt(\"div\", null, \"CodeMirror-gutters\");\r\n    d.lineGutter = null;\r\n    // Provides scrolling\r\n    d.scroller = elt(\"div\", [d.sizer, d.heightForcer, d.gutters], \"CodeMirror-scroll\");\r\n    d.scroller.setAttribute(\"tabIndex\", \"-1\");\r\n    // The element in which the editor lives.\r\n    d.wrapper = elt(\"div\", [d.inputDiv, d.scrollbarH, d.scrollbarV,\r\n                            d.scrollbarFiller, d.gutterFiller, d.scroller], \"CodeMirror\");\r\n    // Work around IE7 z-index bug\r\n    if (ie_lt8) { d.gutters.style.zIndex = -1; d.scroller.style.paddingRight = 0; }\r\n    if (place.appendChild) place.appendChild(d.wrapper); else place(d.wrapper);\r\n\r\n    // Needed to hide big blue blinking cursor on Mobile Safari\r\n    if (ios) input.style.width = \"0px\";\r\n    if (!webkit) d.scroller.draggable = true;\r\n    // Needed to handle Tab key in KHTML\r\n    if (khtml) { d.inputDiv.style.height = \"1px\"; d.inputDiv.style.position = \"absolute\"; }\r\n    // Need to set a minimum width to see the scrollbar on IE7 (but must not set it on IE8).\r\n    else if (ie_lt8) d.scrollbarH.style.minWidth = d.scrollbarV.style.minWidth = \"18px\";\r\n\r\n    // Current visible range (may be bigger than the view window).\r\n    d.viewOffset = d.lastSizeC = 0;\r\n    d.showingFrom = d.showingTo = docStart;\r\n\r\n    // Used to only resize the line number gutter when necessary (when\r\n    // the amount of lines crosses a boundary that makes its width change)\r\n    d.lineNumWidth = d.lineNumInnerWidth = d.lineNumChars = null;\r\n    // See readInput and resetInput\r\n    d.prevInput = \"\";\r\n    // Set to true when a non-horizontal-scrolling widget is added. As\r\n    // an optimization, widget aligning is skipped when d is false.\r\n    d.alignWidgets = false;\r\n    // Flag that indicates whether we currently expect input to appear\r\n    // (after some event like 'keypress' or 'input') and are polling\r\n    // intensively.\r\n    d.pollingFast = false;\r\n    // Self-resetting timeout for the poller\r\n    d.poll = new Delayed();\r\n\r\n    d.cachedCharWidth = d.cachedTextHeight = null;\r\n    d.measureLineCache = [];\r\n    d.measureLineCachePos = 0;\r\n\r\n    // Tracks when resetInput has punted to just putting a short\r\n    // string instead of the (large) selection.\r\n    d.inaccurateSelection = false;\r\n\r\n    // Tracks the maximum line length so that the horizontal scrollbar\r\n    // can be kept static when scrolling.\r\n    d.maxLine = null;\r\n    d.maxLineLength = 0;\r\n    d.maxLineChanged = false;\r\n\r\n    // Used for measuring wheel scrolling granularity\r\n    d.wheelDX = d.wheelDY = d.wheelStartX = d.wheelStartY = null;\r\n\r\n    return d;\r\n  }\r\n\r\n  // STATE UPDATES\r\n\r\n  // Used to get the editor into a consistent state again when options change.\r\n\r\n  function loadMode(cm) {\r\n    cm.doc.mode = CodeMirror.getMode(cm.options, cm.doc.modeOption);\r\n    cm.doc.iter(function(line) {\r\n      if (line.stateAfter) line.stateAfter = null;\r\n      if (line.styles) line.styles = null;\r\n    });\r\n    cm.doc.frontier = cm.doc.first;\r\n    startWorker(cm, 100);\r\n    cm.state.modeGen++;\r\n    if (cm.curOp) regChange(cm);\r\n  }\r\n\r\n  function wrappingChanged(cm) {\r\n    if (cm.options.lineWrapping) {\r\n      cm.display.wrapper.className += \" CodeMirror-wrap\";\r\n      cm.display.sizer.style.minWidth = \"\";\r\n    } else {\r\n      cm.display.wrapper.className = cm.display.wrapper.className.replace(\" CodeMirror-wrap\", \"\");\r\n      computeMaxLength(cm);\r\n    }\r\n    estimateLineHeights(cm);\r\n    regChange(cm);\r\n    clearCaches(cm);\r\n    setTimeout(function(){updateScrollbars(cm);}, 100);\r\n  }\r\n\r\n  function estimateHeight(cm) {\r\n    var th = textHeight(cm.display), wrapping = cm.options.lineWrapping;\r\n    var perLine = wrapping && Math.max(5, cm.display.scroller.clientWidth / charWidth(cm.display) - 3);\r\n    return function(line) {\r\n      if (lineIsHidden(cm.doc, line))\r\n        return 0;\r\n      else if (wrapping)\r\n        return (Math.ceil(line.text.length / perLine) || 1) * th;\r\n      else\r\n        return th;\r\n    };\r\n  }\r\n\r\n  function estimateLineHeights(cm) {\r\n    var doc = cm.doc, est = estimateHeight(cm);\r\n    doc.iter(function(line) {\r\n      var estHeight = est(line);\r\n      if (estHeight != line.height) updateLineHeight(line, estHeight);\r\n    });\r\n  }\r\n\r\n  function keyMapChanged(cm) {\r\n    var map = keyMap[cm.options.keyMap], style = map.style;\r\n    cm.display.wrapper.className = cm.display.wrapper.className.replace(/\\s*cm-keymap-\\S+/g, \"\") +\r\n      (style ? \" cm-keymap-\" + style : \"\");\r\n    cm.state.disableInput = map.disableInput;\r\n  }\r\n\r\n  function themeChanged(cm) {\r\n    cm.display.wrapper.className = cm.display.wrapper.className.replace(/\\s*cm-s-\\S+/g, \"\") +\r\n      cm.options.theme.replace(/(^|\\s)\\s*/g, \" cm-s-\");\r\n    clearCaches(cm);\r\n  }\r\n\r\n  function guttersChanged(cm) {\r\n    updateGutters(cm);\r\n    regChange(cm);\r\n    setTimeout(function(){alignHorizontally(cm);}, 20);\r\n  }\r\n\r\n  function updateGutters(cm) {\r\n    var gutters = cm.display.gutters, specs = cm.options.gutters;\r\n    removeChildren(gutters);\r\n    for (var i = 0; i < specs.length; ++i) {\r\n      var gutterClass = specs[i];\r\n      var gElt = gutters.appendChild(elt(\"div\", null, \"CodeMirror-gutter \" + gutterClass));\r\n      if (gutterClass == \"CodeMirror-linenumbers\") {\r\n        cm.display.lineGutter = gElt;\r\n        gElt.style.width = (cm.display.lineNumWidth || 1) + \"px\";\r\n      }\r\n    }\r\n    gutters.style.display = i ? \"\" : \"none\";\r\n  }\r\n\r\n  function lineLength(doc, line) {\r\n    if (line.height == 0) return 0;\r\n    var len = line.text.length, merged, cur = line;\r\n    while (merged = collapsedSpanAtStart(cur)) {\r\n      var found = merged.find();\r\n      cur = getLine(doc, found.from.line);\r\n      len += found.from.ch - found.to.ch;\r\n    }\r\n    cur = line;\r\n    while (merged = collapsedSpanAtEnd(cur)) {\r\n      var found = merged.find();\r\n      len -= cur.text.length - found.from.ch;\r\n      cur = getLine(doc, found.to.line);\r\n      len += cur.text.length - found.to.ch;\r\n    }\r\n    return len;\r\n  }\r\n\r\n  function computeMaxLength(cm) {\r\n    var d = cm.display, doc = cm.doc;\r\n    d.maxLine = getLine(doc, doc.first);\r\n    d.maxLineLength = lineLength(doc, d.maxLine);\r\n    d.maxLineChanged = true;\r\n    doc.iter(function(line) {\r\n      var len = lineLength(doc, line);\r\n      if (len > d.maxLineLength) {\r\n        d.maxLineLength = len;\r\n        d.maxLine = line;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Make sure the gutters options contains the element\r\n  // \"CodeMirror-linenumbers\" when the lineNumbers option is true.\r\n  function setGuttersForLineNumbers(options) {\r\n    var found = false;\r\n    for (var i = 0; i < options.gutters.length; ++i) {\r\n      if (options.gutters[i] == \"CodeMirror-linenumbers\") {\r\n        if (options.lineNumbers) found = true;\r\n        else options.gutters.splice(i--, 1);\r\n      }\r\n    }\r\n    if (!found && options.lineNumbers)\r\n      options.gutters.push(\"CodeMirror-linenumbers\");\r\n  }\r\n\r\n  // SCROLLBARS\r\n\r\n  // Re-synchronize the fake scrollbars with the actual size of the\r\n  // content. Optionally force a scrollTop.\r\n  function updateScrollbars(cm) {\r\n    var d = cm.display, docHeight = cm.doc.height;\r\n    var totalHeight = docHeight + paddingVert(d);\r\n    d.sizer.style.minHeight = d.heightForcer.style.top = totalHeight + \"px\";\r\n    d.gutters.style.height = Math.max(totalHeight, d.scroller.clientHeight - scrollerCutOff) + \"px\";\r\n    var scrollHeight = Math.max(totalHeight, d.scroller.scrollHeight);\r\n    var needsH = d.scroller.scrollWidth > (d.scroller.clientWidth + 1);\r\n    var needsV = scrollHeight > (d.scroller.clientHeight + 1);\r\n    if (needsV) {\r\n      d.scrollbarV.style.display = \"block\";\r\n      d.scrollbarV.style.bottom = needsH ? scrollbarWidth(d.measure) + \"px\" : \"0\";\r\n      d.scrollbarV.firstChild.style.height =\r\n        (scrollHeight - d.scroller.clientHeight + d.scrollbarV.clientHeight) + \"px\";\r\n    } else d.scrollbarV.style.display = \"\";\r\n    if (needsH) {\r\n      d.scrollbarH.style.display = \"block\";\r\n      d.scrollbarH.style.right = needsV ? scrollbarWidth(d.measure) + \"px\" : \"0\";\r\n      d.scrollbarH.firstChild.style.width =\r\n        (d.scroller.scrollWidth - d.scroller.clientWidth + d.scrollbarH.clientWidth) + \"px\";\r\n    } else d.scrollbarH.style.display = \"\";\r\n    if (needsH && needsV) {\r\n      d.scrollbarFiller.style.display = \"block\";\r\n      d.scrollbarFiller.style.height = d.scrollbarFiller.style.width = scrollbarWidth(d.measure) + \"px\";\r\n    } else d.scrollbarFiller.style.display = \"\";\r\n    if (needsH && cm.options.coverGutterNextToScrollbar && cm.options.fixedGutter) {\r\n      d.gutterFiller.style.display = \"block\";\r\n      d.gutterFiller.style.height = scrollbarWidth(d.measure) + \"px\";\r\n      d.gutterFiller.style.width = d.gutters.offsetWidth + \"px\";\r\n    } else d.gutterFiller.style.display = \"\";\r\n\r\n    if (mac_geLion && scrollbarWidth(d.measure) === 0)\r\n      d.scrollbarV.style.minWidth = d.scrollbarH.style.minHeight = mac_geMountainLion ? \"18px\" : \"12px\";\r\n  }\r\n\r\n  function visibleLines(display, doc, viewPort) {\r\n    var top = display.scroller.scrollTop, height = display.wrapper.clientHeight;\r\n    if (typeof viewPort == \"number\") top = viewPort;\r\n    else if (viewPort) {top = viewPort.top; height = viewPort.bottom - viewPort.top;}\r\n    top = Math.floor(top - paddingTop(display));\r\n    var bottom = Math.ceil(top + height);\r\n    return {from: lineAtHeight(doc, top), to: lineAtHeight(doc, bottom)};\r\n  }\r\n\r\n  // LINE NUMBERS\r\n\r\n  function alignHorizontally(cm) {\r\n    var display = cm.display;\r\n    if (!display.alignWidgets && (!display.gutters.firstChild || !cm.options.fixedGutter)) return;\r\n    var comp = compensateForHScroll(display) - display.scroller.scrollLeft + cm.doc.scrollLeft;\r\n    var gutterW = display.gutters.offsetWidth, l = comp + \"px\";\r\n    for (var n = display.lineDiv.firstChild; n; n = n.nextSibling) if (n.alignable) {\r\n      for (var i = 0, a = n.alignable; i < a.length; ++i) a[i].style.left = l;\r\n    }\r\n    if (cm.options.fixedGutter)\r\n      display.gutters.style.left = (comp + gutterW) + \"px\";\r\n  }\r\n\r\n  function maybeUpdateLineNumberWidth(cm) {\r\n    if (!cm.options.lineNumbers) return false;\r\n    var doc = cm.doc, last = lineNumberFor(cm.options, doc.first + doc.size - 1), display = cm.display;\r\n    if (last.length != display.lineNumChars) {\r\n      var test = display.measure.appendChild(elt(\"div\", [elt(\"div\", last)],\r\n                                                 \"CodeMirror-linenumber CodeMirror-gutter-elt\"));\r\n      var innerW = test.firstChild.offsetWidth, padding = test.offsetWidth - innerW;\r\n      display.lineGutter.style.width = \"\";\r\n      display.lineNumInnerWidth = Math.max(innerW, display.lineGutter.offsetWidth - padding);\r\n      display.lineNumWidth = display.lineNumInnerWidth + padding;\r\n      display.lineNumChars = display.lineNumInnerWidth ? last.length : -1;\r\n      display.lineGutter.style.width = display.lineNumWidth + \"px\";\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function lineNumberFor(options, i) {\r\n    return String(options.lineNumberFormatter(i + options.firstLineNumber));\r\n  }\r\n  function compensateForHScroll(display) {\r\n    return getRect(display.scroller).left - getRect(display.sizer).left;\r\n  }\r\n\r\n  // DISPLAY DRAWING\r\n\r\n  function updateDisplay(cm, changes, viewPort) {\r\n    var oldFrom = cm.display.showingFrom, oldTo = cm.display.showingTo, updated;\r\n    var visible = visibleLines(cm.display, cm.doc, viewPort);\r\n    for (;;) {\r\n      if (!updateDisplayInner(cm, changes, visible)) break;\r\n      updated = true;\r\n      updateSelection(cm);\r\n      updateScrollbars(cm);\r\n\r\n      // Clip forced viewport to actual scrollable area\r\n      if (viewPort)\r\n        viewPort = Math.min(cm.display.scroller.scrollHeight - cm.display.scroller.clientHeight,\r\n                            typeof viewPort == \"number\" ? viewPort : viewPort.top);\r\n      visible = visibleLines(cm.display, cm.doc, viewPort);\r\n      if (visible.from >= cm.display.showingFrom && visible.to <= cm.display.showingTo)\r\n        break;\r\n      changes = [];\r\n    }\r\n\r\n    if (updated) {\r\n      signalLater(cm, \"update\", cm);\r\n      if (cm.display.showingFrom != oldFrom || cm.display.showingTo != oldTo)\r\n        signalLater(cm, \"viewportChange\", cm, cm.display.showingFrom, cm.display.showingTo);\r\n    }\r\n    return updated;\r\n  }\r\n\r\n  // Uses a set of changes plus the current scroll position to\r\n  // determine which DOM updates have to be made, and makes the\r\n  // updates.\r\n  function updateDisplayInner(cm, changes, visible) {\r\n    var display = cm.display, doc = cm.doc;\r\n    if (!display.wrapper.clientWidth) {\r\n      display.showingFrom = display.showingTo = doc.first;\r\n      display.viewOffset = 0;\r\n      return;\r\n    }\r\n\r\n    // Bail out if the visible area is already rendered and nothing changed.\r\n    if (changes.length == 0 &&\r\n        visible.from > display.showingFrom && visible.to < display.showingTo)\r\n      return;\r\n\r\n    if (maybeUpdateLineNumberWidth(cm))\r\n      changes = [{from: doc.first, to: doc.first + doc.size}];\r\n    var gutterW = display.sizer.style.marginLeft = display.gutters.offsetWidth + \"px\";\r\n    display.scrollbarH.style.left = cm.options.fixedGutter ? gutterW : \"0\";\r\n\r\n    // Used to determine which lines need their line numbers updated\r\n    var positionsChangedFrom = Infinity;\r\n    if (cm.options.lineNumbers)\r\n      for (var i = 0; i < changes.length; ++i)\r\n        if (changes[i].diff) { positionsChangedFrom = changes[i].from; break; }\r\n\r\n    var end = doc.first + doc.size;\r\n    var from = Math.max(visible.from - cm.options.viewportMargin, doc.first);\r\n    var to = Math.min(end, visible.to + cm.options.viewportMargin);\r\n    if (display.showingFrom < from && from - display.showingFrom < 20) from = Math.max(doc.first, display.showingFrom);\r\n    if (display.showingTo > to && display.showingTo - to < 20) to = Math.min(end, display.showingTo);\r\n    if (sawCollapsedSpans) {\r\n      from = lineNo(visualLine(doc, getLine(doc, from)));\r\n      while (to < end && lineIsHidden(doc, getLine(doc, to))) ++to;\r\n    }\r\n\r\n    // Create a range of theoretically intact lines, and punch holes\r\n    // in that using the change info.\r\n    var intact = [{from: Math.max(display.showingFrom, doc.first),\r\n                   to: Math.min(display.showingTo, end)}];\r\n    if (intact[0].from >= intact[0].to) intact = [];\r\n    else intact = computeIntact(intact, changes);\r\n    // When merged lines are present, we might have to reduce the\r\n    // intact ranges because changes in continued fragments of the\r\n    // intact lines do require the lines to be redrawn.\r\n    if (sawCollapsedSpans)\r\n      for (var i = 0; i < intact.length; ++i) {\r\n        var range = intact[i], merged;\r\n        while (merged = collapsedSpanAtEnd(getLine(doc, range.to - 1))) {\r\n          var newTo = merged.find().from.line;\r\n          if (newTo > range.from) range.to = newTo;\r\n          else { intact.splice(i--, 1); break; }\r\n        }\r\n      }\r\n\r\n    // Clip off the parts that won't be visible\r\n    var intactLines = 0;\r\n    for (var i = 0; i < intact.length; ++i) {\r\n      var range = intact[i];\r\n      if (range.from < from) range.from = from;\r\n      if (range.to > to) range.to = to;\r\n      if (range.from >= range.to) intact.splice(i--, 1);\r\n      else intactLines += range.to - range.from;\r\n    }\r\n    if (intactLines == to - from && from == display.showingFrom && to == display.showingTo) {\r\n      updateViewOffset(cm);\r\n      return;\r\n    }\r\n    intact.sort(function(a, b) {return a.from - b.from;});\r\n\r\n    // Avoid crashing on IE's \"unspecified error\" when in iframes\r\n    try {\r\n      var focused = document.activeElement;\r\n    } catch(e) {}\r\n    if (intactLines < (to - from) * .7) display.lineDiv.style.display = \"none\";\r\n    patchDisplay(cm, from, to, intact, positionsChangedFrom);\r\n    display.lineDiv.style.display = \"\";\r\n    if (focused && document.activeElement != focused && focused.offsetHeight) focused.focus();\r\n\r\n    var different = from != display.showingFrom || to != display.showingTo ||\r\n      display.lastSizeC != display.wrapper.clientHeight;\r\n    // This is just a bogus formula that detects when the editor is\r\n    // resized or the font size changes.\r\n    if (different) {\r\n      display.lastSizeC = display.wrapper.clientHeight;\r\n      startWorker(cm, 400);\r\n    }\r\n    display.showingFrom = from; display.showingTo = to;\r\n\r\n    var prevBottom = display.lineDiv.offsetTop;\r\n    for (var node = display.lineDiv.firstChild, height; node; node = node.nextSibling) if (node.lineObj) {\r\n      if (ie_lt8) {\r\n        var bot = node.offsetTop + node.offsetHeight;\r\n        height = bot - prevBottom;\r\n        prevBottom = bot;\r\n      } else {\r\n        var box = getRect(node);\r\n        height = box.bottom - box.top;\r\n      }\r\n      var diff = node.lineObj.height - height;\r\n      if (height < 2) height = textHeight(display);\r\n      if (diff > .001 || diff < -.001) {\r\n        updateLineHeight(node.lineObj, height);\r\n        var widgets = node.lineObj.widgets;\r\n        if (widgets) for (var i = 0; i < widgets.length; ++i)\r\n          widgets[i].height = widgets[i].node.offsetHeight;\r\n      }\r\n    }\r\n    updateViewOffset(cm);\r\n\r\n    return true;\r\n  }\r\n\r\n  function updateViewOffset(cm) {\r\n    var off = cm.display.viewOffset = heightAtLine(cm, getLine(cm.doc, cm.display.showingFrom));\r\n    // Position the mover div to align with the current virtual scroll position\r\n    cm.display.mover.style.top = off + \"px\";\r\n  }\r\n\r\n  function computeIntact(intact, changes) {\r\n    for (var i = 0, l = changes.length || 0; i < l; ++i) {\r\n      var change = changes[i], intact2 = [], diff = change.diff || 0;\r\n      for (var j = 0, l2 = intact.length; j < l2; ++j) {\r\n        var range = intact[j];\r\n        if (change.to <= range.from && change.diff) {\r\n          intact2.push({from: range.from + diff, to: range.to + diff});\r\n        } else if (change.to <= range.from || change.from >= range.to) {\r\n          intact2.push(range);\r\n        } else {\r\n          if (change.from > range.from)\r\n            intact2.push({from: range.from, to: change.from});\r\n          if (change.to < range.to)\r\n            intact2.push({from: change.to + diff, to: range.to + diff});\r\n        }\r\n      }\r\n      intact = intact2;\r\n    }\r\n    return intact;\r\n  }\r\n\r\n  function getDimensions(cm) {\r\n    var d = cm.display, left = {}, width = {};\r\n    for (var n = d.gutters.firstChild, i = 0; n; n = n.nextSibling, ++i) {\r\n      left[cm.options.gutters[i]] = n.offsetLeft;\r\n      width[cm.options.gutters[i]] = n.offsetWidth;\r\n    }\r\n    return {fixedPos: compensateForHScroll(d),\r\n            gutterTotalWidth: d.gutters.offsetWidth,\r\n            gutterLeft: left,\r\n            gutterWidth: width,\r\n            wrapperWidth: d.wrapper.clientWidth};\r\n  }\r\n\r\n  function patchDisplay(cm, from, to, intact, updateNumbersFrom) {\r\n    var dims = getDimensions(cm);\r\n    var display = cm.display, lineNumbers = cm.options.lineNumbers;\r\n    if (!intact.length && (!webkit || !cm.display.currentWheelTarget))\r\n      removeChildren(display.lineDiv);\r\n    var container = display.lineDiv, cur = container.firstChild;\r\n\r\n    function rm(node) {\r\n      var next = node.nextSibling;\r\n      if (webkit && mac && cm.display.currentWheelTarget == node) {\r\n        node.style.display = \"none\";\r\n        node.lineObj = null;\r\n      } else {\r\n        node.parentNode.removeChild(node);\r\n      }\r\n      return next;\r\n    }\r\n\r\n    var nextIntact = intact.shift(), lineN = from;\r\n    cm.doc.iter(from, to, function(line) {\r\n      if (nextIntact && nextIntact.to == lineN) nextIntact = intact.shift();\r\n      if (lineIsHidden(cm.doc, line)) {\r\n        if (line.height != 0) updateLineHeight(line, 0);\r\n        if (line.widgets && cur.previousSibling) for (var i = 0; i < line.widgets.length; ++i) {\r\n          var w = line.widgets[i];\r\n          if (w.showIfHidden) {\r\n            var prev = cur.previousSibling;\r\n            if (/pre/i.test(prev.nodeName)) {\r\n              var wrap = elt(\"div\", null, null, \"position: relative\");\r\n              prev.parentNode.replaceChild(wrap, prev);\r\n              wrap.appendChild(prev);\r\n              prev = wrap;\r\n            }\r\n            var wnode = prev.appendChild(elt(\"div\", [w.node], \"CodeMirror-linewidget\"));\r\n            if (!w.handleMouseEvents) wnode.ignoreEvents = true;\r\n            positionLineWidget(w, wnode, prev, dims);\r\n          }\r\n        }\r\n      } else if (nextIntact && nextIntact.from <= lineN && nextIntact.to > lineN) {\r\n        // This line is intact. Skip to the actual node. Update its\r\n        // line number if needed.\r\n        while (cur.lineObj != line) cur = rm(cur);\r\n        if (lineNumbers && updateNumbersFrom <= lineN && cur.lineNumber)\r\n          setTextContent(cur.lineNumber, lineNumberFor(cm.options, lineN));\r\n        cur = cur.nextSibling;\r\n      } else {\r\n        // For lines with widgets, make an attempt to find and reuse\r\n        // the existing element, so that widgets aren't needlessly\r\n        // removed and re-inserted into the dom\r\n        if (line.widgets) for (var j = 0, search = cur, reuse; search && j < 20; ++j, search = search.nextSibling)\r\n          if (search.lineObj == line && /div/i.test(search.nodeName)) { reuse = search; break; }\r\n        // This line needs to be generated.\r\n        var lineNode = buildLineElement(cm, line, lineN, dims, reuse);\r\n        if (lineNode != reuse) {\r\n          container.insertBefore(lineNode, cur);\r\n        } else {\r\n          while (cur != reuse) cur = rm(cur);\r\n          cur = cur.nextSibling;\r\n        }\r\n\r\n        lineNode.lineObj = line;\r\n      }\r\n      ++lineN;\r\n    });\r\n    while (cur) cur = rm(cur);\r\n  }\r\n\r\n  function buildLineElement(cm, line, lineNo, dims, reuse) {\r\n    var lineElement = lineContent(cm, line);\r\n    var markers = line.gutterMarkers, display = cm.display, wrap;\r\n\r\n    if (!cm.options.lineNumbers && !markers && !line.bgClass && !line.wrapClass && !line.widgets)\r\n      return lineElement;\r\n\r\n    // Lines with gutter elements, widgets or a background class need\r\n    // to be wrapped again, and have the extra elements added to the\r\n    // wrapper div\r\n\r\n    if (reuse) {\r\n      reuse.alignable = null;\r\n      var isOk = true, widgetsSeen = 0, insertBefore = null;\r\n      for (var n = reuse.firstChild, next; n; n = next) {\r\n        next = n.nextSibling;\r\n        if (!/\\bCodeMirror-linewidget\\b/.test(n.className)) {\r\n          reuse.removeChild(n);\r\n        } else {\r\n          for (var i = 0, first = true; i < line.widgets.length; ++i) {\r\n            var widget = line.widgets[i];\r\n            if (!widget.above) { insertBefore = n; first = false; }\r\n            if (widget.node == n.firstChild) {\r\n              positionLineWidget(widget, n, reuse, dims);\r\n              ++widgetsSeen;\r\n              break;\r\n            }\r\n          }\r\n          if (i == line.widgets.length) { isOk = false; break; }\r\n        }\r\n      }\r\n      reuse.insertBefore(lineElement, insertBefore);\r\n      if (isOk && widgetsSeen == line.widgets.length) {\r\n        wrap = reuse;\r\n        reuse.className = line.wrapClass || \"\";\r\n      }\r\n    }\r\n    if (!wrap) {\r\n      wrap = elt(\"div\", null, line.wrapClass, \"position: relative\");\r\n      wrap.appendChild(lineElement);\r\n    }\r\n    // Kludge to make sure the styled element lies behind the selection (by z-index)\r\n    if (line.bgClass)\r\n      wrap.insertBefore(elt(\"div\", null, line.bgClass + \" CodeMirror-linebackground\"), wrap.firstChild);\r\n    if (cm.options.lineNumbers || markers) {\r\n      var gutterWrap = wrap.insertBefore(elt(\"div\", null, null, \"position: absolute; left: \" +\r\n                                             (cm.options.fixedGutter ? dims.fixedPos : -dims.gutterTotalWidth) + \"px\"),\r\n                                         wrap.firstChild);\r\n      if (cm.options.fixedGutter) (wrap.alignable || (wrap.alignable = [])).push(gutterWrap);\r\n      if (cm.options.lineNumbers && (!markers || !markers[\"CodeMirror-linenumbers\"]))\r\n        wrap.lineNumber = gutterWrap.appendChild(\r\n          elt(\"div\", lineNumberFor(cm.options, lineNo),\r\n              \"CodeMirror-linenumber CodeMirror-gutter-elt\",\r\n              \"left: \" + dims.gutterLeft[\"CodeMirror-linenumbers\"] + \"px; width: \"\r\n              + display.lineNumInnerWidth + \"px\"));\r\n      if (markers)\r\n        for (var k = 0; k < cm.options.gutters.length; ++k) {\r\n          var id = cm.options.gutters[k], found = markers.hasOwnProperty(id) && markers[id];\r\n          if (found)\r\n            gutterWrap.appendChild(elt(\"div\", [found], \"CodeMirror-gutter-elt\", \"left: \" +\r\n                                       dims.gutterLeft[id] + \"px; width: \" + dims.gutterWidth[id] + \"px\"));\r\n        }\r\n    }\r\n    if (ie_lt8) wrap.style.zIndex = 2;\r\n    if (line.widgets && wrap != reuse) for (var i = 0, ws = line.widgets; i < ws.length; ++i) {\r\n      var widget = ws[i], node = elt(\"div\", [widget.node], \"CodeMirror-linewidget\");\r\n      if (!widget.handleMouseEvents) node.ignoreEvents = true;\r\n      positionLineWidget(widget, node, wrap, dims);\r\n      if (widget.above)\r\n        wrap.insertBefore(node, cm.options.lineNumbers && line.height != 0 ? gutterWrap : lineElement);\r\n      else\r\n        wrap.appendChild(node);\r\n      signalLater(widget, \"redraw\");\r\n    }\r\n    return wrap;\r\n  }\r\n\r\n  function positionLineWidget(widget, node, wrap, dims) {\r\n    if (widget.noHScroll) {\r\n      (wrap.alignable || (wrap.alignable = [])).push(node);\r\n      var width = dims.wrapperWidth;\r\n      node.style.left = dims.fixedPos + \"px\";\r\n      if (!widget.coverGutter) {\r\n        width -= dims.gutterTotalWidth;\r\n        node.style.paddingLeft = dims.gutterTotalWidth + \"px\";\r\n      }\r\n      node.style.width = width + \"px\";\r\n    }\r\n    if (widget.coverGutter) {\r\n      node.style.zIndex = 5;\r\n      node.style.position = \"relative\";\r\n      if (!widget.noHScroll) node.style.marginLeft = -dims.gutterTotalWidth + \"px\";\r\n    }\r\n  }\r\n\r\n  // SELECTION / CURSOR\r\n\r\n  function updateSelection(cm) {\r\n    var display = cm.display;\r\n    var collapsed = posEq(cm.doc.sel.from, cm.doc.sel.to);\r\n    if (collapsed || cm.options.showCursorWhenSelecting)\r\n      updateSelectionCursor(cm);\r\n    else\r\n      display.cursor.style.display = display.otherCursor.style.display = \"none\";\r\n    if (!collapsed)\r\n      updateSelectionRange(cm);\r\n    else\r\n      display.selectionDiv.style.display = \"none\";\r\n\r\n    // Move the hidden textarea near the cursor to prevent scrolling artifacts\r\n    if (cm.options.moveInputWithCursor) {\r\n      var headPos = cursorCoords(cm, cm.doc.sel.head, \"div\");\r\n      var wrapOff = getRect(display.wrapper), lineOff = getRect(display.lineDiv);\r\n      display.inputDiv.style.top = Math.max(0, Math.min(display.wrapper.clientHeight - 10,\r\n                                                        headPos.top + lineOff.top - wrapOff.top)) + \"px\";\r\n      display.inputDiv.style.left = Math.max(0, Math.min(display.wrapper.clientWidth - 10,\r\n                                                         headPos.left + lineOff.left - wrapOff.left)) + \"px\";\r\n    }\r\n  }\r\n\r\n  // No selection, plain cursor\r\n  function updateSelectionCursor(cm) {\r\n    var display = cm.display, pos = cursorCoords(cm, cm.doc.sel.head, \"div\");\r\n    display.cursor.style.left = pos.left + \"px\";\r\n    display.cursor.style.top = pos.top + \"px\";\r\n    display.cursor.style.height = Math.max(0, pos.bottom - pos.top) * cm.options.cursorHeight + \"px\";\r\n    display.cursor.style.display = \"\";\r\n\r\n    if (pos.other) {\r\n      display.otherCursor.style.display = \"\";\r\n      display.otherCursor.style.left = pos.other.left + \"px\";\r\n      display.otherCursor.style.top = pos.other.top + \"px\";\r\n      display.otherCursor.style.height = (pos.other.bottom - pos.other.top) * .85 + \"px\";\r\n    } else { display.otherCursor.style.display = \"none\"; }\r\n  }\r\n\r\n  // Highlight selection\r\n  function updateSelectionRange(cm) {\r\n    var display = cm.display, doc = cm.doc, sel = cm.doc.sel;\r\n    var fragment = document.createDocumentFragment();\r\n    var clientWidth = display.lineSpace.offsetWidth, pl = paddingLeft(cm.display);\r\n\r\n    function add(left, top, width, bottom) {\r\n      if (top < 0) top = 0;\r\n      fragment.appendChild(elt(\"div\", null, \"CodeMirror-selected\", \"position: absolute; left: \" + left +\r\n                               \"px; top: \" + top + \"px; width: \" + (width == null ? clientWidth - left : width) +\r\n                               \"px; height: \" + (bottom - top) + \"px\"));\r\n    }\r\n\r\n    function drawForLine(line, fromArg, toArg) {\r\n      var lineObj = getLine(doc, line);\r\n      var lineLen = lineObj.text.length;\r\n      var start, end;\r\n      function coords(ch, bias) {\r\n        return charCoords(cm, Pos(line, ch), \"div\", lineObj, bias);\r\n      }\r\n\r\n      iterateBidiSections(getOrder(lineObj), fromArg || 0, toArg == null ? lineLen : toArg, function(from, to, dir) {\r\n        var leftPos = coords(from, \"left\"), rightPos, left, right;\r\n        if (from == to) {\r\n          rightPos = leftPos;\r\n          left = right = leftPos.left;\r\n        } else {\r\n          rightPos = coords(to - 1, \"right\");\r\n          if (dir == \"rtl\") { var tmp = leftPos; leftPos = rightPos; rightPos = tmp; }\r\n          left = leftPos.left;\r\n          right = rightPos.right;\r\n        }\r\n        if (fromArg == null && from == 0) left = pl;\r\n        if (rightPos.top - leftPos.top > 3) { // Different lines, draw top part\r\n          add(left, leftPos.top, null, leftPos.bottom);\r\n          left = pl;\r\n          if (leftPos.bottom < rightPos.top) add(left, leftPos.bottom, null, rightPos.top);\r\n        }\r\n        if (toArg == null && to == lineLen) right = clientWidth;\r\n        if (!start || leftPos.top < start.top || leftPos.top == start.top && leftPos.left < start.left)\r\n          start = leftPos;\r\n        if (!end || rightPos.bottom > end.bottom || rightPos.bottom == end.bottom && rightPos.right > end.right)\r\n          end = rightPos;\r\n        if (left < pl + 1) left = pl;\r\n        add(left, rightPos.top, right - left, rightPos.bottom);\r\n      });\r\n      return {start: start, end: end};\r\n    }\r\n\r\n    if (sel.from.line == sel.to.line) {\r\n      drawForLine(sel.from.line, sel.from.ch, sel.to.ch);\r\n    } else {\r\n      var fromLine = getLine(doc, sel.from.line), toLine = getLine(doc, sel.to.line);\r\n      var singleVLine = visualLine(doc, fromLine) == visualLine(doc, toLine);\r\n      var leftEnd = drawForLine(sel.from.line, sel.from.ch, singleVLine ? fromLine.text.length : null).end;\r\n      var rightStart = drawForLine(sel.to.line, singleVLine ? 0 : null, sel.to.ch).start;\r\n      if (singleVLine) {\r\n        if (leftEnd.top < rightStart.top - 2) {\r\n          add(leftEnd.right, leftEnd.top, null, leftEnd.bottom);\r\n          add(pl, rightStart.top, rightStart.left, rightStart.bottom);\r\n        } else {\r\n          add(leftEnd.right, leftEnd.top, rightStart.left - leftEnd.right, leftEnd.bottom);\r\n        }\r\n      }\r\n      if (leftEnd.bottom < rightStart.top)\r\n        add(pl, leftEnd.bottom, null, rightStart.top);\r\n    }\r\n\r\n    removeChildrenAndAdd(display.selectionDiv, fragment);\r\n    display.selectionDiv.style.display = \"\";\r\n  }\r\n\r\n  // Cursor-blinking\r\n  function restartBlink(cm) {\r\n    if (!cm.state.focused) return;\r\n    var display = cm.display;\r\n    clearInterval(display.blinker);\r\n    var on = true;\r\n    display.cursor.style.visibility = display.otherCursor.style.visibility = \"\";\r\n    display.blinker = setInterval(function() {\r\n      display.cursor.style.visibility = display.otherCursor.style.visibility = (on = !on) ? \"\" : \"hidden\";\r\n    }, cm.options.cursorBlinkRate);\r\n  }\r\n\r\n  // HIGHLIGHT WORKER\r\n\r\n  function startWorker(cm, time) {\r\n    if (cm.doc.mode.startState && cm.doc.frontier < cm.display.showingTo)\r\n      cm.state.highlight.set(time, bind(highlightWorker, cm));\r\n  }\r\n\r\n  function highlightWorker(cm) {\r\n    var doc = cm.doc;\r\n    if (doc.frontier < doc.first) doc.frontier = doc.first;\r\n    if (doc.frontier >= cm.display.showingTo) return;\r\n    var end = +new Date + cm.options.workTime;\r\n    var state = copyState(doc.mode, getStateBefore(cm, doc.frontier));\r\n    var changed = [], prevChange;\r\n    doc.iter(doc.frontier, Math.min(doc.first + doc.size, cm.display.showingTo + 500), function(line) {\r\n      if (doc.frontier >= cm.display.showingFrom) { // Visible\r\n        var oldStyles = line.styles;\r\n        line.styles = highlightLine(cm, line, state);\r\n        var ischange = !oldStyles || oldStyles.length != line.styles.length;\r\n        for (var i = 0; !ischange && i < oldStyles.length; ++i) ischange = oldStyles[i] != line.styles[i];\r\n        if (ischange) {\r\n          if (prevChange && prevChange.end == doc.frontier) prevChange.end++;\r\n          else changed.push(prevChange = {start: doc.frontier, end: doc.frontier + 1});\r\n        }\r\n        line.stateAfter = copyState(doc.mode, state);\r\n      } else {\r\n        processLine(cm, line, state);\r\n        line.stateAfter = doc.frontier % 5 == 0 ? copyState(doc.mode, state) : null;\r\n      }\r\n      ++doc.frontier;\r\n      if (+new Date > end) {\r\n        startWorker(cm, cm.options.workDelay);\r\n        return true;\r\n      }\r\n    });\r\n    if (changed.length)\r\n      operation(cm, function() {\r\n        for (var i = 0; i < changed.length; ++i)\r\n          regChange(this, changed[i].start, changed[i].end);\r\n      })();\r\n  }\r\n\r\n  // Finds the line to start with when starting a parse. Tries to\r\n  // find a line with a stateAfter, so that it can start with a\r\n  // valid state. If that fails, it returns the line with the\r\n  // smallest indentation, which tends to need the least context to\r\n  // parse correctly.\r\n  function findStartLine(cm, n, precise) {\r\n    var minindent, minline, doc = cm.doc;\r\n    for (var search = n, lim = n - 100; search > lim; --search) {\r\n      if (search <= doc.first) return doc.first;\r\n      var line = getLine(doc, search - 1);\r\n      if (line.stateAfter && (!precise || search <= doc.frontier)) return search;\r\n      var indented = countColumn(line.text, null, cm.options.tabSize);\r\n      if (minline == null || minindent > indented) {\r\n        minline = search - 1;\r\n        minindent = indented;\r\n      }\r\n    }\r\n    return minline;\r\n  }\r\n\r\n  function getStateBefore(cm, n, precise) {\r\n    var doc = cm.doc, display = cm.display;\r\n      if (!doc.mode.startState) return true;\r\n    var pos = findStartLine(cm, n, precise), state = pos > doc.first && getLine(doc, pos-1).stateAfter;\r\n    if (!state) state = startState(doc.mode);\r\n    else state = copyState(doc.mode, state);\r\n    doc.iter(pos, n, function(line) {\r\n      processLine(cm, line, state);\r\n      var save = pos == n - 1 || pos % 5 == 0 || pos >= display.showingFrom && pos < display.showingTo;\r\n      line.stateAfter = save ? copyState(doc.mode, state) : null;\r\n      ++pos;\r\n    });\r\n    return state;\r\n  }\r\n\r\n  // POSITION MEASUREMENT\r\n\r\n  function paddingTop(display) {return display.lineSpace.offsetTop;}\r\n  function paddingVert(display) {return display.mover.offsetHeight - display.lineSpace.offsetHeight;}\r\n  function paddingLeft(display) {\r\n    var e = removeChildrenAndAdd(display.measure, elt(\"pre\", null, null, \"text-align: left\")).appendChild(elt(\"span\", \"x\"));\r\n    return e.offsetLeft;\r\n  }\r\n\r\n  function measureChar(cm, line, ch, data, bias) {\r\n    var dir = -1;\r\n    data = data || measureLine(cm, line);\r\n\r\n    for (var pos = ch;; pos += dir) {\r\n      var r = data[pos];\r\n      if (r) break;\r\n      if (dir < 0 && pos == 0) dir = 1;\r\n    }\r\n    var rightV = (pos < ch || bias == \"right\") && r.topRight != null;\r\n    return {left: pos < ch ? r.right : r.left,\r\n            right: pos > ch ? r.left : r.right,\r\n            top: rightV ? r.topRight : r.top,\r\n            bottom: rightV ? r.bottomRight : r.bottom};\r\n  }\r\n\r\n  function findCachedMeasurement(cm, line) {\r\n    var cache = cm.display.measureLineCache;\r\n    for (var i = 0; i < cache.length; ++i) {\r\n      var memo = cache[i];\r\n      if (memo.text == line.text && memo.markedSpans == line.markedSpans &&\r\n          cm.display.scroller.clientWidth == memo.width &&\r\n          memo.classes == line.textClass + \"|\" + line.bgClass + \"|\" + line.wrapClass)\r\n        return memo;\r\n    }\r\n  }\r\n\r\n  function clearCachedMeasurement(cm, line) {\r\n    var exists = findCachedMeasurement(cm, line);\r\n    if (exists) exists.text = exists.measure = exists.markedSpans = null;\r\n  }\r\n\r\n  function measureLine(cm, line) {\r\n    // First look in the cache\r\n    var cached = findCachedMeasurement(cm, line);\r\n    if (cached) return cached.measure;\r\n\r\n    // Failing that, recompute and store result in cache\r\n    var measure = measureLineInner(cm, line);\r\n    var cache = cm.display.measureLineCache;\r\n    var memo = {text: line.text, width: cm.display.scroller.clientWidth,\r\n                markedSpans: line.markedSpans, measure: measure,\r\n                classes: line.textClass + \"|\" + line.bgClass + \"|\" + line.wrapClass};\r\n    if (cache.length == 16) cache[++cm.display.measureLineCachePos % 16] = memo;\r\n    else cache.push(memo);\r\n    return measure;\r\n  }\r\n\r\n  function measureLineInner(cm, line) {\r\n    var display = cm.display, measure = emptyArray(line.text.length);\r\n    var pre = lineContent(cm, line, measure);\r\n\r\n    // IE does not cache element positions of inline elements between\r\n    // calls to getBoundingClientRect. This makes the loop below,\r\n    // which gathers the positions of all the characters on the line,\r\n    // do an amount of layout work quadratic to the number of\r\n    // characters. When line wrapping is off, we try to improve things\r\n    // by first subdividing the line into a bunch of inline blocks, so\r\n    // that IE can reuse most of the layout information from caches\r\n    // for those blocks. This does interfere with line wrapping, so it\r\n    // doesn't work when wrapping is on, but in that case the\r\n    // situation is slightly better, since IE does cache line-wrapping\r\n    // information and only recomputes per-line.\r\n    if (ie && !ie_lt8 && !cm.options.lineWrapping && pre.childNodes.length > 100) {\r\n      var fragment = document.createDocumentFragment();\r\n      var chunk = 10, n = pre.childNodes.length;\r\n      for (var i = 0, chunks = Math.ceil(n / chunk); i < chunks; ++i) {\r\n        var wrap = elt(\"div\", null, null, \"display: inline-block\");\r\n        for (var j = 0; j < chunk && n; ++j) {\r\n          wrap.appendChild(pre.firstChild);\r\n          --n;\r\n        }\r\n        fragment.appendChild(wrap);\r\n      }\r\n      pre.appendChild(fragment);\r\n    }\r\n\r\n    removeChildrenAndAdd(display.measure, pre);\r\n\r\n    var outer = getRect(display.lineDiv);\r\n    var vranges = [], data = emptyArray(line.text.length), maxBot = pre.offsetHeight;\r\n    // Work around an IE7/8 bug where it will sometimes have randomly\r\n    // replaced our pre with a clone at this point.\r\n    if (ie_lt9 && display.measure.first != pre)\r\n      removeChildrenAndAdd(display.measure, pre);\r\n\r\n    function categorizeVSpan(top, bot) {\r\n      if (bot > maxBot) bot = maxBot;\r\n      if (top < 0) top = 0;\r\n      for (var j = 0; j < vranges.length; j += 2) {\r\n        var rtop = vranges[j], rbot = vranges[j+1];\r\n        if (rtop > bot || rbot < top) continue;\r\n        if (rtop <= top && rbot >= bot ||\r\n            top <= rtop && bot >= rbot ||\r\n            Math.min(bot, rbot) - Math.max(top, rtop) >= (bot - top) >> 1) {\r\n          vranges[j] = Math.min(top, rtop);\r\n          vranges[j+1] = Math.max(bot, rbot);\r\n          return j;\r\n        }\r\n      }\r\n      vranges.push(top, bot);\r\n      return j;\r\n    }\r\n\r\n    for (var i = 0, cur; i < measure.length; ++i) if (cur = measure[i]) {\r\n      var size, node = cur;\r\n      // A widget might wrap, needs special care\r\n      if (/\\bCodeMirror-widget\\b/.test(cur.className) && cur.getClientRects) {\r\n        if (cur.firstChild.nodeType == 1) node = cur.firstChild;\r\n        var rects = node.getClientRects(), rLeft = rects[0], rRight = rects[rects.length - 1];\r\n        if (rects.length > 1) {\r\n          var vCatLeft = categorizeVSpan(rLeft.top - outer.top, rLeft.bottom - outer.top);\r\n          var vCatRight = categorizeVSpan(rRight.top - outer.top, rRight.bottom - outer.top);\r\n          data[i] = {left: rLeft.left - outer.left, right: rRight.right - outer.left,\r\n                     top: vCatLeft, topRight: vCatRight};\r\n          continue;\r\n        }\r\n      }\r\n      size = getRect(node);\r\n      var vCat = categorizeVSpan(size.top - outer.top, size.bottom - outer.top);\r\n      var right = size.right;\r\n      if (cur.measureRight) right = getRect(cur.measureRight).left;\r\n      data[i] = {left: size.left - outer.left, right: right - outer.left, top: vCat};\r\n    }\r\n    for (var i = 0, cur; i < data.length; ++i) if (cur = data[i]) {\r\n      var vr = cur.top, vrRight = cur.topRight;\r\n      cur.top = vranges[vr]; cur.bottom = vranges[vr+1];\r\n      if (vrRight != null) { cur.topRight = vranges[vrRight]; cur.bottomRight = vranges[vrRight+1]; }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  function measureLineWidth(cm, line) {\r\n    var hasBadSpan = false;\r\n    if (line.markedSpans) for (var i = 0; i < line.markedSpans; ++i) {\r\n      var sp = line.markedSpans[i];\r\n      if (sp.collapsed && (sp.to == null || sp.to == line.text.length)) hasBadSpan = true;\r\n    }\r\n    var cached = !hasBadSpan && findCachedMeasurement(cm, line);\r\n    if (cached) return measureChar(cm, line, line.text.length, cached.measure, \"right\").right;\r\n\r\n    var pre = lineContent(cm, line);\r\n    var end = pre.appendChild(zeroWidthElement(cm.display.measure));\r\n    removeChildrenAndAdd(cm.display.measure, pre);\r\n    return getRect(end).right - getRect(cm.display.lineDiv).left;\r\n  }\r\n\r\n  function clearCaches(cm) {\r\n    cm.display.measureLineCache.length = cm.display.measureLineCachePos = 0;\r\n    cm.display.cachedCharWidth = cm.display.cachedTextHeight = null;\r\n    if (!cm.options.lineWrapping) cm.display.maxLineChanged = true;\r\n    cm.display.lineNumChars = null;\r\n  }\r\n\r\n  function pageScrollX() { return window.pageXOffset || (document.documentElement || document.body).scrollLeft; }\r\n  function pageScrollY() { return window.pageYOffset || (document.documentElement || document.body).scrollTop; }\r\n\r\n  // Context is one of \"line\", \"div\" (display.lineDiv), \"local\"/null (editor), or \"page\"\r\n  function intoCoordSystem(cm, lineObj, rect, context) {\r\n    if (lineObj.widgets) for (var i = 0; i < lineObj.widgets.length; ++i) if (lineObj.widgets[i].above) {\r\n      var size = widgetHeight(lineObj.widgets[i]);\r\n      rect.top += size; rect.bottom += size;\r\n    }\r\n    if (context == \"line\") return rect;\r\n    if (!context) context = \"local\";\r\n    var yOff = heightAtLine(cm, lineObj);\r\n    if (context == \"local\") yOff += paddingTop(cm.display);\r\n    else yOff -= cm.display.viewOffset;\r\n    if (context == \"page\" || context == \"window\") {\r\n      var lOff = getRect(cm.display.lineSpace);\r\n      yOff += lOff.top + (context == \"window\" ? 0 : pageScrollY());\r\n      var xOff = lOff.left + (context == \"window\" ? 0 : pageScrollX());\r\n      rect.left += xOff; rect.right += xOff;\r\n    }\r\n    rect.top += yOff; rect.bottom += yOff;\r\n    return rect;\r\n  }\r\n\r\n  // Context may be \"window\", \"page\", \"div\", or \"local\"/null\r\n  // Result is in \"div\" coords\r\n  function fromCoordSystem(cm, coords, context) {\r\n    if (context == \"div\") return coords;\r\n    var left = coords.left, top = coords.top;\r\n    // First move into \"page\" coordinate system\r\n    if (context == \"page\") {\r\n      left -= pageScrollX();\r\n      top -= pageScrollY();\r\n    } else if (context == \"local\" || !context) {\r\n      var localBox = getRect(cm.display.sizer);\r\n      left += localBox.left;\r\n      top += localBox.top;\r\n    }\r\n\r\n    var lineSpaceBox = getRect(cm.display.lineSpace);\r\n    return {left: left - lineSpaceBox.left, top: top - lineSpaceBox.top};\r\n  }\r\n\r\n  function charCoords(cm, pos, context, lineObj, bias) {\r\n    if (!lineObj) lineObj = getLine(cm.doc, pos.line);\r\n    return intoCoordSystem(cm, lineObj, measureChar(cm, lineObj, pos.ch, null, bias), context);\r\n  }\r\n\r\n  function cursorCoords(cm, pos, context, lineObj, measurement) {\r\n    lineObj = lineObj || getLine(cm.doc, pos.line);\r\n    if (!measurement) measurement = measureLine(cm, lineObj);\r\n    function get(ch, right) {\r\n      var m = measureChar(cm, lineObj, ch, measurement, right ? \"right\" : \"left\");\r\n      if (right) m.left = m.right; else m.right = m.left;\r\n      return intoCoordSystem(cm, lineObj, m, context);\r\n    }\r\n    function getBidi(ch, partPos) {\r\n      var part = order[partPos], right = part.level % 2;\r\n      if (ch == bidiLeft(part) && partPos && part.level < order[partPos - 1].level) {\r\n        part = order[--partPos];\r\n        ch = bidiRight(part) - (part.level % 2 ? 0 : 1);\r\n        right = true;\r\n      } else if (ch == bidiRight(part) && partPos < order.length - 1 && part.level < order[partPos + 1].level) {\r\n        part = order[++partPos];\r\n        ch = bidiLeft(part) - part.level % 2;\r\n        right = false;\r\n      }\r\n      if (right && ch == part.to && ch > part.from) return get(ch - 1);\r\n      return get(ch, right);\r\n    }\r\n    var order = getOrder(lineObj), ch = pos.ch;\r\n    if (!order) return get(ch);\r\n    var partPos = getBidiPartAt(order, ch);\r\n    var val = getBidi(ch, partPos);\r\n    if (bidiOther != null) val.other = getBidi(ch, bidiOther);\r\n    return val;\r\n  }\r\n\r\n  function PosWithInfo(line, ch, outside, xRel) {\r\n    var pos = new Pos(line, ch);\r\n    pos.xRel = xRel;\r\n    if (outside) pos.outside = true;\r\n    return pos;\r\n  }\r\n\r\n  // Coords must be lineSpace-local\r\n  function coordsChar(cm, x, y) {\r\n    var doc = cm.doc;\r\n    y += cm.display.viewOffset;\r\n    if (y < 0) return PosWithInfo(doc.first, 0, true, -1);\r\n    var lineNo = lineAtHeight(doc, y), last = doc.first + doc.size - 1;\r\n    if (lineNo > last)\r\n      return PosWithInfo(doc.first + doc.size - 1, getLine(doc, last).text.length, true, 1);\r\n    if (x < 0) x = 0;\r\n\r\n    for (;;) {\r\n      var lineObj = getLine(doc, lineNo);\r\n      var found = coordsCharInner(cm, lineObj, lineNo, x, y);\r\n      var merged = collapsedSpanAtEnd(lineObj);\r\n      var mergedPos = merged && merged.find();\r\n      if (merged && (found.ch > mergedPos.from.ch || found.ch == mergedPos.from.ch && found.xRel > 0))\r\n        lineNo = mergedPos.to.line;\r\n      else\r\n        return found;\r\n    }\r\n  }\r\n\r\n  function coordsCharInner(cm, lineObj, lineNo, x, y) {\r\n    var innerOff = y - heightAtLine(cm, lineObj);\r\n    var wrongLine = false, adjust = 2 * cm.display.wrapper.clientWidth;\r\n    var measurement = measureLine(cm, lineObj);\r\n\r\n    function getX(ch) {\r\n      var sp = cursorCoords(cm, Pos(lineNo, ch), \"line\",\r\n                            lineObj, measurement);\r\n      wrongLine = true;\r\n      if (innerOff > sp.bottom) return sp.left - adjust;\r\n      else if (innerOff < sp.top) return sp.left + adjust;\r\n      else wrongLine = false;\r\n      return sp.left;\r\n    }\r\n\r\n    var bidi = getOrder(lineObj), dist = lineObj.text.length;\r\n    var from = lineLeft(lineObj), to = lineRight(lineObj);\r\n    var fromX = getX(from), fromOutside = wrongLine, toX = getX(to), toOutside = wrongLine;\r\n\r\n    if (x > toX) return PosWithInfo(lineNo, to, toOutside, 1);\r\n    // Do a binary search between these bounds.\r\n    for (;;) {\r\n      if (bidi ? to == from || to == moveVisually(lineObj, from, 1) : to - from <= 1) {\r\n        var ch = x < fromX || x - fromX <= toX - x ? from : to;\r\n        var xDiff = x - (ch == from ? fromX : toX);\r\n        while (isExtendingChar.test(lineObj.text.charAt(ch))) ++ch;\r\n        var pos = PosWithInfo(lineNo, ch, ch == from ? fromOutside : toOutside,\r\n                              xDiff < 0 ? -1 : xDiff ? 1 : 0);\r\n        return pos;\r\n      }\r\n      var step = Math.ceil(dist / 2), middle = from + step;\r\n      if (bidi) {\r\n        middle = from;\r\n        for (var i = 0; i < step; ++i) middle = moveVisually(lineObj, middle, 1);\r\n      }\r\n      var middleX = getX(middle);\r\n      if (middleX > x) {to = middle; toX = middleX; if (toOutside = wrongLine) toX += 1000; dist = step;}\r\n      else {from = middle; fromX = middleX; fromOutside = wrongLine; dist -= step;}\r\n    }\r\n  }\r\n\r\n  var measureText;\r\n  function textHeight(display) {\r\n    if (display.cachedTextHeight != null) return display.cachedTextHeight;\r\n    if (measureText == null) {\r\n      measureText = elt(\"pre\");\r\n      // Measure a bunch of lines, for browsers that compute\r\n      // fractional heights.\r\n      for (var i = 0; i < 49; ++i) {\r\n        measureText.appendChild(document.createTextNode(\"x\"));\r\n        measureText.appendChild(elt(\"br\"));\r\n      }\r\n      measureText.appendChild(document.createTextNode(\"x\"));\r\n    }\r\n    removeChildrenAndAdd(display.measure, measureText);\r\n    var height = measureText.offsetHeight / 50;\r\n    if (height > 3) display.cachedTextHeight = height;\r\n    removeChildren(display.measure);\r\n    return height || 1;\r\n  }\r\n\r\n  function charWidth(display) {\r\n    if (display.cachedCharWidth != null) return display.cachedCharWidth;\r\n    var anchor = elt(\"span\", \"x\");\r\n    var pre = elt(\"pre\", [anchor]);\r\n    removeChildrenAndAdd(display.measure, pre);\r\n    var width = anchor.offsetWidth;\r\n    if (width > 2) display.cachedCharWidth = width;\r\n    return width || 10;\r\n  }\r\n\r\n  // OPERATIONS\r\n\r\n  // Operations are used to wrap changes in such a way that each\r\n  // change won't have to update the cursor and display (which would\r\n  // be awkward, slow, and error-prone), but instead updates are\r\n  // batched and then all combined and executed at once.\r\n\r\n  var nextOpId = 0;\r\n  function startOperation(cm) {\r\n    cm.curOp = {\r\n      // An array of ranges of lines that have to be updated. See\r\n      // updateDisplay.\r\n      changes: [],\r\n      updateInput: null,\r\n      userSelChange: null,\r\n      textChanged: null,\r\n      selectionChanged: false,\r\n      cursorActivity: false,\r\n      updateMaxLine: false,\r\n      updateScrollPos: false,\r\n      id: ++nextOpId\r\n    };\r\n    if (!delayedCallbackDepth++) delayedCallbacks = [];\r\n  }\r\n\r\n  function endOperation(cm) {\r\n    var op = cm.curOp, doc = cm.doc, display = cm.display;\r\n    cm.curOp = null;\r\n\r\n    if (op.updateMaxLine) computeMaxLength(cm);\r\n    if (display.maxLineChanged && !cm.options.lineWrapping && display.maxLine) {\r\n      var width = measureLineWidth(cm, display.maxLine);\r\n      display.sizer.style.minWidth = Math.max(0, width + 3 + scrollerCutOff) + \"px\";\r\n      display.maxLineChanged = false;\r\n      var maxScrollLeft = Math.max(0, display.sizer.offsetLeft + display.sizer.offsetWidth - display.scroller.clientWidth);\r\n      if (maxScrollLeft < doc.scrollLeft && !op.updateScrollPos)\r\n        setScrollLeft(cm, Math.min(display.scroller.scrollLeft, maxScrollLeft), true);\r\n    }\r\n    var newScrollPos, updated;\r\n    if (op.updateScrollPos) {\r\n      newScrollPos = op.updateScrollPos;\r\n    } else if (op.selectionChanged && display.scroller.clientHeight) { // don't rescroll if not visible\r\n      var coords = cursorCoords(cm, doc.sel.head);\r\n      newScrollPos = calculateScrollPos(cm, coords.left, coords.top, coords.left, coords.bottom);\r\n    }\r\n    if (op.changes.length || newScrollPos && newScrollPos.scrollTop != null) {\r\n      updated = updateDisplay(cm, op.changes, newScrollPos && newScrollPos.scrollTop);\r\n      if (cm.display.scroller.offsetHeight) cm.doc.scrollTop = cm.display.scroller.scrollTop;\r\n    }\r\n    if (!updated && op.selectionChanged) updateSelection(cm);\r\n    if (op.updateScrollPos) {\r\n      display.scroller.scrollTop = display.scrollbarV.scrollTop = doc.scrollTop = newScrollPos.scrollTop;\r\n      display.scroller.scrollLeft = display.scrollbarH.scrollLeft = doc.scrollLeft = newScrollPos.scrollLeft;\r\n      alignHorizontally(cm);\r\n      if (op.scrollToPos)\r\n        scrollPosIntoView(cm, clipPos(cm.doc, op.scrollToPos), op.scrollToPosMargin);\r\n    } else if (newScrollPos) {\r\n      scrollCursorIntoView(cm);\r\n    }\r\n    if (op.selectionChanged) restartBlink(cm);\r\n\r\n    if (cm.state.focused && op.updateInput)\r\n      resetInput(cm, op.userSelChange);\r\n\r\n    var hidden = op.maybeHiddenMarkers, unhidden = op.maybeUnhiddenMarkers;\r\n    if (hidden) for (var i = 0; i < hidden.length; ++i)\r\n      if (!hidden[i].lines.length) signal(hidden[i], \"hide\");\r\n    if (unhidden) for (var i = 0; i < unhidden.length; ++i)\r\n      if (unhidden[i].lines.length) signal(unhidden[i], \"unhide\");\r\n\r\n    var delayed;\r\n    if (!--delayedCallbackDepth) {\r\n      delayed = delayedCallbacks;\r\n      delayedCallbacks = null;\r\n    }\r\n    if (op.textChanged)\r\n      signal(cm, \"change\", cm, op.textChanged);\r\n    if (op.cursorActivity) signal(cm, \"cursorActivity\", cm);\r\n    if (delayed) for (var i = 0; i < delayed.length; ++i) delayed[i]();\r\n  }\r\n\r\n  // Wraps a function in an operation. Returns the wrapped function.\r\n  function operation(cm1, f) {\r\n    return function() {\r\n      var cm = cm1 || this, withOp = !cm.curOp;\r\n      if (withOp) startOperation(cm);\r\n      try { var result = f.apply(cm, arguments); }\r\n      finally { if (withOp) endOperation(cm); }\r\n      return result;\r\n    };\r\n  }\r\n  function docOperation(f) {\r\n    return function() {\r\n      var withOp = this.cm && !this.cm.curOp, result;\r\n      if (withOp) startOperation(this.cm);\r\n      try { result = f.apply(this, arguments); }\r\n      finally { if (withOp) endOperation(this.cm); }\r\n      return result;\r\n    };\r\n  }\r\n  function runInOp(cm, f) {\r\n    var withOp = !cm.curOp, result;\r\n    if (withOp) startOperation(cm);\r\n    try { result = f(); }\r\n    finally { if (withOp) endOperation(cm); }\r\n    return result;\r\n  }\r\n\r\n  function regChange(cm, from, to, lendiff) {\r\n    if (from == null) from = cm.doc.first;\r\n    if (to == null) to = cm.doc.first + cm.doc.size;\r\n    cm.curOp.changes.push({from: from, to: to, diff: lendiff});\r\n  }\r\n\r\n  // INPUT HANDLING\r\n\r\n  function slowPoll(cm) {\r\n    if (cm.display.pollingFast) return;\r\n    cm.display.poll.set(cm.options.pollInterval, function() {\r\n      readInput(cm);\r\n      if (cm.state.focused) slowPoll(cm);\r\n    });\r\n  }\r\n\r\n  function fastPoll(cm) {\r\n    var missed = false;\r\n    cm.display.pollingFast = true;\r\n    function p() {\r\n      var changed = readInput(cm);\r\n      if (!changed && !missed) {missed = true; cm.display.poll.set(60, p);}\r\n      else {cm.display.pollingFast = false; slowPoll(cm);}\r\n    }\r\n    cm.display.poll.set(20, p);\r\n  }\r\n\r\n  // prevInput is a hack to work with IME. If we reset the textarea\r\n  // on every change, that breaks IME. So we look for changes\r\n  // compared to the previous content instead. (Modern browsers have\r\n  // events that indicate IME taking place, but these are not widely\r\n  // supported or compatible enough yet to rely on.)\r\n  function readInput(cm) {\r\n    var input = cm.display.input, prevInput = cm.display.prevInput, doc = cm.doc, sel = doc.sel;\r\n    if (!cm.state.focused || hasSelection(input) || isReadOnly(cm) || cm.state.disableInput) return false;\r\n    var text = input.value;\r\n    if (text == prevInput && posEq(sel.from, sel.to)) return false;\r\n    if (ie && !ie_lt9 && cm.display.inputHasSelection === text) {\r\n      resetInput(cm, true);\r\n      return false;\r\n    }\r\n\r\n    var withOp = !cm.curOp;\r\n    if (withOp) startOperation(cm);\r\n    sel.shift = false;\r\n    var same = 0, l = Math.min(prevInput.length, text.length);\r\n    while (same < l && prevInput.charCodeAt(same) == text.charCodeAt(same)) ++same;\r\n    var from = sel.from, to = sel.to;\r\n    if (same < prevInput.length)\r\n      from = Pos(from.line, from.ch - (prevInput.length - same));\r\n    else if (cm.state.overwrite && posEq(from, to) && !cm.state.pasteIncoming)\r\n      to = Pos(to.line, Math.min(getLine(doc, to.line).text.length, to.ch + (text.length - same)));\r\n\r\n    var updateInput = cm.curOp.updateInput;\r\n    var changeEvent = {from: from, to: to, text: splitLines(text.slice(same)),\r\n                       origin: cm.state.pasteIncoming ? \"paste\" : \"+input\"};\r\n    makeChange(cm.doc, changeEvent, \"end\");\r\n    cm.curOp.updateInput = updateInput;\r\n    signalLater(cm, \"inputRead\", cm, changeEvent);\r\n\r\n    if (text.length > 1000 || text.indexOf(\"\\n\") > -1) input.value = cm.display.prevInput = \"\";\r\n    else cm.display.prevInput = text;\r\n    if (withOp) endOperation(cm);\r\n    cm.state.pasteIncoming = false;\r\n    return true;\r\n  }\r\n\r\n  function resetInput(cm, user) {\r\n    var minimal, selected, doc = cm.doc;\r\n    if (!posEq(doc.sel.from, doc.sel.to)) {\r\n      cm.display.prevInput = \"\";\r\n      minimal = hasCopyEvent &&\r\n        (doc.sel.to.line - doc.sel.from.line > 100 || (selected = cm.getSelection()).length > 1000);\r\n      var content = minimal ? \"-\" : selected || cm.getSelection();\r\n      cm.display.input.value = content;\r\n      if (cm.state.focused) selectInput(cm.display.input);\r\n      if (ie && !ie_lt9) cm.display.inputHasSelection = content;\r\n    } else if (user) {\r\n      cm.display.prevInput = cm.display.input.value = \"\";\r\n      if (ie && !ie_lt9) cm.display.inputHasSelection = null;\r\n    }\r\n    cm.display.inaccurateSelection = minimal;\r\n  }\r\n\r\n  function focusInput(cm) {\r\n    if (cm.options.readOnly != \"nocursor\" && (!mobile || document.activeElement != cm.display.input))\r\n      cm.display.input.focus();\r\n  }\r\n\r\n  function isReadOnly(cm) {\r\n    return cm.options.readOnly || cm.doc.cantEdit;\r\n  }\r\n\r\n  // EVENT HANDLERS\r\n\r\n  function registerEventHandlers(cm) {\r\n    var d = cm.display;\r\n    on(d.scroller, \"mousedown\", operation(cm, onMouseDown));\r\n    if (ie)\r\n      on(d.scroller, \"dblclick\", operation(cm, function(e) {\r\n        if (signalDOMEvent(cm, e)) return;\r\n        var pos = posFromMouse(cm, e);\r\n        if (!pos || clickInGutter(cm, e) || eventInWidget(cm.display, e)) return;\r\n        e_preventDefault(e);\r\n        var word = findWordAt(getLine(cm.doc, pos.line).text, pos);\r\n        extendSelection(cm.doc, word.from, word.to);\r\n      }));\r\n    else\r\n      on(d.scroller, \"dblclick\", function(e) { signalDOMEvent(cm, e) || e_preventDefault(e); });\r\n    on(d.lineSpace, \"selectstart\", function(e) {\r\n      if (!eventInWidget(d, e)) e_preventDefault(e);\r\n    });\r\n    // Gecko browsers fire contextmenu *after* opening the menu, at\r\n    // which point we can't mess with it anymore. Context menu is\r\n    // handled in onMouseDown for Gecko.\r\n    if (!captureMiddleClick) on(d.scroller, \"contextmenu\", function(e) {onContextMenu(cm, e);});\r\n\r\n    on(d.scroller, \"scroll\", function() {\r\n      if (d.scroller.clientHeight) {\r\n        setScrollTop(cm, d.scroller.scrollTop);\r\n        setScrollLeft(cm, d.scroller.scrollLeft, true);\r\n        signal(cm, \"scroll\", cm);\r\n      }\r\n    });\r\n    on(d.scrollbarV, \"scroll\", function() {\r\n      if (d.scroller.clientHeight) setScrollTop(cm, d.scrollbarV.scrollTop);\r\n    });\r\n    on(d.scrollbarH, \"scroll\", function() {\r\n      if (d.scroller.clientHeight) setScrollLeft(cm, d.scrollbarH.scrollLeft);\r\n    });\r\n\r\n    on(d.scroller, \"mousewheel\", function(e){onScrollWheel(cm, e);});\r\n    on(d.scroller, \"DOMMouseScroll\", function(e){onScrollWheel(cm, e);});\r\n\r\n    function reFocus() { if (cm.state.focused) setTimeout(bind(focusInput, cm), 0); }\r\n    on(d.scrollbarH, \"mousedown\", reFocus);\r\n    on(d.scrollbarV, \"mousedown\", reFocus);\r\n    // Prevent wrapper from ever scrolling\r\n    on(d.wrapper, \"scroll\", function() { d.wrapper.scrollTop = d.wrapper.scrollLeft = 0; });\r\n\r\n    var resizeTimer;\r\n    function onResize() {\r\n      if (resizeTimer == null) resizeTimer = setTimeout(function() {\r\n        resizeTimer = null;\r\n        // Might be a text scaling operation, clear size caches.\r\n        d.cachedCharWidth = d.cachedTextHeight = knownScrollbarWidth = null;\r\n        clearCaches(cm);\r\n        runInOp(cm, bind(regChange, cm));\r\n      }, 100);\r\n    }\r\n    on(window, \"resize\", onResize);\r\n    // Above handler holds on to the editor and its data structures.\r\n    // Here we poll to unregister it when the editor is no longer in\r\n    // the document, so that it can be garbage-collected.\r\n    function unregister() {\r\n      for (var p = d.wrapper.parentNode; p && p != document.body; p = p.parentNode) {}\r\n      if (p) setTimeout(unregister, 5000);\r\n      else off(window, \"resize\", onResize);\r\n    }\r\n    setTimeout(unregister, 5000);\r\n\r\n    on(d.input, \"keyup\", operation(cm, function(e) {\r\n      if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && cm.options.onKeyEvent(cm, addStop(e))) return;\r\n      if (e.keyCode == 16) cm.doc.sel.shift = false;\r\n    }));\r\n    on(d.input, \"input\", bind(fastPoll, cm));\r\n    on(d.input, \"keydown\", operation(cm, onKeyDown));\r\n    on(d.input, \"keypress\", operation(cm, onKeyPress));\r\n    on(d.input, \"focus\", bind(onFocus, cm));\r\n    on(d.input, \"blur\", bind(onBlur, cm));\r\n\r\n    function drag_(e) {\r\n      if (signalDOMEvent(cm, e) || cm.options.onDragEvent && cm.options.onDragEvent(cm, addStop(e))) return;\r\n      e_stop(e);\r\n    }\r\n    if (cm.options.dragDrop) {\r\n      on(d.scroller, \"dragstart\", function(e){onDragStart(cm, e);});\r\n      on(d.scroller, \"dragenter\", drag_);\r\n      on(d.scroller, \"dragover\", drag_);\r\n      on(d.scroller, \"drop\", operation(cm, onDrop));\r\n    }\r\n    on(d.scroller, \"paste\", function(e){\r\n      if (eventInWidget(d, e)) return;\r\n      focusInput(cm);\r\n      fastPoll(cm);\r\n    });\r\n    on(d.input, \"paste\", function() {\r\n      cm.state.pasteIncoming = true;\r\n      fastPoll(cm);\r\n    });\r\n\r\n    function prepareCopy() {\r\n      if (d.inaccurateSelection) {\r\n        d.prevInput = \"\";\r\n        d.inaccurateSelection = false;\r\n        d.input.value = cm.getSelection();\r\n        selectInput(d.input);\r\n      }\r\n    }\r\n    on(d.input, \"cut\", prepareCopy);\r\n    on(d.input, \"copy\", prepareCopy);\r\n\r\n    // Needed to handle Tab key in KHTML\r\n    if (khtml) on(d.sizer, \"mouseup\", function() {\r\n        if (document.activeElement == d.input) d.input.blur();\r\n        focusInput(cm);\r\n    });\r\n  }\r\n\r\n  function eventInWidget(display, e) {\r\n    for (var n = e_target(e); n != display.wrapper; n = n.parentNode) {\r\n      if (!n || n.ignoreEvents || n.parentNode == display.sizer && n != display.mover) return true;\r\n    }\r\n  }\r\n\r\n  function posFromMouse(cm, e, liberal) {\r\n    var display = cm.display;\r\n    if (!liberal) {\r\n      var target = e_target(e);\r\n      if (target == display.scrollbarH || target == display.scrollbarH.firstChild ||\r\n          target == display.scrollbarV || target == display.scrollbarV.firstChild ||\r\n          target == display.scrollbarFiller || target == display.gutterFiller) return null;\r\n    }\r\n    var x, y, space = getRect(display.lineSpace);\r\n    // Fails unpredictably on IE[67] when mouse is dragged around quickly.\r\n    try { x = e.clientX; y = e.clientY; } catch (e) { return null; }\r\n    return coordsChar(cm, x - space.left, y - space.top);\r\n  }\r\n\r\n  var lastClick, lastDoubleClick;\r\n  function onMouseDown(e) {\r\n    if (signalDOMEvent(this, e)) return;\r\n    var cm = this, display = cm.display, doc = cm.doc, sel = doc.sel;\r\n    sel.shift = e.shiftKey;\r\n\r\n    if (eventInWidget(display, e)) {\r\n      if (!webkit) {\r\n        display.scroller.draggable = false;\r\n        setTimeout(function(){display.scroller.draggable = true;}, 100);\r\n      }\r\n      return;\r\n    }\r\n    if (clickInGutter(cm, e)) return;\r\n    var start = posFromMouse(cm, e);\r\n\r\n    switch (e_button(e)) {\r\n    case 3:\r\n      if (captureMiddleClick) onContextMenu.call(cm, cm, e);\r\n      return;\r\n    case 2:\r\n      if (start) extendSelection(cm.doc, start);\r\n      setTimeout(bind(focusInput, cm), 20);\r\n      e_preventDefault(e);\r\n      return;\r\n    }\r\n    // For button 1, if it was clicked inside the editor\r\n    // (posFromMouse returning non-null), we have to adjust the\r\n    // selection.\r\n    if (!start) {if (e_target(e) == display.scroller) e_preventDefault(e); return;}\r\n\r\n    if (!cm.state.focused) onFocus(cm);\r\n\r\n    var now = +new Date, type = \"single\";\r\n    if (lastDoubleClick && lastDoubleClick.time > now - 400 && posEq(lastDoubleClick.pos, start)) {\r\n      type = \"triple\";\r\n      e_preventDefault(e);\r\n      setTimeout(bind(focusInput, cm), 20);\r\n      selectLine(cm, start.line);\r\n    } else if (lastClick && lastClick.time > now - 400 && posEq(lastClick.pos, start)) {\r\n      type = \"double\";\r\n      lastDoubleClick = {time: now, pos: start};\r\n      e_preventDefault(e);\r\n      var word = findWordAt(getLine(doc, start.line).text, start);\r\n      extendSelection(cm.doc, word.from, word.to);\r\n    } else { lastClick = {time: now, pos: start}; }\r\n\r\n    var last = start;\r\n    if (cm.options.dragDrop && dragAndDrop && !isReadOnly(cm) && !posEq(sel.from, sel.to) &&\r\n        !posLess(start, sel.from) && !posLess(sel.to, start) && type == \"single\") {\r\n      var dragEnd = operation(cm, function(e2) {\r\n        if (webkit) display.scroller.draggable = false;\r\n        cm.state.draggingText = false;\r\n        off(document, \"mouseup\", dragEnd);\r\n        off(display.scroller, \"drop\", dragEnd);\r\n        if (Math.abs(e.clientX - e2.clientX) + Math.abs(e.clientY - e2.clientY) < 10) {\r\n          e_preventDefault(e2);\r\n          extendSelection(cm.doc, start);\r\n          focusInput(cm);\r\n        }\r\n      });\r\n      // Let the drag handler handle this.\r\n      if (webkit) display.scroller.draggable = true;\r\n      cm.state.draggingText = dragEnd;\r\n      // IE's approach to draggable\r\n      if (display.scroller.dragDrop) display.scroller.dragDrop();\r\n      on(document, \"mouseup\", dragEnd);\r\n      on(display.scroller, \"drop\", dragEnd);\r\n      return;\r\n    }\r\n    e_preventDefault(e);\r\n    if (type == \"single\") extendSelection(cm.doc, clipPos(doc, start));\r\n\r\n    var startstart = sel.from, startend = sel.to, lastPos = start;\r\n\r\n    function doSelect(cur) {\r\n      if (posEq(lastPos, cur)) return;\r\n      lastPos = cur;\r\n\r\n      if (type == \"single\") {\r\n        extendSelection(cm.doc, clipPos(doc, start), cur);\r\n        return;\r\n      }\r\n\r\n      startstart = clipPos(doc, startstart);\r\n      startend = clipPos(doc, startend);\r\n      if (type == \"double\") {\r\n        var word = findWordAt(getLine(doc, cur.line).text, cur);\r\n        if (posLess(cur, startstart)) extendSelection(cm.doc, word.from, startend);\r\n        else extendSelection(cm.doc, startstart, word.to);\r\n      } else if (type == \"triple\") {\r\n        if (posLess(cur, startstart)) extendSelection(cm.doc, startend, clipPos(doc, Pos(cur.line, 0)));\r\n        else extendSelection(cm.doc, startstart, clipPos(doc, Pos(cur.line + 1, 0)));\r\n      }\r\n    }\r\n\r\n    var editorSize = getRect(display.wrapper);\r\n    // Used to ensure timeout re-tries don't fire when another extend\r\n    // happened in the meantime (clearTimeout isn't reliable -- at\r\n    // least on Chrome, the timeouts still happen even when cleared,\r\n    // if the clear happens after their scheduled firing time).\r\n    var counter = 0;\r\n\r\n    function extend(e) {\r\n      var curCount = ++counter;\r\n      var cur = posFromMouse(cm, e, true);\r\n      if (!cur) return;\r\n      if (!posEq(cur, last)) {\r\n        if (!cm.state.focused) onFocus(cm);\r\n        last = cur;\r\n        doSelect(cur);\r\n        var visible = visibleLines(display, doc);\r\n        if (cur.line >= visible.to || cur.line < visible.from)\r\n          setTimeout(operation(cm, function(){if (counter == curCount) extend(e);}), 150);\r\n      } else {\r\n        var outside = e.clientY < editorSize.top ? -20 : e.clientY > editorSize.bottom ? 20 : 0;\r\n        if (outside) setTimeout(operation(cm, function() {\r\n          if (counter != curCount) return;\r\n          display.scroller.scrollTop += outside;\r\n          extend(e);\r\n        }), 50);\r\n      }\r\n    }\r\n\r\n    function done(e) {\r\n      counter = Infinity;\r\n      e_preventDefault(e);\r\n      focusInput(cm);\r\n      off(document, \"mousemove\", move);\r\n      off(document, \"mouseup\", up);\r\n    }\r\n\r\n    var move = operation(cm, function(e) {\r\n      if (!ie && !e_button(e)) done(e);\r\n      else extend(e);\r\n    });\r\n    var up = operation(cm, done);\r\n    on(document, \"mousemove\", move);\r\n    on(document, \"mouseup\", up);\r\n  }\r\n\r\n  function clickInGutter(cm, e) {\r\n    var display = cm.display;\r\n    try { var mX = e.clientX, mY = e.clientY; }\r\n    catch(e) { return false; }\r\n\r\n    if (mX >= Math.floor(getRect(display.gutters).right)) return false;\r\n    e_preventDefault(e);\r\n    if (!hasHandler(cm, \"gutterClick\")) return true;\r\n\r\n    var lineBox = getRect(display.lineDiv);\r\n    if (mY > lineBox.bottom) return true;\r\n    mY -= lineBox.top - display.viewOffset;\r\n\r\n    for (var i = 0; i < cm.options.gutters.length; ++i) {\r\n      var g = display.gutters.childNodes[i];\r\n      if (g && getRect(g).right >= mX) {\r\n        var line = lineAtHeight(cm.doc, mY);\r\n        var gutter = cm.options.gutters[i];\r\n        signalLater(cm, \"gutterClick\", cm, line, gutter, e);\r\n        break;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // Kludge to work around strange IE behavior where it'll sometimes\r\n  // re-fire a series of drag-related events right after the drop (#1551)\r\n  var lastDrop = 0;\r\n\r\n  function onDrop(e) {\r\n    var cm = this;\r\n    if (signalDOMEvent(cm, e) || eventInWidget(cm.display, e) || (cm.options.onDragEvent && cm.options.onDragEvent(cm, addStop(e))))\r\n      return;\r\n    e_preventDefault(e);\r\n    if (ie) lastDrop = +new Date;\r\n    var pos = posFromMouse(cm, e, true), files = e.dataTransfer.files;\r\n    if (!pos || isReadOnly(cm)) return;\r\n    if (files && files.length && window.FileReader && window.File) {\r\n      var n = files.length, text = Array(n), read = 0;\r\n      var loadFile = function(file, i) {\r\n        var reader = new FileReader;\r\n        reader.onload = function() {\r\n          text[i] = reader.result;\r\n          if (++read == n) {\r\n            pos = clipPos(cm.doc, pos);\r\n            makeChange(cm.doc, {from: pos, to: pos, text: splitLines(text.join(\"\\n\")), origin: \"paste\"}, \"around\");\r\n          }\r\n        };\r\n        reader.readAsText(file);\r\n      };\r\n      for (var i = 0; i < n; ++i) loadFile(files[i], i);\r\n    } else {\r\n      // Don't do a replace if the drop happened inside of the selected text.\r\n      if (cm.state.draggingText && !(posLess(pos, cm.doc.sel.from) || posLess(cm.doc.sel.to, pos))) {\r\n        cm.state.draggingText(e);\r\n        // Ensure the editor is re-focused\r\n        setTimeout(bind(focusInput, cm), 20);\r\n        return;\r\n      }\r\n      try {\r\n        var text = e.dataTransfer.getData(\"Text\");\r\n        if (text) {\r\n          var curFrom = cm.doc.sel.from, curTo = cm.doc.sel.to;\r\n          setSelection(cm.doc, pos, pos);\r\n          if (cm.state.draggingText) replaceRange(cm.doc, \"\", curFrom, curTo, \"paste\");\r\n          cm.replaceSelection(text, null, \"paste\");\r\n          focusInput(cm);\r\n          onFocus(cm);\r\n        }\r\n      }\r\n      catch(e){}\r\n    }\r\n  }\r\n\r\n  function onDragStart(cm, e) {\r\n    if (ie && (!cm.state.draggingText || +new Date - lastDrop < 100)) { e_stop(e); return; }\r\n    if (signalDOMEvent(cm, e) || eventInWidget(cm.display, e)) return;\r\n\r\n    var txt = cm.getSelection();\r\n    e.dataTransfer.setData(\"Text\", txt);\r\n\r\n    // Use dummy image instead of default browsers image.\r\n    // Recent Safari (~6.0.2) have a tendency to segfault when this happens, so we don't do it there.\r\n    if (e.dataTransfer.setDragImage && !safari) {\r\n      var img = elt(\"img\", null, null, \"position: fixed; left: 0; top: 0;\");\r\n      if (opera) {\r\n        img.width = img.height = 1;\r\n        cm.display.wrapper.appendChild(img);\r\n        // Force a relayout, or Opera won't use our image for some obscure reason\r\n        img._top = img.offsetTop;\r\n      }\r\n      e.dataTransfer.setDragImage(img, 0, 0);\r\n      if (opera) img.parentNode.removeChild(img);\r\n    }\r\n  }\r\n\r\n  function setScrollTop(cm, val) {\r\n    if (Math.abs(cm.doc.scrollTop - val) < 2) return;\r\n    cm.doc.scrollTop = val;\r\n    if (!gecko) updateDisplay(cm, [], val);\r\n    if (cm.display.scroller.scrollTop != val) cm.display.scroller.scrollTop = val;\r\n    if (cm.display.scrollbarV.scrollTop != val) cm.display.scrollbarV.scrollTop = val;\r\n    if (gecko) updateDisplay(cm, []);\r\n    startWorker(cm, 100);\r\n  }\r\n  function setScrollLeft(cm, val, isScroller) {\r\n    if (isScroller ? val == cm.doc.scrollLeft : Math.abs(cm.doc.scrollLeft - val) < 2) return;\r\n    val = Math.min(val, cm.display.scroller.scrollWidth - cm.display.scroller.clientWidth);\r\n    cm.doc.scrollLeft = val;\r\n    alignHorizontally(cm);\r\n    if (cm.display.scroller.scrollLeft != val) cm.display.scroller.scrollLeft = val;\r\n    if (cm.display.scrollbarH.scrollLeft != val) cm.display.scrollbarH.scrollLeft = val;\r\n  }\r\n\r\n  // Since the delta values reported on mouse wheel events are\r\n  // unstandardized between browsers and even browser versions, and\r\n  // generally horribly unpredictable, this code starts by measuring\r\n  // the scroll effect that the first few mouse wheel events have,\r\n  // and, from that, detects the way it can convert deltas to pixel\r\n  // offsets afterwards.\r\n  //\r\n  // The reason we want to know the amount a wheel event will scroll\r\n  // is that it gives us a chance to update the display before the\r\n  // actual scrolling happens, reducing flickering.\r\n\r\n  var wheelSamples = 0, wheelPixelsPerUnit = null;\r\n  // Fill in a browser-detected starting value on browsers where we\r\n  // know one. These don't have to be accurate -- the result of them\r\n  // being wrong would just be a slight flicker on the first wheel\r\n  // scroll (if it is large enough).\r\n  if (ie) wheelPixelsPerUnit = -.53;\r\n  else if (gecko) wheelPixelsPerUnit = 15;\r\n  else if (chrome) wheelPixelsPerUnit = -.7;\r\n  else if (safari) wheelPixelsPerUnit = -1/3;\r\n\r\n  function onScrollWheel(cm, e) {\r\n    var dx = e.wheelDeltaX, dy = e.wheelDeltaY;\r\n    if (dx == null && e.detail && e.axis == e.HORIZONTAL_AXIS) dx = e.detail;\r\n    if (dy == null && e.detail && e.axis == e.VERTICAL_AXIS) dy = e.detail;\r\n    else if (dy == null) dy = e.wheelDelta;\r\n\r\n    var display = cm.display, scroll = display.scroller;\r\n    // Quit if there's nothing to scroll here\r\n    if (!(dx && scroll.scrollWidth > scroll.clientWidth ||\r\n          dy && scroll.scrollHeight > scroll.clientHeight)) return;\r\n\r\n    // Webkit browsers on OS X abort momentum scrolls when the target\r\n    // of the scroll event is removed from the scrollable element.\r\n    // This hack (see related code in patchDisplay) makes sure the\r\n    // element is kept around.\r\n    if (dy && mac && webkit) {\r\n      for (var cur = e.target; cur != scroll; cur = cur.parentNode) {\r\n        if (cur.lineObj) {\r\n          cm.display.currentWheelTarget = cur;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // On some browsers, horizontal scrolling will cause redraws to\r\n    // happen before the gutter has been realigned, causing it to\r\n    // wriggle around in a most unseemly way. When we have an\r\n    // estimated pixels/delta value, we just handle horizontal\r\n    // scrolling entirely here. It'll be slightly off from native, but\r\n    // better than glitching out.\r\n    if (dx && !gecko && !opera && wheelPixelsPerUnit != null) {\r\n      if (dy)\r\n        setScrollTop(cm, Math.max(0, Math.min(scroll.scrollTop + dy * wheelPixelsPerUnit, scroll.scrollHeight - scroll.clientHeight)));\r\n      setScrollLeft(cm, Math.max(0, Math.min(scroll.scrollLeft + dx * wheelPixelsPerUnit, scroll.scrollWidth - scroll.clientWidth)));\r\n      e_preventDefault(e);\r\n      display.wheelStartX = null; // Abort measurement, if in progress\r\n      return;\r\n    }\r\n\r\n    if (dy && wheelPixelsPerUnit != null) {\r\n      var pixels = dy * wheelPixelsPerUnit;\r\n      var top = cm.doc.scrollTop, bot = top + display.wrapper.clientHeight;\r\n      if (pixels < 0) top = Math.max(0, top + pixels - 50);\r\n      else bot = Math.min(cm.doc.height, bot + pixels + 50);\r\n      updateDisplay(cm, [], {top: top, bottom: bot});\r\n    }\r\n\r\n    if (wheelSamples < 20) {\r\n      if (display.wheelStartX == null) {\r\n        display.wheelStartX = scroll.scrollLeft; display.wheelStartY = scroll.scrollTop;\r\n        display.wheelDX = dx; display.wheelDY = dy;\r\n        setTimeout(function() {\r\n          if (display.wheelStartX == null) return;\r\n          var movedX = scroll.scrollLeft - display.wheelStartX;\r\n          var movedY = scroll.scrollTop - display.wheelStartY;\r\n          var sample = (movedY && display.wheelDY && movedY / display.wheelDY) ||\r\n            (movedX && display.wheelDX && movedX / display.wheelDX);\r\n          display.wheelStartX = display.wheelStartY = null;\r\n          if (!sample) return;\r\n          wheelPixelsPerUnit = (wheelPixelsPerUnit * wheelSamples + sample) / (wheelSamples + 1);\r\n          ++wheelSamples;\r\n        }, 200);\r\n      } else {\r\n        display.wheelDX += dx; display.wheelDY += dy;\r\n      }\r\n    }\r\n  }\r\n\r\n  function doHandleBinding(cm, bound, dropShift) {\r\n    if (typeof bound == \"string\") {\r\n      bound = commands[bound];\r\n      if (!bound) return false;\r\n    }\r\n    // Ensure previous input has been read, so that the handler sees a\r\n    // consistent view of the document\r\n    if (cm.display.pollingFast && readInput(cm)) cm.display.pollingFast = false;\r\n    var doc = cm.doc, prevShift = doc.sel.shift, done = false;\r\n    try {\r\n      if (isReadOnly(cm)) cm.state.suppressEdits = true;\r\n      if (dropShift) doc.sel.shift = false;\r\n      done = bound(cm) != Pass;\r\n    } finally {\r\n      doc.sel.shift = prevShift;\r\n      cm.state.suppressEdits = false;\r\n    }\r\n    return done;\r\n  }\r\n\r\n  function allKeyMaps(cm) {\r\n    var maps = cm.state.keyMaps.slice(0);\r\n    if (cm.options.extraKeys) maps.push(cm.options.extraKeys);\r\n    maps.push(cm.options.keyMap);\r\n    return maps;\r\n  }\r\n\r\n  var maybeTransition;\r\n  function handleKeyBinding(cm, e) {\r\n    // Handle auto keymap transitions\r\n    var startMap = getKeyMap(cm.options.keyMap), next = startMap.auto;\r\n    clearTimeout(maybeTransition);\r\n    if (next && !isModifierKey(e)) maybeTransition = setTimeout(function() {\r\n      if (getKeyMap(cm.options.keyMap) == startMap) {\r\n        cm.options.keyMap = (next.call ? next.call(null, cm) : next);\r\n        keyMapChanged(cm);\r\n      }\r\n    }, 50);\r\n\r\n    var name = keyName(e, true), handled = false;\r\n    if (!name) return false;\r\n    var keymaps = allKeyMaps(cm);\r\n\r\n    if (e.shiftKey) {\r\n      // First try to resolve full name (including 'Shift-'). Failing\r\n      // that, see if there is a cursor-motion command (starting with\r\n      // 'go') bound to the keyname without 'Shift-'.\r\n      handled = lookupKey(\"Shift-\" + name, keymaps, function(b) {return doHandleBinding(cm, b, true);})\r\n             || lookupKey(name, keymaps, function(b) {\r\n                  if (typeof b == \"string\" ? /^go[A-Z]/.test(b) : b.motion)\r\n                    return doHandleBinding(cm, b);\r\n                });\r\n    } else {\r\n      handled = lookupKey(name, keymaps, function(b) { return doHandleBinding(cm, b); });\r\n    }\r\n\r\n    if (handled) {\r\n      e_preventDefault(e);\r\n      restartBlink(cm);\r\n      if (ie_lt9) { e.oldKeyCode = e.keyCode; e.keyCode = 0; }\r\n      signalLater(cm, \"keyHandled\", cm, name, e);\r\n    }\r\n    return handled;\r\n  }\r\n\r\n  function handleCharBinding(cm, e, ch) {\r\n    var handled = lookupKey(\"'\" + ch + \"'\", allKeyMaps(cm),\r\n                            function(b) { return doHandleBinding(cm, b, true); });\r\n    if (handled) {\r\n      e_preventDefault(e);\r\n      restartBlink(cm);\r\n      signalLater(cm, \"keyHandled\", cm, \"'\" + ch + \"'\", e);\r\n    }\r\n    return handled;\r\n  }\r\n\r\n  var lastStoppedKey = null;\r\n  function onKeyDown(e) {\r\n    var cm = this;\r\n    if (!cm.state.focused) onFocus(cm);\r\n    if (ie && e.keyCode == 27) { e.returnValue = false; }\r\n    if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && cm.options.onKeyEvent(cm, addStop(e))) return;\r\n    var code = e.keyCode;\r\n    // IE does strange things with escape.\r\n    cm.doc.sel.shift = code == 16 || e.shiftKey;\r\n    // First give onKeyEvent option a chance to handle this.\r\n    var handled = handleKeyBinding(cm, e);\r\n    if (opera) {\r\n      lastStoppedKey = handled ? code : null;\r\n      // Opera has no cut event... we try to at least catch the key combo\r\n      if (!handled && code == 88 && !hasCopyEvent && (mac ? e.metaKey : e.ctrlKey))\r\n        cm.replaceSelection(\"\");\r\n    }\r\n  }\r\n\r\n  function onKeyPress(e) {\r\n    var cm = this;\r\n    if (signalDOMEvent(cm, e) || cm.options.onKeyEvent && cm.options.onKeyEvent(cm, addStop(e))) return;\r\n    var keyCode = e.keyCode, charCode = e.charCode;\r\n    if (opera && keyCode == lastStoppedKey) {lastStoppedKey = null; e_preventDefault(e); return;}\r\n    if (((opera && (!e.which || e.which < 10)) || khtml) && handleKeyBinding(cm, e)) return;\r\n    var ch = String.fromCharCode(charCode == null ? keyCode : charCode);\r\n    if (this.options.electricChars && this.doc.mode.electricChars &&\r\n        this.options.smartIndent && !isReadOnly(this) &&\r\n        this.doc.mode.electricChars.indexOf(ch) > -1)\r\n      setTimeout(operation(cm, function() {indentLine(cm, cm.doc.sel.to.line, \"smart\");}), 75);\r\n    if (handleCharBinding(cm, e, ch)) return;\r\n    if (ie && !ie_lt9) cm.display.inputHasSelection = null;\r\n    fastPoll(cm);\r\n  }\r\n\r\n  function onFocus(cm) {\r\n    if (cm.options.readOnly == \"nocursor\") return;\r\n    if (!cm.state.focused) {\r\n      signal(cm, \"focus\", cm);\r\n      cm.state.focused = true;\r\n      if (cm.display.wrapper.className.search(/\\bCodeMirror-focused\\b/) == -1)\r\n        cm.display.wrapper.className += \" CodeMirror-focused\";\r\n      resetInput(cm, true);\r\n    }\r\n    slowPoll(cm);\r\n    restartBlink(cm);\r\n  }\r\n  function onBlur(cm) {\r\n    if (cm.state.focused) {\r\n      signal(cm, \"blur\", cm);\r\n      cm.state.focused = false;\r\n      cm.display.wrapper.className = cm.display.wrapper.className.replace(\" CodeMirror-focused\", \"\");\r\n    }\r\n    clearInterval(cm.display.blinker);\r\n    setTimeout(function() {if (!cm.state.focused) cm.doc.sel.shift = false;}, 150);\r\n  }\r\n\r\n  var detectingSelectAll;\r\n  function onContextMenu(cm, e) {\r\n    var display = cm.display, sel = cm.doc.sel;\r\n    if (eventInWidget(display, e)) return;\r\n\r\n    var pos = posFromMouse(cm, e), scrollPos = display.scroller.scrollTop;\r\n    if (!pos || opera) return; // Opera is difficult.\r\n    if (posEq(sel.from, sel.to) || posLess(pos, sel.from) || !posLess(pos, sel.to))\r\n      operation(cm, setSelection)(cm.doc, pos, pos);\r\n\r\n    var oldCSS = display.input.style.cssText;\r\n    display.inputDiv.style.position = \"absolute\";\r\n    display.input.style.cssText = \"position: fixed; width: 30px; height: 30px; top: \" + (e.clientY - 5) +\r\n      \"px; left: \" + (e.clientX - 5) + \"px; z-index: 1000; background: white; outline: none;\" +\r\n      \"border-width: 0; outline: none; overflow: hidden; opacity: .05; -ms-opacity: .05; filter: alpha(opacity=5);\";\r\n    focusInput(cm);\r\n    resetInput(cm, true);\r\n    // Adds \"Select all\" to context menu in FF\r\n    if (posEq(sel.from, sel.to)) display.input.value = display.prevInput = \" \";\r\n\r\n    function prepareSelectAllHack() {\r\n      if (display.input.selectionStart != null) {\r\n        var extval = display.input.value = \" \" + (posEq(sel.from, sel.to) ? \"\" : display.input.value);\r\n        display.prevInput = \" \";\r\n        display.input.selectionStart = 1; display.input.selectionEnd = extval.length;\r\n      }\r\n    }\r\n    function rehide() {\r\n      display.inputDiv.style.position = \"relative\";\r\n      display.input.style.cssText = oldCSS;\r\n      if (ie_lt9) display.scrollbarV.scrollTop = display.scroller.scrollTop = scrollPos;\r\n      slowPoll(cm);\r\n\r\n      // Try to detect the user choosing select-all\r\n      if (display.input.selectionStart != null) {\r\n        if (!ie || ie_lt9) prepareSelectAllHack();\r\n        clearTimeout(detectingSelectAll);\r\n        var i = 0, poll = function(){\r\n          if (display.prevInput == \" \" && display.input.selectionStart == 0)\r\n            operation(cm, commands.selectAll)(cm);\r\n          else if (i++ < 10) detectingSelectAll = setTimeout(poll, 500);\r\n          else resetInput(cm);\r\n        };\r\n        detectingSelectAll = setTimeout(poll, 200);\r\n      }\r\n    }\r\n\r\n    if (ie && !ie_lt9) prepareSelectAllHack();\r\n    if (captureMiddleClick) {\r\n      e_stop(e);\r\n      var mouseup = function() {\r\n        off(window, \"mouseup\", mouseup);\r\n        setTimeout(rehide, 20);\r\n      };\r\n      on(window, \"mouseup\", mouseup);\r\n    } else {\r\n      setTimeout(rehide, 50);\r\n    }\r\n  }\r\n\r\n  // UPDATING\r\n\r\n  var changeEnd = CodeMirror.changeEnd = function(change) {\r\n    if (!change.text) return change.to;\r\n    return Pos(change.from.line + change.text.length - 1,\r\n               lst(change.text).length + (change.text.length == 1 ? change.from.ch : 0));\r\n  };\r\n\r\n  // Make sure a position will be valid after the given change.\r\n  function clipPostChange(doc, change, pos) {\r\n    if (!posLess(change.from, pos)) return clipPos(doc, pos);\r\n    var diff = (change.text.length - 1) - (change.to.line - change.from.line);\r\n    if (pos.line > change.to.line + diff) {\r\n      var preLine = pos.line - diff, lastLine = doc.first + doc.size - 1;\r\n      if (preLine > lastLine) return Pos(lastLine, getLine(doc, lastLine).text.length);\r\n      return clipToLen(pos, getLine(doc, preLine).text.length);\r\n    }\r\n    if (pos.line == change.to.line + diff)\r\n      return clipToLen(pos, lst(change.text).length + (change.text.length == 1 ? change.from.ch : 0) +\r\n                       getLine(doc, change.to.line).text.length - change.to.ch);\r\n    var inside = pos.line - change.from.line;\r\n    return clipToLen(pos, change.text[inside].length + (inside ? 0 : change.from.ch));\r\n  }\r\n\r\n  // Hint can be null|\"end\"|\"start\"|\"around\"|{anchor,head}\r\n  function computeSelAfterChange(doc, change, hint) {\r\n    if (hint && typeof hint == \"object\") // Assumed to be {anchor, head} object\r\n      return {anchor: clipPostChange(doc, change, hint.anchor),\r\n              head: clipPostChange(doc, change, hint.head)};\r\n\r\n    if (hint == \"start\") return {anchor: change.from, head: change.from};\r\n\r\n    var end = changeEnd(change);\r\n    if (hint == \"around\") return {anchor: change.from, head: end};\r\n    if (hint == \"end\") return {anchor: end, head: end};\r\n\r\n    // hint is null, leave the selection alone as much as possible\r\n    var adjustPos = function(pos) {\r\n      if (posLess(pos, change.from)) return pos;\r\n      if (!posLess(change.to, pos)) return end;\r\n\r\n      var line = pos.line + change.text.length - (change.to.line - change.from.line) - 1, ch = pos.ch;\r\n      if (pos.line == change.to.line) ch += end.ch - change.to.ch;\r\n      return Pos(line, ch);\r\n    };\r\n    return {anchor: adjustPos(doc.sel.anchor), head: adjustPos(doc.sel.head)};\r\n  }\r\n\r\n  function filterChange(doc, change, update) {\r\n    var obj = {\r\n      canceled: false,\r\n      from: change.from,\r\n      to: change.to,\r\n      text: change.text,\r\n      origin: change.origin,\r\n      cancel: function() { this.canceled = true; }\r\n    };\r\n    if (update) obj.update = function(from, to, text, origin) {\r\n      if (from) this.from = clipPos(doc, from);\r\n      if (to) this.to = clipPos(doc, to);\r\n      if (text) this.text = text;\r\n      if (origin !== undefined) this.origin = origin;\r\n    };\r\n    signal(doc, \"beforeChange\", doc, obj);\r\n    if (doc.cm) signal(doc.cm, \"beforeChange\", doc.cm, obj);\r\n\r\n    if (obj.canceled) return null;\r\n    return {from: obj.from, to: obj.to, text: obj.text, origin: obj.origin};\r\n  }\r\n\r\n  // Replace the range from from to to by the strings in replacement.\r\n  // change is a {from, to, text [, origin]} object\r\n  function makeChange(doc, change, selUpdate, ignoreReadOnly) {\r\n    if (doc.cm) {\r\n      if (!doc.cm.curOp) return operation(doc.cm, makeChange)(doc, change, selUpdate, ignoreReadOnly);\r\n      if (doc.cm.state.suppressEdits) return;\r\n    }\r\n\r\n    if (hasHandler(doc, \"beforeChange\") || doc.cm && hasHandler(doc.cm, \"beforeChange\")) {\r\n      change = filterChange(doc, change, true);\r\n      if (!change) return;\r\n    }\r\n\r\n    // Possibly split or suppress the update based on the presence\r\n    // of read-only spans in its range.\r\n    var split = sawReadOnlySpans && !ignoreReadOnly && removeReadOnlyRanges(doc, change.from, change.to);\r\n    if (split) {\r\n      for (var i = split.length - 1; i >= 1; --i)\r\n        makeChangeNoReadonly(doc, {from: split[i].from, to: split[i].to, text: [\"\"]});\r\n      if (split.length)\r\n        makeChangeNoReadonly(doc, {from: split[0].from, to: split[0].to, text: change.text}, selUpdate);\r\n    } else {\r\n      makeChangeNoReadonly(doc, change, selUpdate);\r\n    }\r\n  }\r\n\r\n  function makeChangeNoReadonly(doc, change, selUpdate) {\r\n    var selAfter = computeSelAfterChange(doc, change, selUpdate);\r\n    addToHistory(doc, change, selAfter, doc.cm ? doc.cm.curOp.id : NaN);\r\n\r\n    makeChangeSingleDoc(doc, change, selAfter, stretchSpansOverChange(doc, change));\r\n    var rebased = [];\r\n\r\n    linkedDocs(doc, function(doc, sharedHist) {\r\n      if (!sharedHist && indexOf(rebased, doc.history) == -1) {\r\n        rebaseHist(doc.history, change);\r\n        rebased.push(doc.history);\r\n      }\r\n      makeChangeSingleDoc(doc, change, null, stretchSpansOverChange(doc, change));\r\n    });\r\n  }\r\n\r\n  function makeChangeFromHistory(doc, type) {\r\n    if (doc.cm && doc.cm.state.suppressEdits) return;\r\n\r\n    var hist = doc.history;\r\n    var event = (type == \"undo\" ? hist.done : hist.undone).pop();\r\n    if (!event) return;\r\n\r\n    var anti = {changes: [], anchorBefore: event.anchorAfter, headBefore: event.headAfter,\r\n                anchorAfter: event.anchorBefore, headAfter: event.headBefore,\r\n                generation: hist.generation};\r\n    (type == \"undo\" ? hist.undone : hist.done).push(anti);\r\n    hist.generation = event.generation || ++hist.maxGeneration;\r\n\r\n    var filter = hasHandler(doc, \"beforeChange\") || doc.cm && hasHandler(doc.cm, \"beforeChange\");\r\n\r\n    for (var i = event.changes.length - 1; i >= 0; --i) {\r\n      var change = event.changes[i];\r\n      change.origin = type;\r\n      if (filter && !filterChange(doc, change, false)) {\r\n        (type == \"undo\" ? hist.done : hist.undone).length = 0;\r\n        return;\r\n      }\r\n\r\n      anti.changes.push(historyChangeFromChange(doc, change));\r\n\r\n      var after = i ? computeSelAfterChange(doc, change, null)\r\n                    : {anchor: event.anchorBefore, head: event.headBefore};\r\n      makeChangeSingleDoc(doc, change, after, mergeOldSpans(doc, change));\r\n      var rebased = [];\r\n\r\n      linkedDocs(doc, function(doc, sharedHist) {\r\n        if (!sharedHist && indexOf(rebased, doc.history) == -1) {\r\n          rebaseHist(doc.history, change);\r\n          rebased.push(doc.history);\r\n        }\r\n        makeChangeSingleDoc(doc, change, null, mergeOldSpans(doc, change));\r\n      });\r\n    }\r\n  }\r\n\r\n  function shiftDoc(doc, distance) {\r\n    function shiftPos(pos) {return Pos(pos.line + distance, pos.ch);}\r\n    doc.first += distance;\r\n    if (doc.cm) regChange(doc.cm, doc.first, doc.first, distance);\r\n    doc.sel.head = shiftPos(doc.sel.head); doc.sel.anchor = shiftPos(doc.sel.anchor);\r\n    doc.sel.from = shiftPos(doc.sel.from); doc.sel.to = shiftPos(doc.sel.to);\r\n  }\r\n\r\n  function makeChangeSingleDoc(doc, change, selAfter, spans) {\r\n    if (doc.cm && !doc.cm.curOp)\r\n      return operation(doc.cm, makeChangeSingleDoc)(doc, change, selAfter, spans);\r\n\r\n    if (change.to.line < doc.first) {\r\n      shiftDoc(doc, change.text.length - 1 - (change.to.line - change.from.line));\r\n      return;\r\n    }\r\n    if (change.from.line > doc.lastLine()) return;\r\n\r\n    // Clip the change to the size of this doc\r\n    if (change.from.line < doc.first) {\r\n      var shift = change.text.length - 1 - (doc.first - change.from.line);\r\n      shiftDoc(doc, shift);\r\n      change = {from: Pos(doc.first, 0), to: Pos(change.to.line + shift, change.to.ch),\r\n                text: [lst(change.text)], origin: change.origin};\r\n    }\r\n    var last = doc.lastLine();\r\n    if (change.to.line > last) {\r\n      change = {from: change.from, to: Pos(last, getLine(doc, last).text.length),\r\n                text: [change.text[0]], origin: change.origin};\r\n    }\r\n\r\n    change.removed = getBetween(doc, change.from, change.to);\r\n\r\n    if (!selAfter) selAfter = computeSelAfterChange(doc, change, null);\r\n    if (doc.cm) makeChangeSingleDocInEditor(doc.cm, change, spans, selAfter);\r\n    else updateDoc(doc, change, spans, selAfter);\r\n  }\r\n\r\n  function makeChangeSingleDocInEditor(cm, change, spans, selAfter) {\r\n    var doc = cm.doc, display = cm.display, from = change.from, to = change.to;\r\n\r\n    var recomputeMaxLength = false, checkWidthStart = from.line;\r\n    if (!cm.options.lineWrapping) {\r\n      checkWidthStart = lineNo(visualLine(doc, getLine(doc, from.line)));\r\n      doc.iter(checkWidthStart, to.line + 1, function(line) {\r\n        if (line == display.maxLine) {\r\n          recomputeMaxLength = true;\r\n          return true;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (!posLess(doc.sel.head, change.from) && !posLess(change.to, doc.sel.head))\r\n      cm.curOp.cursorActivity = true;\r\n\r\n    updateDoc(doc, change, spans, selAfter, estimateHeight(cm));\r\n\r\n    if (!cm.options.lineWrapping) {\r\n      doc.iter(checkWidthStart, from.line + change.text.length, function(line) {\r\n        var len = lineLength(doc, line);\r\n        if (len > display.maxLineLength) {\r\n          display.maxLine = line;\r\n          display.maxLineLength = len;\r\n          display.maxLineChanged = true;\r\n          recomputeMaxLength = false;\r\n        }\r\n      });\r\n      if (recomputeMaxLength) cm.curOp.updateMaxLine = true;\r\n    }\r\n\r\n    // Adjust frontier, schedule worker\r\n    doc.frontier = Math.min(doc.frontier, from.line);\r\n    startWorker(cm, 400);\r\n\r\n    var lendiff = change.text.length - (to.line - from.line) - 1;\r\n    // Remember that these lines changed, for updating the display\r\n    regChange(cm, from.line, to.line + 1, lendiff);\r\n\r\n    if (hasHandler(cm, \"change\")) {\r\n      var changeObj = {from: from, to: to,\r\n                       text: change.text,\r\n                       removed: change.removed,\r\n                       origin: change.origin};\r\n      if (cm.curOp.textChanged) {\r\n        for (var cur = cm.curOp.textChanged; cur.next; cur = cur.next) {}\r\n        cur.next = changeObj;\r\n      } else cm.curOp.textChanged = changeObj;\r\n    }\r\n  }\r\n\r\n  function replaceRange(doc, code, from, to, origin) {\r\n    if (!to) to = from;\r\n    if (posLess(to, from)) { var tmp = to; to = from; from = tmp; }\r\n    if (typeof code == \"string\") code = splitLines(code);\r\n    makeChange(doc, {from: from, to: to, text: code, origin: origin}, null);\r\n  }\r\n\r\n  // POSITION OBJECT\r\n\r\n  function Pos(line, ch) {\r\n    if (!(this instanceof Pos)) return new Pos(line, ch);\r\n    this.line = line; this.ch = ch;\r\n  }\r\n  CodeMirror.Pos = Pos;\r\n\r\n  function posEq(a, b) {return a.line == b.line && a.ch == b.ch;}\r\n  function posLess(a, b) {return a.line < b.line || (a.line == b.line && a.ch < b.ch);}\r\n  function copyPos(x) {return Pos(x.line, x.ch);}\r\n\r\n  // SELECTION\r\n\r\n  function clipLine(doc, n) {return Math.max(doc.first, Math.min(n, doc.first + doc.size - 1));}\r\n  function clipPos(doc, pos) {\r\n    if (pos.line < doc.first) return Pos(doc.first, 0);\r\n    var last = doc.first + doc.size - 1;\r\n    if (pos.line > last) return Pos(last, getLine(doc, last).text.length);\r\n    return clipToLen(pos, getLine(doc, pos.line).text.length);\r\n  }\r\n  function clipToLen(pos, linelen) {\r\n    var ch = pos.ch;\r\n    if (ch == null || ch > linelen) return Pos(pos.line, linelen);\r\n    else if (ch < 0) return Pos(pos.line, 0);\r\n    else return pos;\r\n  }\r\n  function isLine(doc, l) {return l >= doc.first && l < doc.first + doc.size;}\r\n\r\n  // If shift is held, this will move the selection anchor. Otherwise,\r\n  // it'll set the whole selection.\r\n  function extendSelection(doc, pos, other, bias) {\r\n    if (doc.sel.shift || doc.sel.extend) {\r\n      var anchor = doc.sel.anchor;\r\n      if (other) {\r\n        var posBefore = posLess(pos, anchor);\r\n        if (posBefore != posLess(other, anchor)) {\r\n          anchor = pos;\r\n          pos = other;\r\n        } else if (posBefore != posLess(pos, other)) {\r\n          pos = other;\r\n        }\r\n      }\r\n      setSelection(doc, anchor, pos, bias);\r\n    } else {\r\n      setSelection(doc, pos, other || pos, bias);\r\n    }\r\n    if (doc.cm) doc.cm.curOp.userSelChange = true;\r\n  }\r\n\r\n  function filterSelectionChange(doc, anchor, head) {\r\n    var obj = {anchor: anchor, head: head};\r\n    signal(doc, \"beforeSelectionChange\", doc, obj);\r\n    if (doc.cm) signal(doc.cm, \"beforeSelectionChange\", doc.cm, obj);\r\n    obj.anchor = clipPos(doc, obj.anchor); obj.head = clipPos(doc, obj.head);\r\n    return obj;\r\n  }\r\n\r\n  // Update the selection. Last two args are only used by\r\n  // updateDoc, since they have to be expressed in the line\r\n  // numbers before the update.\r\n  function setSelection(doc, anchor, head, bias, checkAtomic) {\r\n    if (!checkAtomic && hasHandler(doc, \"beforeSelectionChange\") || doc.cm && hasHandler(doc.cm, \"beforeSelectionChange\")) {\r\n      var filtered = filterSelectionChange(doc, anchor, head);\r\n      head = filtered.head;\r\n      anchor = filtered.anchor;\r\n    }\r\n\r\n    var sel = doc.sel;\r\n    sel.goalColumn = null;\r\n    // Skip over atomic spans.\r\n    if (checkAtomic || !posEq(anchor, sel.anchor))\r\n      anchor = skipAtomic(doc, anchor, bias, checkAtomic != \"push\");\r\n    if (checkAtomic || !posEq(head, sel.head))\r\n      head = skipAtomic(doc, head, bias, checkAtomic != \"push\");\r\n\r\n    if (posEq(sel.anchor, anchor) && posEq(sel.head, head)) return;\r\n\r\n    sel.anchor = anchor; sel.head = head;\r\n    var inv = posLess(head, anchor);\r\n    sel.from = inv ? head : anchor;\r\n    sel.to = inv ? anchor : head;\r\n\r\n    if (doc.cm)\r\n      doc.cm.curOp.updateInput = doc.cm.curOp.selectionChanged =\r\n        doc.cm.curOp.cursorActivity = true;\r\n\r\n    signalLater(doc, \"cursorActivity\", doc);\r\n  }\r\n\r\n  function reCheckSelection(cm) {\r\n    setSelection(cm.doc, cm.doc.sel.from, cm.doc.sel.to, null, \"push\");\r\n  }\r\n\r\n  function skipAtomic(doc, pos, bias, mayClear) {\r\n    var flipped = false, curPos = pos;\r\n    var dir = bias || 1;\r\n    doc.cantEdit = false;\r\n    search: for (;;) {\r\n      var line = getLine(doc, curPos.line);\r\n      if (line.markedSpans) {\r\n        for (var i = 0; i < line.markedSpans.length; ++i) {\r\n          var sp = line.markedSpans[i], m = sp.marker;\r\n          if ((sp.from == null || (m.inclusiveLeft ? sp.from <= curPos.ch : sp.from < curPos.ch)) &&\r\n              (sp.to == null || (m.inclusiveRight ? sp.to >= curPos.ch : sp.to > curPos.ch))) {\r\n            if (mayClear) {\r\n              signal(m, \"beforeCursorEnter\");\r\n              if (m.explicitlyCleared) {\r\n                if (!line.markedSpans) break;\r\n                else {--i; continue;}\r\n              }\r\n            }\r\n            if (!m.atomic) continue;\r\n            var newPos = m.find()[dir < 0 ? \"from\" : \"to\"];\r\n            if (posEq(newPos, curPos)) {\r\n              newPos.ch += dir;\r\n              if (newPos.ch < 0) {\r\n                if (newPos.line > doc.first) newPos = clipPos(doc, Pos(newPos.line - 1));\r\n                else newPos = null;\r\n              } else if (newPos.ch > line.text.length) {\r\n                if (newPos.line < doc.first + doc.size - 1) newPos = Pos(newPos.line + 1, 0);\r\n                else newPos = null;\r\n              }\r\n              if (!newPos) {\r\n                if (flipped) {\r\n                  // Driven in a corner -- no valid cursor position found at all\r\n                  // -- try again *with* clearing, if we didn't already\r\n                  if (!mayClear) return skipAtomic(doc, pos, bias, true);\r\n                  // Otherwise, turn off editing until further notice, and return the start of the doc\r\n                  doc.cantEdit = true;\r\n                  return Pos(doc.first, 0);\r\n                }\r\n                flipped = true; newPos = pos; dir = -dir;\r\n              }\r\n            }\r\n            curPos = newPos;\r\n            continue search;\r\n          }\r\n        }\r\n      }\r\n      return curPos;\r\n    }\r\n  }\r\n\r\n  // SCROLLING\r\n\r\n  function scrollCursorIntoView(cm) {\r\n    var coords = scrollPosIntoView(cm, cm.doc.sel.head, cm.options.cursorScrollMargin);\r\n    if (!cm.state.focused) return;\r\n    var display = cm.display, box = getRect(display.sizer), doScroll = null;\r\n    if (coords.top + box.top < 0) doScroll = true;\r\n    else if (coords.bottom + box.top > (window.innerHeight || document.documentElement.clientHeight)) doScroll = false;\r\n    if (doScroll != null && !phantom) {\r\n      var hidden = display.cursor.style.display == \"none\";\r\n      if (hidden) {\r\n        display.cursor.style.display = \"\";\r\n        display.cursor.style.left = coords.left + \"px\";\r\n        display.cursor.style.top = (coords.top - display.viewOffset) + \"px\";\r\n      }\r\n      display.cursor.scrollIntoView(doScroll);\r\n      if (hidden) display.cursor.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  function scrollPosIntoView(cm, pos, margin) {\r\n    if (margin == null) margin = 0;\r\n    for (;;) {\r\n      var changed = false, coords = cursorCoords(cm, pos);\r\n      var scrollPos = calculateScrollPos(cm, coords.left, coords.top - margin, coords.left, coords.bottom + margin);\r\n      var startTop = cm.doc.scrollTop, startLeft = cm.doc.scrollLeft;\r\n      if (scrollPos.scrollTop != null) {\r\n        setScrollTop(cm, scrollPos.scrollTop);\r\n        if (Math.abs(cm.doc.scrollTop - startTop) > 1) changed = true;\r\n      }\r\n      if (scrollPos.scrollLeft != null) {\r\n        setScrollLeft(cm, scrollPos.scrollLeft);\r\n        if (Math.abs(cm.doc.scrollLeft - startLeft) > 1) changed = true;\r\n      }\r\n      if (!changed) return coords;\r\n    }\r\n  }\r\n\r\n  function scrollIntoView(cm, x1, y1, x2, y2) {\r\n    var scrollPos = calculateScrollPos(cm, x1, y1, x2, y2);\r\n    if (scrollPos.scrollTop != null) setScrollTop(cm, scrollPos.scrollTop);\r\n    if (scrollPos.scrollLeft != null) setScrollLeft(cm, scrollPos.scrollLeft);\r\n  }\r\n\r\n  function calculateScrollPos(cm, x1, y1, x2, y2) {\r\n    var display = cm.display, snapMargin = textHeight(cm.display);\r\n    if (y1 < 0) y1 = 0;\r\n    var screen = display.scroller.clientHeight - scrollerCutOff, screentop = display.scroller.scrollTop, result = {};\r\n    var docBottom = cm.doc.height + paddingVert(display);\r\n    var atTop = y1 < snapMargin, atBottom = y2 > docBottom - snapMargin;\r\n    if (y1 < screentop) {\r\n      result.scrollTop = atTop ? 0 : y1;\r\n    } else if (y2 > screentop + screen) {\r\n      var newTop = Math.min(y1, (atBottom ? docBottom : y2) - screen);\r\n      if (newTop != screentop) result.scrollTop = newTop;\r\n    }\r\n\r\n    var screenw = display.scroller.clientWidth - scrollerCutOff, screenleft = display.scroller.scrollLeft;\r\n    x1 += display.gutters.offsetWidth; x2 += display.gutters.offsetWidth;\r\n    var gutterw = display.gutters.offsetWidth;\r\n    var atLeft = x1 < gutterw + 10;\r\n    if (x1 < screenleft + gutterw || atLeft) {\r\n      if (atLeft) x1 = 0;\r\n      result.scrollLeft = Math.max(0, x1 - 10 - gutterw);\r\n    } else if (x2 > screenw + screenleft - 3) {\r\n      result.scrollLeft = x2 + 10 - screenw;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function updateScrollPos(cm, left, top) {\r\n    cm.curOp.updateScrollPos = {scrollLeft: left == null ? cm.doc.scrollLeft : left,\r\n                                scrollTop: top == null ? cm.doc.scrollTop : top};\r\n  }\r\n\r\n  function addToScrollPos(cm, left, top) {\r\n    var pos = cm.curOp.updateScrollPos || (cm.curOp.updateScrollPos = {scrollLeft: cm.doc.scrollLeft, scrollTop: cm.doc.scrollTop});\r\n    var scroll = cm.display.scroller;\r\n    pos.scrollTop = Math.max(0, Math.min(scroll.scrollHeight - scroll.clientHeight, pos.scrollTop + top));\r\n    pos.scrollLeft = Math.max(0, Math.min(scroll.scrollWidth - scroll.clientWidth, pos.scrollLeft + left));\r\n  }\r\n\r\n  // API UTILITIES\r\n\r\n  function indentLine(cm, n, how, aggressive) {\r\n    var doc = cm.doc;\r\n    if (how == null) how = \"add\";\r\n    if (how == \"smart\") {\r\n      if (!cm.doc.mode.indent) how = \"prev\";\r\n      else var state = getStateBefore(cm, n);\r\n    }\r\n\r\n    var tabSize = cm.options.tabSize;\r\n    var line = getLine(doc, n), curSpace = countColumn(line.text, null, tabSize);\r\n    var curSpaceString = line.text.match(/^\\s*/)[0], indentation;\r\n    if (how == \"smart\") {\r\n      indentation = cm.doc.mode.indent(state, line.text.slice(curSpaceString.length), line.text);\r\n      if (indentation == Pass) {\r\n        if (!aggressive) return;\r\n        how = \"prev\";\r\n      }\r\n    }\r\n    if (how == \"prev\") {\r\n      if (n > doc.first) indentation = countColumn(getLine(doc, n-1).text, null, tabSize);\r\n      else indentation = 0;\r\n    } else if (how == \"add\") {\r\n      indentation = curSpace + cm.options.indentUnit;\r\n    } else if (how == \"subtract\") {\r\n      indentation = curSpace - cm.options.indentUnit;\r\n    } else if (typeof how == \"number\") {\r\n      indentation = curSpace + how;\r\n    }\r\n    indentation = Math.max(0, indentation);\r\n\r\n    var indentString = \"\", pos = 0;\r\n    if (cm.options.indentWithTabs)\r\n      for (var i = Math.floor(indentation / tabSize); i; --i) {pos += tabSize; indentString += \"\\t\";}\r\n    if (pos < indentation) indentString += spaceStr(indentation - pos);\r\n\r\n    if (indentString != curSpaceString)\r\n      replaceRange(cm.doc, indentString, Pos(n, 0), Pos(n, curSpaceString.length), \"+input\");\r\n    line.stateAfter = null;\r\n  }\r\n\r\n  function changeLine(cm, handle, op) {\r\n    var no = handle, line = handle, doc = cm.doc;\r\n    if (typeof handle == \"number\") line = getLine(doc, clipLine(doc, handle));\r\n    else no = lineNo(handle);\r\n    if (no == null) return null;\r\n    if (op(line, no)) regChange(cm, no, no + 1);\r\n    else return null;\r\n    return line;\r\n  }\r\n\r\n  function findPosH(doc, pos, dir, unit, visually) {\r\n    var line = pos.line, ch = pos.ch, origDir = dir;\r\n    var lineObj = getLine(doc, line);\r\n    var possible = true;\r\n    function findNextLine() {\r\n      var l = line + dir;\r\n      if (l < doc.first || l >= doc.first + doc.size) return (possible = false);\r\n      line = l;\r\n      return lineObj = getLine(doc, l);\r\n    }\r\n    function moveOnce(boundToLine) {\r\n      var next = (visually ? moveVisually : moveLogically)(lineObj, ch, dir, true);\r\n      if (next == null) {\r\n        if (!boundToLine && findNextLine()) {\r\n          if (visually) ch = (dir < 0 ? lineRight : lineLeft)(lineObj);\r\n          else ch = dir < 0 ? lineObj.text.length : 0;\r\n        } else return (possible = false);\r\n      } else ch = next;\r\n      return true;\r\n    }\r\n\r\n    if (unit == \"char\") moveOnce();\r\n    else if (unit == \"column\") moveOnce(true);\r\n    else if (unit == \"word\" || unit == \"group\") {\r\n      var sawType = null, group = unit == \"group\";\r\n      for (var first = true;; first = false) {\r\n        if (dir < 0 && !moveOnce(!first)) break;\r\n        var cur = lineObj.text.charAt(ch) || \"\\n\";\r\n        var type = isWordChar(cur) ? \"w\"\r\n          : !group ? null\r\n          : /\\s/.test(cur) ? null\r\n          : \"p\";\r\n        if (sawType && sawType != type) {\r\n          if (dir < 0) {dir = 1; moveOnce();}\r\n          break;\r\n        }\r\n        if (type) sawType = type;\r\n        if (dir > 0 && !moveOnce(!first)) break;\r\n      }\r\n    }\r\n    var result = skipAtomic(doc, Pos(line, ch), origDir, true);\r\n    if (!possible) result.hitSide = true;\r\n    return result;\r\n  }\r\n\r\n  function findPosV(cm, pos, dir, unit) {\r\n    var doc = cm.doc, x = pos.left, y;\r\n    if (unit == \"page\") {\r\n      var pageSize = Math.min(cm.display.wrapper.clientHeight, window.innerHeight || document.documentElement.clientHeight);\r\n      y = pos.top + dir * (pageSize - (dir < 0 ? 1.5 : .5) * textHeight(cm.display));\r\n    } else if (unit == \"line\") {\r\n      y = dir > 0 ? pos.bottom + 3 : pos.top - 3;\r\n    }\r\n    for (;;) {\r\n      var target = coordsChar(cm, x, y);\r\n      if (!target.outside) break;\r\n      if (dir < 0 ? y <= 0 : y >= doc.height) { target.hitSide = true; break; }\r\n      y += dir * 5;\r\n    }\r\n    return target;\r\n  }\r\n\r\n  function findWordAt(line, pos) {\r\n    var start = pos.ch, end = pos.ch;\r\n    if (line) {\r\n      if (pos.xRel < 0 || end == line.length) --start; else ++end;\r\n      var startChar = line.charAt(start);\r\n      var check = isWordChar(startChar) ? isWordChar\r\n        : /\\s/.test(startChar) ? function(ch) {return /\\s/.test(ch);}\r\n        : function(ch) {return !/\\s/.test(ch) && !isWordChar(ch);};\r\n      while (start > 0 && check(line.charAt(start - 1))) --start;\r\n      while (end < line.length && check(line.charAt(end))) ++end;\r\n    }\r\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end)};\r\n  }\r\n\r\n  function selectLine(cm, line) {\r\n    extendSelection(cm.doc, Pos(line, 0), clipPos(cm.doc, Pos(line + 1, 0)));\r\n  }\r\n\r\n  // PROTOTYPE\r\n\r\n  // The publicly visible API. Note that operation(null, f) means\r\n  // 'wrap f in an operation, performed on its `this` parameter'\r\n\r\n  CodeMirror.prototype = {\r\n    constructor: CodeMirror,\r\n    focus: function(){window.focus(); focusInput(this); onFocus(this); fastPoll(this);},\r\n\r\n    setOption: function(option, value) {\r\n      var options = this.options, old = options[option];\r\n      if (options[option] == value && option != \"mode\") return;\r\n      options[option] = value;\r\n      if (optionHandlers.hasOwnProperty(option))\r\n        operation(this, optionHandlers[option])(this, value, old);\r\n    },\r\n\r\n    getOption: function(option) {return this.options[option];},\r\n    getDoc: function() {return this.doc;},\r\n\r\n    addKeyMap: function(map, bottom) {\r\n      this.state.keyMaps[bottom ? \"push\" : \"unshift\"](map);\r\n    },\r\n    removeKeyMap: function(map) {\r\n      var maps = this.state.keyMaps;\r\n      for (var i = 0; i < maps.length; ++i)\r\n        if ((typeof map == \"string\" ? maps[i].name : maps[i]) == map) {\r\n          maps.splice(i, 1);\r\n          return true;\r\n        }\r\n    },\r\n\r\n    addOverlay: operation(null, function(spec, options) {\r\n      var mode = spec.token ? spec : CodeMirror.getMode(this.options, spec);\r\n      if (mode.startState) throw new Error(\"Overlays may not be stateful.\");\r\n      this.state.overlays.push({mode: mode, modeSpec: spec, opaque: options && options.opaque});\r\n      this.state.modeGen++;\r\n      regChange(this);\r\n    }),\r\n    removeOverlay: operation(null, function(spec) {\r\n      var overlays = this.state.overlays;\r\n      for (var i = 0; i < overlays.length; ++i) {\r\n        var cur = overlays[i].modeSpec;\r\n        if (cur == spec || typeof spec == \"string\" && cur.name == spec) {\r\n          overlays.splice(i, 1);\r\n          this.state.modeGen++;\r\n          regChange(this);\r\n          return;\r\n        }\r\n      }\r\n    }),\r\n\r\n    indentLine: operation(null, function(n, dir, aggressive) {\r\n      if (typeof dir != \"string\" && typeof dir != \"number\") {\r\n        if (dir == null) dir = this.options.smartIndent ? \"smart\" : \"prev\";\r\n        else dir = dir ? \"add\" : \"subtract\";\r\n      }\r\n      if (isLine(this.doc, n)) indentLine(this, n, dir, aggressive);\r\n    }),\r\n    indentSelection: operation(null, function(how) {\r\n      var sel = this.doc.sel;\r\n      if (posEq(sel.from, sel.to)) return indentLine(this, sel.from.line, how);\r\n      var e = sel.to.line - (sel.to.ch ? 0 : 1);\r\n      for (var i = sel.from.line; i <= e; ++i) indentLine(this, i, how);\r\n    }),\r\n\r\n    // Fetch the parser token for a given character. Useful for hacks\r\n    // that want to inspect the mode state (say, for completion).\r\n    getTokenAt: function(pos, precise) {\r\n      var doc = this.doc;\r\n      pos = clipPos(doc, pos);\r\n      var state = getStateBefore(this, pos.line, precise), mode = this.doc.mode;\r\n      var line = getLine(doc, pos.line);\r\n      var stream = new StringStream(line.text, this.options.tabSize);\r\n      while (stream.pos < pos.ch && !stream.eol()) {\r\n        stream.start = stream.pos;\r\n        var style = mode.token(stream, state);\r\n      }\r\n      return {start: stream.start,\r\n              end: stream.pos,\r\n              string: stream.current(),\r\n              className: style || null, // Deprecated, use 'type' instead\r\n              type: style || null,\r\n              state: state};\r\n    },\r\n\r\n    getTokenTypeAt: function(pos) {\r\n      pos = clipPos(this.doc, pos);\r\n      var styles = getLineStyles(this, getLine(this.doc, pos.line));\r\n      var before = 0, after = (styles.length - 1) / 2, ch = pos.ch;\r\n      for (;;) {\r\n        var mid = (before + after) >> 1;\r\n        if ((mid ? styles[mid * 2 - 1] : 0) >= ch) after = mid;\r\n        else if (styles[mid * 2 + 1] < ch) before = mid + 1;\r\n        else return styles[mid * 2 + 2];\r\n      }\r\n    },\r\n\r\n    getStateAfter: function(line, precise) {\r\n      var doc = this.doc;\r\n      line = clipLine(doc, line == null ? doc.first + doc.size - 1: line);\r\n      return getStateBefore(this, line + 1, precise);\r\n    },\r\n\r\n    cursorCoords: function(start, mode) {\r\n      var pos, sel = this.doc.sel;\r\n      if (start == null) pos = sel.head;\r\n      else if (typeof start == \"object\") pos = clipPos(this.doc, start);\r\n      else pos = start ? sel.from : sel.to;\r\n      return cursorCoords(this, pos, mode || \"page\");\r\n    },\r\n\r\n    charCoords: function(pos, mode) {\r\n      return charCoords(this, clipPos(this.doc, pos), mode || \"page\");\r\n    },\r\n\r\n    coordsChar: function(coords, mode) {\r\n      coords = fromCoordSystem(this, coords, mode || \"page\");\r\n      return coordsChar(this, coords.left, coords.top);\r\n    },\r\n\r\n    lineAtHeight: function(height, mode) {\r\n      height = fromCoordSystem(this, {top: height, left: 0}, mode || \"page\").top;\r\n      return lineAtHeight(this.doc, height + this.display.viewOffset);\r\n    },\r\n    heightAtLine: function(line, mode) {\r\n      var end = false, last = this.doc.first + this.doc.size - 1;\r\n      if (line < this.doc.first) line = this.doc.first;\r\n      else if (line > last) { line = last; end = true; }\r\n      var lineObj = getLine(this.doc, line);\r\n      return intoCoordSystem(this, getLine(this.doc, line), {top: 0, left: 0}, mode || \"page\").top +\r\n        (end ? lineObj.height : 0);\r\n    },\r\n\r\n    defaultTextHeight: function() { return textHeight(this.display); },\r\n    defaultCharWidth: function() { return charWidth(this.display); },\r\n\r\n    setGutterMarker: operation(null, function(line, gutterID, value) {\r\n      return changeLine(this, line, function(line) {\r\n        var markers = line.gutterMarkers || (line.gutterMarkers = {});\r\n        markers[gutterID] = value;\r\n        if (!value && isEmpty(markers)) line.gutterMarkers = null;\r\n        return true;\r\n      });\r\n    }),\r\n\r\n    clearGutter: operation(null, function(gutterID) {\r\n      var cm = this, doc = cm.doc, i = doc.first;\r\n      doc.iter(function(line) {\r\n        if (line.gutterMarkers && line.gutterMarkers[gutterID]) {\r\n          line.gutterMarkers[gutterID] = null;\r\n          regChange(cm, i, i + 1);\r\n          if (isEmpty(line.gutterMarkers)) line.gutterMarkers = null;\r\n        }\r\n        ++i;\r\n      });\r\n    }),\r\n\r\n    addLineClass: operation(null, function(handle, where, cls) {\r\n      return changeLine(this, handle, function(line) {\r\n        var prop = where == \"text\" ? \"textClass\" : where == \"background\" ? \"bgClass\" : \"wrapClass\";\r\n        if (!line[prop]) line[prop] = cls;\r\n        else if (new RegExp(\"(?:^|\\\\s)\" + cls + \"(?:$|\\\\s)\").test(line[prop])) return false;\r\n        else line[prop] += \" \" + cls;\r\n        return true;\r\n      });\r\n    }),\r\n\r\n    removeLineClass: operation(null, function(handle, where, cls) {\r\n      return changeLine(this, handle, function(line) {\r\n        var prop = where == \"text\" ? \"textClass\" : where == \"background\" ? \"bgClass\" : \"wrapClass\";\r\n        var cur = line[prop];\r\n        if (!cur) return false;\r\n        else if (cls == null) line[prop] = null;\r\n        else {\r\n          var found = cur.match(new RegExp(\"(?:^|\\\\s+)\" + cls + \"(?:$|\\\\s+)\"));\r\n          if (!found) return false;\r\n          var end = found.index + found[0].length;\r\n          line[prop] = cur.slice(0, found.index) + (!found.index || end == cur.length ? \"\" : \" \") + cur.slice(end) || null;\r\n        }\r\n        return true;\r\n      });\r\n    }),\r\n\r\n    addLineWidget: operation(null, function(handle, node, options) {\r\n      return addLineWidget(this, handle, node, options);\r\n    }),\r\n\r\n    removeLineWidget: function(widget) { widget.clear(); },\r\n\r\n    lineInfo: function(line) {\r\n      if (typeof line == \"number\") {\r\n        if (!isLine(this.doc, line)) return null;\r\n        var n = line;\r\n        line = getLine(this.doc, line);\r\n        if (!line) return null;\r\n      } else {\r\n        var n = lineNo(line);\r\n        if (n == null) return null;\r\n      }\r\n      return {line: n, handle: line, text: line.text, gutterMarkers: line.gutterMarkers,\r\n              textClass: line.textClass, bgClass: line.bgClass, wrapClass: line.wrapClass,\r\n              widgets: line.widgets};\r\n    },\r\n\r\n    getViewport: function() { return {from: this.display.showingFrom, to: this.display.showingTo};},\r\n\r\n    addWidget: function(pos, node, scroll, vert, horiz) {\r\n      var display = this.display;\r\n      pos = cursorCoords(this, clipPos(this.doc, pos));\r\n      var top = pos.bottom, left = pos.left;\r\n      node.style.position = \"absolute\";\r\n      display.sizer.appendChild(node);\r\n      if (vert == \"over\") {\r\n        top = pos.top;\r\n      } else if (vert == \"above\" || vert == \"near\") {\r\n        var vspace = Math.max(display.wrapper.clientHeight, this.doc.height),\r\n        hspace = Math.max(display.sizer.clientWidth, display.lineSpace.clientWidth);\r\n        // Default to positioning above (if specified and possible); otherwise default to positioning below\r\n        if ((vert == 'above' || pos.bottom + node.offsetHeight > vspace) && pos.top > node.offsetHeight)\r\n          top = pos.top - node.offsetHeight;\r\n        else if (pos.bottom + node.offsetHeight <= vspace)\r\n          top = pos.bottom;\r\n        if (left + node.offsetWidth > hspace)\r\n          left = hspace - node.offsetWidth;\r\n      }\r\n      node.style.top = top + \"px\";\r\n      node.style.left = node.style.right = \"\";\r\n      if (horiz == \"right\") {\r\n        left = display.sizer.clientWidth - node.offsetWidth;\r\n        node.style.right = \"0px\";\r\n      } else {\r\n        if (horiz == \"left\") left = 0;\r\n        else if (horiz == \"middle\") left = (display.sizer.clientWidth - node.offsetWidth) / 2;\r\n        node.style.left = left + \"px\";\r\n      }\r\n      if (scroll)\r\n        scrollIntoView(this, left, top, left + node.offsetWidth, top + node.offsetHeight);\r\n    },\r\n\r\n    triggerOnKeyDown: operation(null, onKeyDown),\r\n\r\n    execCommand: function(cmd) {return commands[cmd](this);},\r\n\r\n    findPosH: function(from, amount, unit, visually) {\r\n      var dir = 1;\r\n      if (amount < 0) { dir = -1; amount = -amount; }\r\n      for (var i = 0, cur = clipPos(this.doc, from); i < amount; ++i) {\r\n        cur = findPosH(this.doc, cur, dir, unit, visually);\r\n        if (cur.hitSide) break;\r\n      }\r\n      return cur;\r\n    },\r\n\r\n    moveH: operation(null, function(dir, unit) {\r\n      var sel = this.doc.sel, pos;\r\n      if (sel.shift || sel.extend || posEq(sel.from, sel.to))\r\n        pos = findPosH(this.doc, sel.head, dir, unit, this.options.rtlMoveVisually);\r\n      else\r\n        pos = dir < 0 ? sel.from : sel.to;\r\n      extendSelection(this.doc, pos, pos, dir);\r\n    }),\r\n\r\n    deleteH: operation(null, function(dir, unit) {\r\n      var sel = this.doc.sel;\r\n      if (!posEq(sel.from, sel.to)) replaceRange(this.doc, \"\", sel.from, sel.to, \"+delete\");\r\n      else replaceRange(this.doc, \"\", sel.from, findPosH(this.doc, sel.head, dir, unit, false), \"+delete\");\r\n      this.curOp.userSelChange = true;\r\n    }),\r\n\r\n    findPosV: function(from, amount, unit, goalColumn) {\r\n      var dir = 1, x = goalColumn;\r\n      if (amount < 0) { dir = -1; amount = -amount; }\r\n      for (var i = 0, cur = clipPos(this.doc, from); i < amount; ++i) {\r\n        var coords = cursorCoords(this, cur, \"div\");\r\n        if (x == null) x = coords.left;\r\n        else coords.left = x;\r\n        cur = findPosV(this, coords, dir, unit);\r\n        if (cur.hitSide) break;\r\n      }\r\n      return cur;\r\n    },\r\n\r\n    moveV: operation(null, function(dir, unit) {\r\n      var sel = this.doc.sel;\r\n      var pos = cursorCoords(this, sel.head, \"div\");\r\n      if (sel.goalColumn != null) pos.left = sel.goalColumn;\r\n      var target = findPosV(this, pos, dir, unit);\r\n\r\n      if (unit == \"page\") addToScrollPos(this, 0, charCoords(this, target, \"div\").top - pos.top);\r\n      extendSelection(this.doc, target, target, dir);\r\n      sel.goalColumn = pos.left;\r\n    }),\r\n\r\n    toggleOverwrite: function(value) {\r\n      if (value != null && value == this.state.overwrite) return;\r\n      if (this.state.overwrite = !this.state.overwrite)\r\n        this.display.cursor.className += \" CodeMirror-overwrite\";\r\n      else\r\n        this.display.cursor.className = this.display.cursor.className.replace(\" CodeMirror-overwrite\", \"\");\r\n    },\r\n    hasFocus: function() { return this.state.focused; },\r\n\r\n    scrollTo: operation(null, function(x, y) {\r\n      updateScrollPos(this, x, y);\r\n    }),\r\n    getScrollInfo: function() {\r\n      var scroller = this.display.scroller, co = scrollerCutOff;\r\n      return {left: scroller.scrollLeft, top: scroller.scrollTop,\r\n              height: scroller.scrollHeight - co, width: scroller.scrollWidth - co,\r\n              clientHeight: scroller.clientHeight - co, clientWidth: scroller.clientWidth - co};\r\n    },\r\n\r\n    scrollIntoView: operation(null, function(pos, margin) {\r\n      if (typeof pos == \"number\") pos = Pos(pos, 0);\r\n      if (!margin) margin = 0;\r\n      var coords = pos;\r\n\r\n      if (!pos || pos.line != null) {\r\n        this.curOp.scrollToPos = pos ? clipPos(this.doc, pos) : this.doc.sel.head;\r\n        this.curOp.scrollToPosMargin = margin;\r\n        coords = cursorCoords(this, this.curOp.scrollToPos);\r\n      }\r\n      var sPos = calculateScrollPos(this, coords.left, coords.top - margin, coords.right, coords.bottom + margin);\r\n      updateScrollPos(this, sPos.scrollLeft, sPos.scrollTop);\r\n    }),\r\n\r\n    setSize: function(width, height) {\r\n      function interpret(val) {\r\n        return typeof val == \"number\" || /^\\d+$/.test(String(val)) ? val + \"px\" : val;\r\n      }\r\n      if (width != null) this.display.wrapper.style.width = interpret(width);\r\n      if (height != null) this.display.wrapper.style.height = interpret(height);\r\n      this.refresh();\r\n    },\r\n\r\n    on: function(type, f) {on(this, type, f);},\r\n    off: function(type, f) {off(this, type, f);},\r\n\r\n    operation: function(f){return runInOp(this, f);},\r\n\r\n    refresh: operation(null, function() {\r\n      clearCaches(this);\r\n      updateScrollPos(this, this.doc.scrollLeft, this.doc.scrollTop);\r\n      regChange(this);\r\n    }),\r\n\r\n    swapDoc: operation(null, function(doc) {\r\n      var old = this.doc;\r\n      old.cm = null;\r\n      attachDoc(this, doc);\r\n      clearCaches(this);\r\n      resetInput(this, true);\r\n      updateScrollPos(this, doc.scrollLeft, doc.scrollTop);\r\n      return old;\r\n    }),\r\n\r\n    getInputField: function(){return this.display.input;},\r\n    getWrapperElement: function(){return this.display.wrapper;},\r\n    getScrollerElement: function(){return this.display.scroller;},\r\n    getGutterElement: function(){return this.display.gutters;}\r\n  };\r\n\r\n  // OPTION DEFAULTS\r\n\r\n  var optionHandlers = CodeMirror.optionHandlers = {};\r\n\r\n  // The default configuration options.\r\n  var defaults = CodeMirror.defaults = {};\r\n\r\n  function option(name, deflt, handle, notOnInit) {\r\n    CodeMirror.defaults[name] = deflt;\r\n    if (handle) optionHandlers[name] =\r\n      notOnInit ? function(cm, val, old) {if (old != Init) handle(cm, val, old);} : handle;\r\n  }\r\n\r\n  var Init = CodeMirror.Init = {toString: function(){return \"CodeMirror.Init\";}};\r\n\r\n  // These two are, on init, called from the constructor because they\r\n  // have to be initialized before the editor can start at all.\r\n  option(\"value\", \"\", function(cm, val) {\r\n    cm.setValue(val);\r\n  }, true);\r\n  option(\"mode\", null, function(cm, val) {\r\n    cm.doc.modeOption = val;\r\n    loadMode(cm);\r\n  }, true);\r\n\r\n  option(\"indentUnit\", 2, loadMode, true);\r\n  option(\"indentWithTabs\", false);\r\n  option(\"smartIndent\", true);\r\n  option(\"tabSize\", 4, function(cm) {\r\n    loadMode(cm);\r\n    clearCaches(cm);\r\n    regChange(cm);\r\n  }, true);\r\n  option(\"electricChars\", true);\r\n  option(\"rtlMoveVisually\", !windows);\r\n\r\n  option(\"theme\", \"default\", function(cm) {\r\n    themeChanged(cm);\r\n    guttersChanged(cm);\r\n  }, true);\r\n  option(\"keyMap\", \"default\", keyMapChanged);\r\n  option(\"extraKeys\", null);\r\n\r\n  option(\"onKeyEvent\", null);\r\n  option(\"onDragEvent\", null);\r\n\r\n  option(\"lineWrapping\", false, wrappingChanged, true);\r\n  option(\"gutters\", [], function(cm) {\r\n    setGuttersForLineNumbers(cm.options);\r\n    guttersChanged(cm);\r\n  }, true);\r\n  option(\"fixedGutter\", true, function(cm, val) {\r\n    cm.display.gutters.style.left = val ? compensateForHScroll(cm.display) + \"px\" : \"0\";\r\n    cm.refresh();\r\n  }, true);\r\n  option(\"coverGutterNextToScrollbar\", false, updateScrollbars, true);\r\n  option(\"lineNumbers\", false, function(cm) {\r\n    setGuttersForLineNumbers(cm.options);\r\n    guttersChanged(cm);\r\n  }, true);\r\n  option(\"firstLineNumber\", 1, guttersChanged, true);\r\n  option(\"lineNumberFormatter\", function(integer) {return integer;}, guttersChanged, true);\r\n  option(\"showCursorWhenSelecting\", false, updateSelection, true);\r\n\r\n  option(\"readOnly\", false, function(cm, val) {\r\n    if (val == \"nocursor\") {onBlur(cm); cm.display.input.blur();}\r\n    else if (!val) resetInput(cm, true);\r\n  });\r\n  option(\"dragDrop\", true);\r\n\r\n  option(\"cursorBlinkRate\", 530);\r\n  option(\"cursorScrollMargin\", 0);\r\n  option(\"cursorHeight\", 1);\r\n  option(\"workTime\", 100);\r\n  option(\"workDelay\", 100);\r\n  option(\"flattenSpans\", true);\r\n  option(\"pollInterval\", 100);\r\n  option(\"undoDepth\", 40, function(cm, val){cm.doc.history.undoDepth = val;});\r\n  option(\"historyEventDelay\", 500);\r\n  option(\"viewportMargin\", 10, function(cm){cm.refresh();}, true);\r\n  option(\"maxHighlightLength\", 10000, function(cm){loadMode(cm); cm.refresh();}, true);\r\n  option(\"moveInputWithCursor\", true, function(cm, val) {\r\n    if (!val) cm.display.inputDiv.style.top = cm.display.inputDiv.style.left = 0;\r\n  });\r\n\r\n  option(\"tabindex\", null, function(cm, val) {\r\n    cm.display.input.tabIndex = val || \"\";\r\n  });\r\n  option(\"autofocus\", null);\r\n\r\n  // MODE DEFINITION AND QUERYING\r\n\r\n  // Known modes, by name and by MIME\r\n  var modes = CodeMirror.modes = {}, mimeModes = CodeMirror.mimeModes = {};\r\n\r\n  CodeMirror.defineMode = function(name, mode) {\r\n    if (!CodeMirror.defaults.mode && name != \"null\") CodeMirror.defaults.mode = name;\r\n    if (arguments.length > 2) {\r\n      mode.dependencies = [];\r\n      for (var i = 2; i < arguments.length; ++i) mode.dependencies.push(arguments[i]);\r\n    }\r\n    modes[name] = mode;\r\n  };\r\n\r\n  CodeMirror.defineMIME = function(mime, spec) {\r\n    mimeModes[mime] = spec;\r\n  };\r\n\r\n  CodeMirror.resolveMode = function(spec) {\r\n    if (typeof spec == \"string\" && mimeModes.hasOwnProperty(spec)) {\r\n      spec = mimeModes[spec];\r\n    } else if (spec && typeof spec.name == \"string\" && mimeModes.hasOwnProperty(spec.name)) {\r\n      var found = mimeModes[spec.name];\r\n      spec = createObj(found, spec);\r\n      spec.name = found.name;\r\n    } else if (typeof spec == \"string\" && /^[\\w\\-]+\\/[\\w\\-]+\\+xml$/.test(spec)) {\r\n      return CodeMirror.resolveMode(\"application/xml\");\r\n    }\r\n    if (typeof spec == \"string\") return {name: spec};\r\n    else return spec || {name: \"null\"};\r\n  };\r\n\r\n  CodeMirror.getMode = function(options, spec) {\r\n    spec = CodeMirror.resolveMode(spec);\r\n    var mfactory = modes[spec.name];\r\n    if (!mfactory) return CodeMirror.getMode(options, \"text/plain\");\r\n    var modeObj = mfactory(options, spec);\r\n    if (modeExtensions.hasOwnProperty(spec.name)) {\r\n      var exts = modeExtensions[spec.name];\r\n      for (var prop in exts) {\r\n        if (!exts.hasOwnProperty(prop)) continue;\r\n        if (modeObj.hasOwnProperty(prop)) modeObj[\"_\" + prop] = modeObj[prop];\r\n        modeObj[prop] = exts[prop];\r\n      }\r\n    }\r\n    modeObj.name = spec.name;\r\n    return modeObj;\r\n  };\r\n\r\n  CodeMirror.defineMode(\"null\", function() {\r\n    return {token: function(stream) {stream.skipToEnd();}};\r\n  });\r\n  CodeMirror.defineMIME(\"text/plain\", \"null\");\r\n\r\n  var modeExtensions = CodeMirror.modeExtensions = {};\r\n  CodeMirror.extendMode = function(mode, properties) {\r\n    var exts = modeExtensions.hasOwnProperty(mode) ? modeExtensions[mode] : (modeExtensions[mode] = {});\r\n    copyObj(properties, exts);\r\n  };\r\n\r\n  // EXTENSIONS\r\n\r\n  CodeMirror.defineExtension = function(name, func) {\r\n    CodeMirror.prototype[name] = func;\r\n  };\r\n  CodeMirror.defineDocExtension = function(name, func) {\r\n    Doc.prototype[name] = func;\r\n  };\r\n  CodeMirror.defineOption = option;\r\n\r\n  var initHooks = [];\r\n  CodeMirror.defineInitHook = function(f) {initHooks.push(f);};\r\n\r\n  // MODE STATE HANDLING\r\n\r\n  // Utility functions for working with state. Exported because modes\r\n  // sometimes need to do this.\r\n  function copyState(mode, state) {\r\n    if (state === true) return state;\r\n    if (mode.copyState) return mode.copyState(state);\r\n    var nstate = {};\r\n    for (var n in state) {\r\n      var val = state[n];\r\n      if (val instanceof Array) val = val.concat([]);\r\n      nstate[n] = val;\r\n    }\r\n    return nstate;\r\n  }\r\n  CodeMirror.copyState = copyState;\r\n\r\n  function startState(mode, a1, a2) {\r\n    return mode.startState ? mode.startState(a1, a2) : true;\r\n  }\r\n  CodeMirror.startState = startState;\r\n\r\n  CodeMirror.innerMode = function(mode, state) {\r\n    while (mode.innerMode) {\r\n      var info = mode.innerMode(state);\r\n      state = info.state;\r\n      mode = info.mode;\r\n    }\r\n    return info || {mode: mode, state: state};\r\n  };\r\n\r\n  // STANDARD COMMANDS\r\n\r\n  var commands = CodeMirror.commands = {\r\n    selectAll: function(cm) {cm.setSelection(Pos(cm.firstLine(), 0), Pos(cm.lastLine()));},\r\n    killLine: function(cm) {\r\n      var from = cm.getCursor(true), to = cm.getCursor(false), sel = !posEq(from, to);\r\n      if (!sel && cm.getLine(from.line).length == from.ch)\r\n        cm.replaceRange(\"\", from, Pos(from.line + 1, 0), \"+delete\");\r\n      else cm.replaceRange(\"\", from, sel ? to : Pos(from.line), \"+delete\");\r\n    },\r\n    deleteLine: function(cm) {\r\n      var l = cm.getCursor().line;\r\n      cm.replaceRange(\"\", Pos(l, 0), Pos(l), \"+delete\");\r\n    },\r\n    delLineLeft: function(cm) {\r\n      var cur = cm.getCursor();\r\n      cm.replaceRange(\"\", Pos(cur.line, 0), cur, \"+delete\");\r\n    },\r\n    undo: function(cm) {cm.undo();},\r\n    redo: function(cm) {cm.redo();},\r\n    goDocStart: function(cm) {cm.extendSelection(Pos(cm.firstLine(), 0));},\r\n    goDocEnd: function(cm) {cm.extendSelection(Pos(cm.lastLine()));},\r\n    goLineStart: function(cm) {\r\n      cm.extendSelection(lineStart(cm, cm.getCursor().line));\r\n    },\r\n    goLineStartSmart: function(cm) {\r\n      var cur = cm.getCursor(), start = lineStart(cm, cur.line);\r\n      var line = cm.getLineHandle(start.line);\r\n      var order = getOrder(line);\r\n      if (!order || order[0].level == 0) {\r\n        var firstNonWS = Math.max(0, line.text.search(/\\S/));\r\n        var inWS = cur.line == start.line && cur.ch <= firstNonWS && cur.ch;\r\n        cm.extendSelection(Pos(start.line, inWS ? 0 : firstNonWS));\r\n      } else cm.extendSelection(start);\r\n    },\r\n    goLineEnd: function(cm) {\r\n      cm.extendSelection(lineEnd(cm, cm.getCursor().line));\r\n    },\r\n    goLineRight: function(cm) {\r\n      var top = cm.charCoords(cm.getCursor(), \"div\").top + 5;\r\n      cm.extendSelection(cm.coordsChar({left: cm.display.lineDiv.offsetWidth + 100, top: top}, \"div\"));\r\n    },\r\n    goLineLeft: function(cm) {\r\n      var top = cm.charCoords(cm.getCursor(), \"div\").top + 5;\r\n      cm.extendSelection(cm.coordsChar({left: 0, top: top}, \"div\"));\r\n    },\r\n    goLineUp: function(cm) {cm.moveV(-1, \"line\");},\r\n    goLineDown: function(cm) {cm.moveV(1, \"line\");},\r\n    goPageUp: function(cm) {cm.moveV(-1, \"page\");},\r\n    goPageDown: function(cm) {cm.moveV(1, \"page\");},\r\n    goCharLeft: function(cm) {cm.moveH(-1, \"char\");},\r\n    goCharRight: function(cm) {cm.moveH(1, \"char\");},\r\n    goColumnLeft: function(cm) {cm.moveH(-1, \"column\");},\r\n    goColumnRight: function(cm) {cm.moveH(1, \"column\");},\r\n    goWordLeft: function(cm) {cm.moveH(-1, \"word\");},\r\n    goGroupRight: function(cm) {cm.moveH(1, \"group\");},\r\n    goGroupLeft: function(cm) {cm.moveH(-1, \"group\");},\r\n    goWordRight: function(cm) {cm.moveH(1, \"word\");},\r\n    delCharBefore: function(cm) {cm.deleteH(-1, \"char\");},\r\n    delCharAfter: function(cm) {cm.deleteH(1, \"char\");},\r\n    delWordBefore: function(cm) {cm.deleteH(-1, \"word\");},\r\n    delWordAfter: function(cm) {cm.deleteH(1, \"word\");},\r\n    delGroupBefore: function(cm) {cm.deleteH(-1, \"group\");},\r\n    delGroupAfter: function(cm) {cm.deleteH(1, \"group\");},\r\n    indentAuto: function(cm) {cm.indentSelection(\"smart\");},\r\n    indentMore: function(cm) {cm.indentSelection(\"add\");},\r\n    indentLess: function(cm) {cm.indentSelection(\"subtract\");},\r\n    insertTab: function(cm) {cm.replaceSelection(\"\\t\", \"end\", \"+input\");},\r\n    defaultTab: function(cm) {\r\n      if (cm.somethingSelected()) cm.indentSelection(\"add\");\r\n      else cm.replaceSelection(\"\\t\", \"end\", \"+input\");\r\n    },\r\n    transposeChars: function(cm) {\r\n      var cur = cm.getCursor(), line = cm.getLine(cur.line);\r\n      if (cur.ch > 0 && cur.ch < line.length - 1)\r\n        cm.replaceRange(line.charAt(cur.ch) + line.charAt(cur.ch - 1),\r\n                        Pos(cur.line, cur.ch - 1), Pos(cur.line, cur.ch + 1));\r\n    },\r\n    newlineAndIndent: function(cm) {\r\n      operation(cm, function() {\r\n        cm.replaceSelection(\"\\n\", \"end\", \"+input\");\r\n        cm.indentLine(cm.getCursor().line, null, true);\r\n      })();\r\n    },\r\n    toggleOverwrite: function(cm) {cm.toggleOverwrite();}\r\n  };\r\n\r\n  // STANDARD KEYMAPS\r\n\r\n  var keyMap = CodeMirror.keyMap = {};\r\n  keyMap.basic = {\r\n    \"Left\": \"goCharLeft\", \"Right\": \"goCharRight\", \"Up\": \"goLineUp\", \"Down\": \"goLineDown\",\r\n    \"End\": \"goLineEnd\", \"Home\": \"goLineStartSmart\", \"PageUp\": \"goPageUp\", \"PageDown\": \"goPageDown\",\r\n    \"Delete\": \"delCharAfter\", \"Backspace\": \"delCharBefore\", \"Tab\": \"defaultTab\", \"Shift-Tab\": \"indentAuto\",\r\n    \"Enter\": \"newlineAndIndent\", \"Insert\": \"toggleOverwrite\"\r\n  };\r\n  // Note that the save and find-related commands aren't defined by\r\n  // default. Unknown commands are simply ignored.\r\n  keyMap.pcDefault = {\r\n    \"Ctrl-A\": \"selectAll\", \"Ctrl-D\": \"deleteLine\", \"Ctrl-Z\": \"undo\", \"Shift-Ctrl-Z\": \"redo\", \"Ctrl-Y\": \"redo\",\r\n    \"Ctrl-Home\": \"goDocStart\", \"Alt-Up\": \"goDocStart\", \"Ctrl-End\": \"goDocEnd\", \"Ctrl-Down\": \"goDocEnd\",\r\n    \"Ctrl-Left\": \"goGroupLeft\", \"Ctrl-Right\": \"goGroupRight\", \"Alt-Left\": \"goLineStart\", \"Alt-Right\": \"goLineEnd\",\r\n    \"Ctrl-Backspace\": \"delGroupBefore\", \"Ctrl-Delete\": \"delGroupAfter\", \"Ctrl-S\": \"save\", \"Ctrl-F\": \"find\",\r\n    \"Ctrl-G\": \"findNext\", \"Shift-Ctrl-G\": \"findPrev\", \"Shift-Ctrl-F\": \"replace\", \"Shift-Ctrl-R\": \"replaceAll\",\r\n    \"Ctrl-[\": \"indentLess\", \"Ctrl-]\": \"indentMore\",\r\n    fallthrough: \"basic\"\r\n  };\r\n  keyMap.macDefault = {\r\n    \"Cmd-A\": \"selectAll\", \"Cmd-D\": \"deleteLine\", \"Cmd-Z\": \"undo\", \"Shift-Cmd-Z\": \"redo\", \"Cmd-Y\": \"redo\",\r\n    \"Cmd-Up\": \"goDocStart\", \"Cmd-End\": \"goDocEnd\", \"Cmd-Down\": \"goDocEnd\", \"Alt-Left\": \"goGroupLeft\",\r\n    \"Alt-Right\": \"goGroupRight\", \"Cmd-Left\": \"goLineStart\", \"Cmd-Right\": \"goLineEnd\", \"Alt-Backspace\": \"delGroupBefore\",\r\n    \"Ctrl-Alt-Backspace\": \"delGroupAfter\", \"Alt-Delete\": \"delGroupAfter\", \"Cmd-S\": \"save\", \"Cmd-F\": \"find\",\r\n    \"Cmd-G\": \"findNext\", \"Shift-Cmd-G\": \"findPrev\", \"Cmd-Alt-F\": \"replace\", \"Shift-Cmd-Alt-F\": \"replaceAll\",\r\n    \"Cmd-[\": \"indentLess\", \"Cmd-]\": \"indentMore\", \"Cmd-Backspace\": \"delLineLeft\",\r\n    fallthrough: [\"basic\", \"emacsy\"]\r\n  };\r\n  keyMap[\"default\"] = mac ? keyMap.macDefault : keyMap.pcDefault;\r\n  keyMap.emacsy = {\r\n    \"Ctrl-F\": \"goCharRight\", \"Ctrl-B\": \"goCharLeft\", \"Ctrl-P\": \"goLineUp\", \"Ctrl-N\": \"goLineDown\",\r\n    \"Alt-F\": \"goWordRight\", \"Alt-B\": \"goWordLeft\", \"Ctrl-A\": \"goLineStart\", \"Ctrl-E\": \"goLineEnd\",\r\n    \"Ctrl-V\": \"goPageDown\", \"Shift-Ctrl-V\": \"goPageUp\", \"Ctrl-D\": \"delCharAfter\", \"Ctrl-H\": \"delCharBefore\",\r\n    \"Alt-D\": \"delWordAfter\", \"Alt-Backspace\": \"delWordBefore\", \"Ctrl-K\": \"killLine\", \"Ctrl-T\": \"transposeChars\"\r\n  };\r\n\r\n  // KEYMAP DISPATCH\r\n\r\n  function getKeyMap(val) {\r\n    if (typeof val == \"string\") return keyMap[val];\r\n    else return val;\r\n  }\r\n\r\n  function lookupKey(name, maps, handle) {\r\n    function lookup(map) {\r\n      map = getKeyMap(map);\r\n      var found = map[name];\r\n      if (found === false) return \"stop\";\r\n      if (found != null && handle(found)) return true;\r\n      if (map.nofallthrough) return \"stop\";\r\n\r\n      var fallthrough = map.fallthrough;\r\n      if (fallthrough == null) return false;\r\n      if (Object.prototype.toString.call(fallthrough) != \"[object Array]\")\r\n        return lookup(fallthrough);\r\n      for (var i = 0, e = fallthrough.length; i < e; ++i) {\r\n        var done = lookup(fallthrough[i]);\r\n        if (done) return done;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    for (var i = 0; i < maps.length; ++i) {\r\n      var done = lookup(maps[i]);\r\n      if (done) return done != \"stop\";\r\n    }\r\n  }\r\n  function isModifierKey(event) {\r\n    var name = keyNames[event.keyCode];\r\n    return name == \"Ctrl\" || name == \"Alt\" || name == \"Shift\" || name == \"Mod\";\r\n  }\r\n  function keyName(event, noShift) {\r\n    if (opera && event.keyCode == 34 && event[\"char\"]) return false;\r\n    var name = keyNames[event.keyCode];\r\n    if (name == null || event.altGraphKey) return false;\r\n    if (event.altKey) name = \"Alt-\" + name;\r\n    if (flipCtrlCmd ? event.metaKey : event.ctrlKey) name = \"Ctrl-\" + name;\r\n    if (flipCtrlCmd ? event.ctrlKey : event.metaKey) name = \"Cmd-\" + name;\r\n    if (!noShift && event.shiftKey) name = \"Shift-\" + name;\r\n    return name;\r\n  }\r\n  CodeMirror.lookupKey = lookupKey;\r\n  CodeMirror.isModifierKey = isModifierKey;\r\n  CodeMirror.keyName = keyName;\r\n\r\n  // FROMTEXTAREA\r\n\r\n  CodeMirror.fromTextArea = function(textarea, options) {\r\n    if (!options) options = {};\r\n    options.value = textarea.value;\r\n    if (!options.tabindex && textarea.tabindex)\r\n      options.tabindex = textarea.tabindex;\r\n    if (!options.placeholder && textarea.placeholder)\r\n      options.placeholder = textarea.placeholder;\r\n    // Set autofocus to true if this textarea is focused, or if it has\r\n    // autofocus and no other element is focused.\r\n    if (options.autofocus == null) {\r\n      var hasFocus = document.body;\r\n      // doc.activeElement occasionally throws on IE\r\n      try { hasFocus = document.activeElement; } catch(e) {}\r\n      options.autofocus = hasFocus == textarea ||\r\n        textarea.getAttribute(\"autofocus\") != null && hasFocus == document.body;\r\n    }\r\n\r\n    function save() {textarea.value = cm.getValue();}\r\n    if (textarea.form) {\r\n      on(textarea.form, \"submit\", save);\r\n      // Deplorable hack to make the submit method do the right thing.\r\n      if (!options.leaveSubmitMethodAlone) {\r\n        var form = textarea.form, realSubmit = form.submit;\r\n        try {\r\n          var wrappedSubmit = form.submit = function() {\r\n            save();\r\n            form.submit = realSubmit;\r\n            form.submit();\r\n            form.submit = wrappedSubmit;\r\n          };\r\n        } catch(e) {}\r\n      }\r\n    }\r\n\r\n    textarea.style.display = \"none\";\r\n    var cm = CodeMirror(function(node) {\r\n      textarea.parentNode.insertBefore(node, textarea.nextSibling);\r\n    }, options);\r\n    cm.save = save;\r\n    cm.getTextArea = function() { return textarea; };\r\n    cm.toTextArea = function() {\r\n      save();\r\n      textarea.parentNode.removeChild(cm.getWrapperElement());\r\n      textarea.style.display = \"\";\r\n      if (textarea.form) {\r\n        off(textarea.form, \"submit\", save);\r\n        if (typeof textarea.form.submit == \"function\")\r\n          textarea.form.submit = realSubmit;\r\n      }\r\n    };\r\n    return cm;\r\n  };\r\n\r\n  // STRING STREAM\r\n\r\n  // Fed to the mode parsers, provides helper functions to make\r\n  // parsers more succinct.\r\n\r\n  // The character stream used by a mode's parser.\r\n  function StringStream(string, tabSize) {\r\n    this.pos = this.start = 0;\r\n    this.string = string;\r\n    this.tabSize = tabSize || 8;\r\n    this.lastColumnPos = this.lastColumnValue = 0;\r\n  }\r\n\r\n  StringStream.prototype = {\r\n    eol: function() {return this.pos >= this.string.length;},\r\n    sol: function() {return this.pos == 0;},\r\n    peek: function() {return this.string.charAt(this.pos) || undefined;},\r\n    next: function() {\r\n      if (this.pos < this.string.length)\r\n        return this.string.charAt(this.pos++);\r\n    },\r\n    eat: function(match) {\r\n      var ch = this.string.charAt(this.pos);\r\n      if (typeof match == \"string\") var ok = ch == match;\r\n      else var ok = ch && (match.test ? match.test(ch) : match(ch));\r\n      if (ok) {++this.pos; return ch;}\r\n    },\r\n    eatWhile: function(match) {\r\n      var start = this.pos;\r\n      while (this.eat(match)){}\r\n      return this.pos > start;\r\n    },\r\n    eatSpace: function() {\r\n      var start = this.pos;\r\n      while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos))) ++this.pos;\r\n      return this.pos > start;\r\n    },\r\n    skipToEnd: function() {this.pos = this.string.length;},\r\n    skipTo: function(ch) {\r\n      var found = this.string.indexOf(ch, this.pos);\r\n      if (found > -1) {this.pos = found; return true;}\r\n    },\r\n    backUp: function(n) {this.pos -= n;},\r\n    column: function() {\r\n      if (this.lastColumnPos < this.start) {\r\n        this.lastColumnValue = countColumn(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);\r\n        this.lastColumnPos = this.start;\r\n      }\r\n      return this.lastColumnValue;\r\n    },\r\n    indentation: function() {return countColumn(this.string, null, this.tabSize);},\r\n    match: function(pattern, consume, caseInsensitive) {\r\n      if (typeof pattern == \"string\") {\r\n        var cased = function(str) {return caseInsensitive ? str.toLowerCase() : str;};\r\n        var substr = this.string.substr(this.pos, pattern.length);\r\n        if (cased(substr) == cased(pattern)) {\r\n          if (consume !== false) this.pos += pattern.length;\r\n          return true;\r\n        }\r\n      } else {\r\n        var match = this.string.slice(this.pos).match(pattern);\r\n        if (match && match.index > 0) return null;\r\n        if (match && consume !== false) this.pos += match[0].length;\r\n        return match;\r\n      }\r\n    },\r\n    current: function(){return this.string.slice(this.start, this.pos);}\r\n  };\r\n  CodeMirror.StringStream = StringStream;\r\n\r\n  // TEXTMARKERS\r\n\r\n  function TextMarker(doc, type) {\r\n    this.lines = [];\r\n    this.type = type;\r\n    this.doc = doc;\r\n  }\r\n  CodeMirror.TextMarker = TextMarker;\r\n\r\n  TextMarker.prototype.clear = function() {\r\n    if (this.explicitlyCleared) return;\r\n    var cm = this.doc.cm, withOp = cm && !cm.curOp;\r\n    if (withOp) startOperation(cm);\r\n    var min = null, max = null;\r\n    for (var i = 0; i < this.lines.length; ++i) {\r\n      var line = this.lines[i];\r\n      var span = getMarkedSpanFor(line.markedSpans, this);\r\n      if (span.to != null) max = lineNo(line);\r\n      line.markedSpans = removeMarkedSpan(line.markedSpans, span);\r\n      if (span.from != null)\r\n        min = lineNo(line);\r\n      else if (this.collapsed && !lineIsHidden(this.doc, line) && cm)\r\n        updateLineHeight(line, textHeight(cm.display));\r\n    }\r\n    if (cm && this.collapsed && !cm.options.lineWrapping) for (var i = 0; i < this.lines.length; ++i) {\r\n      var visual = visualLine(cm.doc, this.lines[i]), len = lineLength(cm.doc, visual);\r\n      if (len > cm.display.maxLineLength) {\r\n        cm.display.maxLine = visual;\r\n        cm.display.maxLineLength = len;\r\n        cm.display.maxLineChanged = true;\r\n      }\r\n    }\r\n\r\n    if (min != null && cm) regChange(cm, min, max + 1);\r\n    this.lines.length = 0;\r\n    this.explicitlyCleared = true;\r\n    if (this.atomic && this.doc.cantEdit) {\r\n      this.doc.cantEdit = false;\r\n      if (cm) reCheckSelection(cm);\r\n    }\r\n    if (withOp) endOperation(cm);\r\n    signalLater(this, \"clear\");\r\n  };\r\n\r\n  TextMarker.prototype.find = function() {\r\n    var from, to;\r\n    for (var i = 0; i < this.lines.length; ++i) {\r\n      var line = this.lines[i];\r\n      var span = getMarkedSpanFor(line.markedSpans, this);\r\n      if (span.from != null || span.to != null) {\r\n        var found = lineNo(line);\r\n        if (span.from != null) from = Pos(found, span.from);\r\n        if (span.to != null) to = Pos(found, span.to);\r\n      }\r\n    }\r\n    if (this.type == \"bookmark\") return from;\r\n    return from && {from: from, to: to};\r\n  };\r\n\r\n  TextMarker.prototype.changed = function() {\r\n    var pos = this.find(), cm = this.doc.cm;\r\n    if (!pos || !cm) return;\r\n    var line = getLine(this.doc, pos.from.line);\r\n    clearCachedMeasurement(cm, line);\r\n    if (pos.from.line >= cm.display.showingFrom && pos.from.line < cm.display.showingTo) {\r\n      for (var node = cm.display.lineDiv.firstChild; node; node = node.nextSibling) if (node.lineObj == line) {\r\n        if (node.offsetHeight != line.height) updateLineHeight(line, node.offsetHeight);\r\n        break;\r\n      }\r\n      runInOp(cm, function() { cm.curOp.selectionChanged = true; });\r\n    }\r\n  };\r\n\r\n  TextMarker.prototype.attachLine = function(line) {\r\n    if (!this.lines.length && this.doc.cm) {\r\n      var op = this.doc.cm.curOp;\r\n      if (!op.maybeHiddenMarkers || indexOf(op.maybeHiddenMarkers, this) == -1)\r\n        (op.maybeUnhiddenMarkers || (op.maybeUnhiddenMarkers = [])).push(this);\r\n    }\r\n    this.lines.push(line);\r\n  };\r\n  TextMarker.prototype.detachLine = function(line) {\r\n    this.lines.splice(indexOf(this.lines, line), 1);\r\n    if (!this.lines.length && this.doc.cm) {\r\n      var op = this.doc.cm.curOp;\r\n      (op.maybeHiddenMarkers || (op.maybeHiddenMarkers = [])).push(this);\r\n    }\r\n  };\r\n\r\n  function markText(doc, from, to, options, type) {\r\n    if (options && options.shared) return markTextShared(doc, from, to, options, type);\r\n    if (doc.cm && !doc.cm.curOp) return operation(doc.cm, markText)(doc, from, to, options, type);\r\n\r\n    var marker = new TextMarker(doc, type);\r\n    if (type == \"range\" && !posLess(from, to)) return marker;\r\n    if (options) copyObj(options, marker);\r\n    if (marker.replacedWith) {\r\n      marker.collapsed = true;\r\n      marker.replacedWith = elt(\"span\", [marker.replacedWith], \"CodeMirror-widget\");\r\n      if (!options.handleMouseEvents) marker.replacedWith.ignoreEvents = true;\r\n    }\r\n    if (marker.collapsed) sawCollapsedSpans = true;\r\n\r\n    if (marker.addToHistory)\r\n      addToHistory(doc, {from: from, to: to, origin: \"markText\"},\r\n                   {head: doc.sel.head, anchor: doc.sel.anchor}, NaN);\r\n\r\n    var curLine = from.line, size = 0, collapsedAtStart, collapsedAtEnd, cm = doc.cm, updateMaxLine;\r\n    doc.iter(curLine, to.line + 1, function(line) {\r\n      if (cm && marker.collapsed && !cm.options.lineWrapping && visualLine(doc, line) == cm.display.maxLine)\r\n        updateMaxLine = true;\r\n      var span = {from: null, to: null, marker: marker};\r\n      size += line.text.length;\r\n      if (curLine == from.line) {span.from = from.ch; size -= from.ch;}\r\n      if (curLine == to.line) {span.to = to.ch; size -= line.text.length - to.ch;}\r\n      if (marker.collapsed) {\r\n        if (curLine == to.line) collapsedAtEnd = collapsedSpanAt(line, to.ch);\r\n        if (curLine == from.line) collapsedAtStart = collapsedSpanAt(line, from.ch);\r\n        else updateLineHeight(line, 0);\r\n      }\r\n      addMarkedSpan(line, span);\r\n      ++curLine;\r\n    });\r\n    if (marker.collapsed) doc.iter(from.line, to.line + 1, function(line) {\r\n      if (lineIsHidden(doc, line)) updateLineHeight(line, 0);\r\n    });\r\n\r\n    if (marker.clearOnEnter) on(marker, \"beforeCursorEnter\", function() { marker.clear(); });\r\n\r\n    if (marker.readOnly) {\r\n      sawReadOnlySpans = true;\r\n      if (doc.history.done.length || doc.history.undone.length)\r\n        doc.clearHistory();\r\n    }\r\n    if (marker.collapsed) {\r\n      if (collapsedAtStart != collapsedAtEnd)\r\n        throw new Error(\"Inserting collapsed marker overlapping an existing one\");\r\n      marker.size = size;\r\n      marker.atomic = true;\r\n    }\r\n    if (cm) {\r\n      if (updateMaxLine) cm.curOp.updateMaxLine = true;\r\n      if (marker.className || marker.startStyle || marker.endStyle || marker.collapsed)\r\n        regChange(cm, from.line, to.line + 1);\r\n      if (marker.atomic) reCheckSelection(cm);\r\n    }\r\n    return marker;\r\n  }\r\n\r\n  // SHARED TEXTMARKERS\r\n\r\n  function SharedTextMarker(markers, primary) {\r\n    this.markers = markers;\r\n    this.primary = primary;\r\n    for (var i = 0, me = this; i < markers.length; ++i) {\r\n      markers[i].parent = this;\r\n      on(markers[i], \"clear\", function(){me.clear();});\r\n    }\r\n  }\r\n  CodeMirror.SharedTextMarker = SharedTextMarker;\r\n\r\n  SharedTextMarker.prototype.clear = function() {\r\n    if (this.explicitlyCleared) return;\r\n    this.explicitlyCleared = true;\r\n    for (var i = 0; i < this.markers.length; ++i)\r\n      this.markers[i].clear();\r\n    signalLater(this, \"clear\");\r\n  };\r\n  SharedTextMarker.prototype.find = function() {\r\n    return this.primary.find();\r\n  };\r\n\r\n  function markTextShared(doc, from, to, options, type) {\r\n    options = copyObj(options);\r\n    options.shared = false;\r\n    var markers = [markText(doc, from, to, options, type)], primary = markers[0];\r\n    var widget = options.replacedWith;\r\n    linkedDocs(doc, function(doc) {\r\n      if (widget) options.replacedWith = widget.cloneNode(true);\r\n      markers.push(markText(doc, clipPos(doc, from), clipPos(doc, to), options, type));\r\n      for (var i = 0; i < doc.linked.length; ++i)\r\n        if (doc.linked[i].isParent) return;\r\n      primary = lst(markers);\r\n    });\r\n    return new SharedTextMarker(markers, primary);\r\n  }\r\n\r\n  // TEXTMARKER SPANS\r\n\r\n  function getMarkedSpanFor(spans, marker) {\r\n    if (spans) for (var i = 0; i < spans.length; ++i) {\r\n      var span = spans[i];\r\n      if (span.marker == marker) return span;\r\n    }\r\n  }\r\n  function removeMarkedSpan(spans, span) {\r\n    for (var r, i = 0; i < spans.length; ++i)\r\n      if (spans[i] != span) (r || (r = [])).push(spans[i]);\r\n    return r;\r\n  }\r\n  function addMarkedSpan(line, span) {\r\n    line.markedSpans = line.markedSpans ? line.markedSpans.concat([span]) : [span];\r\n    span.marker.attachLine(line);\r\n  }\r\n\r\n  function markedSpansBefore(old, startCh, isInsert) {\r\n    if (old) for (var i = 0, nw; i < old.length; ++i) {\r\n      var span = old[i], marker = span.marker;\r\n      var startsBefore = span.from == null || (marker.inclusiveLeft ? span.from <= startCh : span.from < startCh);\r\n      if (startsBefore || marker.type == \"bookmark\" && span.from == startCh && (!isInsert || !span.marker.insertLeft)) {\r\n        var endsAfter = span.to == null || (marker.inclusiveRight ? span.to >= startCh : span.to > startCh);\r\n        (nw || (nw = [])).push({from: span.from,\r\n                                to: endsAfter ? null : span.to,\r\n                                marker: marker});\r\n      }\r\n    }\r\n    return nw;\r\n  }\r\n\r\n  function markedSpansAfter(old, endCh, isInsert) {\r\n    if (old) for (var i = 0, nw; i < old.length; ++i) {\r\n      var span = old[i], marker = span.marker;\r\n      var endsAfter = span.to == null || (marker.inclusiveRight ? span.to >= endCh : span.to > endCh);\r\n      if (endsAfter || marker.type == \"bookmark\" && span.from == endCh && (!isInsert || span.marker.insertLeft)) {\r\n        var startsBefore = span.from == null || (marker.inclusiveLeft ? span.from <= endCh : span.from < endCh);\r\n        (nw || (nw = [])).push({from: startsBefore ? null : span.from - endCh,\r\n                                to: span.to == null ? null : span.to - endCh,\r\n                                marker: marker});\r\n      }\r\n    }\r\n    return nw;\r\n  }\r\n\r\n  function stretchSpansOverChange(doc, change) {\r\n    var oldFirst = isLine(doc, change.from.line) && getLine(doc, change.from.line).markedSpans;\r\n    var oldLast = isLine(doc, change.to.line) && getLine(doc, change.to.line).markedSpans;\r\n    if (!oldFirst && !oldLast) return null;\r\n\r\n    var startCh = change.from.ch, endCh = change.to.ch, isInsert = posEq(change.from, change.to);\r\n    // Get the spans that 'stick out' on both sides\r\n    var first = markedSpansBefore(oldFirst, startCh, isInsert);\r\n    var last = markedSpansAfter(oldLast, endCh, isInsert);\r\n\r\n    // Next, merge those two ends\r\n    var sameLine = change.text.length == 1, offset = lst(change.text).length + (sameLine ? startCh : 0);\r\n    if (first) {\r\n      // Fix up .to properties of first\r\n      for (var i = 0; i < first.length; ++i) {\r\n        var span = first[i];\r\n        if (span.to == null) {\r\n          var found = getMarkedSpanFor(last, span.marker);\r\n          if (!found) span.to = startCh;\r\n          else if (sameLine) span.to = found.to == null ? null : found.to + offset;\r\n        }\r\n      }\r\n    }\r\n    if (last) {\r\n      // Fix up .from in last (or move them into first in case of sameLine)\r\n      for (var i = 0; i < last.length; ++i) {\r\n        var span = last[i];\r\n        if (span.to != null) span.to += offset;\r\n        if (span.from == null) {\r\n          var found = getMarkedSpanFor(first, span.marker);\r\n          if (!found) {\r\n            span.from = offset;\r\n            if (sameLine) (first || (first = [])).push(span);\r\n          }\r\n        } else {\r\n          span.from += offset;\r\n          if (sameLine) (first || (first = [])).push(span);\r\n        }\r\n      }\r\n    }\r\n    if (sameLine && first) {\r\n      // Make sure we didn't create any zero-length spans\r\n      for (var i = 0; i < first.length; ++i)\r\n        if (first[i].from != null && first[i].from == first[i].to && first[i].marker.type != \"bookmark\")\r\n          first.splice(i--, 1);\r\n      if (!first.length) first = null;\r\n    }\r\n\r\n    var newMarkers = [first];\r\n    if (!sameLine) {\r\n      // Fill gap with whole-line-spans\r\n      var gap = change.text.length - 2, gapMarkers;\r\n      if (gap > 0 && first)\r\n        for (var i = 0; i < first.length; ++i)\r\n          if (first[i].to == null)\r\n            (gapMarkers || (gapMarkers = [])).push({from: null, to: null, marker: first[i].marker});\r\n      for (var i = 0; i < gap; ++i)\r\n        newMarkers.push(gapMarkers);\r\n      newMarkers.push(last);\r\n    }\r\n    return newMarkers;\r\n  }\r\n\r\n  function mergeOldSpans(doc, change) {\r\n    var old = getOldSpans(doc, change);\r\n    var stretched = stretchSpansOverChange(doc, change);\r\n    if (!old) return stretched;\r\n    if (!stretched) return old;\r\n\r\n    for (var i = 0; i < old.length; ++i) {\r\n      var oldCur = old[i], stretchCur = stretched[i];\r\n      if (oldCur && stretchCur) {\r\n        spans: for (var j = 0; j < stretchCur.length; ++j) {\r\n          var span = stretchCur[j];\r\n          for (var k = 0; k < oldCur.length; ++k)\r\n            if (oldCur[k].marker == span.marker) continue spans;\r\n          oldCur.push(span);\r\n        }\r\n      } else if (stretchCur) {\r\n        old[i] = stretchCur;\r\n      }\r\n    }\r\n    return old;\r\n  }\r\n\r\n  function removeReadOnlyRanges(doc, from, to) {\r\n    var markers = null;\r\n    doc.iter(from.line, to.line + 1, function(line) {\r\n      if (line.markedSpans) for (var i = 0; i < line.markedSpans.length; ++i) {\r\n        var mark = line.markedSpans[i].marker;\r\n        if (mark.readOnly && (!markers || indexOf(markers, mark) == -1))\r\n          (markers || (markers = [])).push(mark);\r\n      }\r\n    });\r\n    if (!markers) return null;\r\n    var parts = [{from: from, to: to}];\r\n    for (var i = 0; i < markers.length; ++i) {\r\n      var mk = markers[i], m = mk.find();\r\n      for (var j = 0; j < parts.length; ++j) {\r\n        var p = parts[j];\r\n        if (posLess(p.to, m.from) || posLess(m.to, p.from)) continue;\r\n        var newParts = [j, 1];\r\n        if (posLess(p.from, m.from) || !mk.inclusiveLeft && posEq(p.from, m.from))\r\n          newParts.push({from: p.from, to: m.from});\r\n        if (posLess(m.to, p.to) || !mk.inclusiveRight && posEq(p.to, m.to))\r\n          newParts.push({from: m.to, to: p.to});\r\n        parts.splice.apply(parts, newParts);\r\n        j += newParts.length - 1;\r\n      }\r\n    }\r\n    return parts;\r\n  }\r\n\r\n  function collapsedSpanAt(line, ch) {\r\n    var sps = sawCollapsedSpans && line.markedSpans, found;\r\n    if (sps) for (var sp, i = 0; i < sps.length; ++i) {\r\n      sp = sps[i];\r\n      if (!sp.marker.collapsed) continue;\r\n      if ((sp.from == null || sp.from < ch) &&\r\n          (sp.to == null || sp.to > ch) &&\r\n          (!found || found.width < sp.marker.width))\r\n        found = sp.marker;\r\n    }\r\n    return found;\r\n  }\r\n  function collapsedSpanAtStart(line) { return collapsedSpanAt(line, -1); }\r\n  function collapsedSpanAtEnd(line) { return collapsedSpanAt(line, line.text.length + 1); }\r\n\r\n  function visualLine(doc, line) {\r\n    var merged;\r\n    while (merged = collapsedSpanAtStart(line))\r\n      line = getLine(doc, merged.find().from.line);\r\n    return line;\r\n  }\r\n\r\n  function lineIsHidden(doc, line) {\r\n    var sps = sawCollapsedSpans && line.markedSpans;\r\n    if (sps) for (var sp, i = 0; i < sps.length; ++i) {\r\n      sp = sps[i];\r\n      if (!sp.marker.collapsed) continue;\r\n      if (sp.from == null) return true;\r\n      if (sp.marker.replacedWith) continue;\r\n      if (sp.from == 0 && sp.marker.inclusiveLeft && lineIsHiddenInner(doc, line, sp))\r\n        return true;\r\n    }\r\n  }\r\n  function lineIsHiddenInner(doc, line, span) {\r\n    if (span.to == null) {\r\n      var end = span.marker.find().to, endLine = getLine(doc, end.line);\r\n      return lineIsHiddenInner(doc, endLine, getMarkedSpanFor(endLine.markedSpans, span.marker));\r\n    }\r\n    if (span.marker.inclusiveRight && span.to == line.text.length)\r\n      return true;\r\n    for (var sp, i = 0; i < line.markedSpans.length; ++i) {\r\n      sp = line.markedSpans[i];\r\n      if (sp.marker.collapsed && !sp.marker.replacedWith && sp.from == span.to &&\r\n          (sp.marker.inclusiveLeft || span.marker.inclusiveRight) &&\r\n          lineIsHiddenInner(doc, line, sp)) return true;\r\n    }\r\n  }\r\n\r\n  function detachMarkedSpans(line) {\r\n    var spans = line.markedSpans;\r\n    if (!spans) return;\r\n    for (var i = 0; i < spans.length; ++i)\r\n      spans[i].marker.detachLine(line);\r\n    line.markedSpans = null;\r\n  }\r\n\r\n  function attachMarkedSpans(line, spans) {\r\n    if (!spans) return;\r\n    for (var i = 0; i < spans.length; ++i)\r\n      spans[i].marker.attachLine(line);\r\n    line.markedSpans = spans;\r\n  }\r\n\r\n  // LINE WIDGETS\r\n\r\n  var LineWidget = CodeMirror.LineWidget = function(cm, node, options) {\r\n    for (var opt in options) if (options.hasOwnProperty(opt))\r\n      this[opt] = options[opt];\r\n    this.cm = cm;\r\n    this.node = node;\r\n  };\r\n  function widgetOperation(f) {\r\n    return function() {\r\n      var withOp = !this.cm.curOp;\r\n      if (withOp) startOperation(this.cm);\r\n      try {var result = f.apply(this, arguments);}\r\n      finally {if (withOp) endOperation(this.cm);}\r\n      return result;\r\n    };\r\n  }\r\n  LineWidget.prototype.clear = widgetOperation(function() {\r\n    var ws = this.line.widgets, no = lineNo(this.line);\r\n    if (no == null || !ws) return;\r\n    for (var i = 0; i < ws.length; ++i) if (ws[i] == this) ws.splice(i--, 1);\r\n    if (!ws.length) this.line.widgets = null;\r\n    updateLineHeight(this.line, Math.max(0, this.line.height - widgetHeight(this)));\r\n    regChange(this.cm, no, no + 1);\r\n  });\r\n  LineWidget.prototype.changed = widgetOperation(function() {\r\n    var oldH = this.height;\r\n    this.height = null;\r\n    var diff = widgetHeight(this) - oldH;\r\n    if (!diff) return;\r\n    updateLineHeight(this.line, this.line.height + diff);\r\n    var no = lineNo(this.line);\r\n    regChange(this.cm, no, no + 1);\r\n  });\r\n\r\n  function widgetHeight(widget) {\r\n    if (widget.height != null) return widget.height;\r\n    if (!widget.node.parentNode || widget.node.parentNode.nodeType != 1)\r\n      removeChildrenAndAdd(widget.cm.display.measure, elt(\"div\", [widget.node], null, \"position: relative\"));\r\n    return widget.height = widget.node.offsetHeight;\r\n  }\r\n\r\n  function addLineWidget(cm, handle, node, options) {\r\n    var widget = new LineWidget(cm, node, options);\r\n    if (widget.noHScroll) cm.display.alignWidgets = true;\r\n    changeLine(cm, handle, function(line) {\r\n      (line.widgets || (line.widgets = [])).push(widget);\r\n      widget.line = line;\r\n      if (!lineIsHidden(cm.doc, line) || widget.showIfHidden) {\r\n        var aboveVisible = heightAtLine(cm, line) < cm.display.scroller.scrollTop;\r\n        updateLineHeight(line, line.height + widgetHeight(widget));\r\n        if (aboveVisible) addToScrollPos(cm, 0, widget.height);\r\n      }\r\n      return true;\r\n    });\r\n    return widget;\r\n  }\r\n\r\n  // LINE DATA STRUCTURE\r\n\r\n  // Line objects. These hold state related to a line, including\r\n  // highlighting info (the styles array).\r\n  function makeLine(text, markedSpans, estimateHeight) {\r\n    var line = {text: text};\r\n    attachMarkedSpans(line, markedSpans);\r\n    line.height = estimateHeight ? estimateHeight(line) : 1;\r\n    return line;\r\n  }\r\n\r\n  function updateLine(line, text, markedSpans, estimateHeight) {\r\n    line.text = text;\r\n    if (line.stateAfter) line.stateAfter = null;\r\n    if (line.styles) line.styles = null;\r\n    if (line.order != null) line.order = null;\r\n    detachMarkedSpans(line);\r\n    attachMarkedSpans(line, markedSpans);\r\n    var estHeight = estimateHeight ? estimateHeight(line) : 1;\r\n    if (estHeight != line.height) updateLineHeight(line, estHeight);\r\n  }\r\n\r\n  function cleanUpLine(line) {\r\n    line.parent = null;\r\n    detachMarkedSpans(line);\r\n  }\r\n\r\n  // Run the given mode's parser over a line, update the styles\r\n  // array, which contains alternating fragments of text and CSS\r\n  // classes.\r\n  function runMode(cm, text, mode, state, f) {\r\n    var flattenSpans = mode.flattenSpans;\r\n    if (flattenSpans == null) flattenSpans = cm.options.flattenSpans;\r\n    var curStart = 0, curStyle = null;\r\n    var stream = new StringStream(text, cm.options.tabSize), style;\r\n    if (text == \"\" && mode.blankLine) mode.blankLine(state);\r\n    while (!stream.eol()) {\r\n      if (stream.pos > cm.options.maxHighlightLength) {\r\n        flattenSpans = false;\r\n        // Webkit seems to refuse to render text nodes longer than 57444 characters\r\n        stream.pos = Math.min(text.length, stream.start + 50000);\r\n        style = null;\r\n      } else {\r\n        style = mode.token(stream, state);\r\n      }\r\n      if (!flattenSpans || curStyle != style) {\r\n        if (curStart < stream.start) f(stream.start, curStyle);\r\n        curStart = stream.start; curStyle = style;\r\n      }\r\n      stream.start = stream.pos;\r\n    }\r\n    if (curStart < stream.pos) f(stream.pos, curStyle);\r\n  }\r\n\r\n  function highlightLine(cm, line, state) {\r\n    // A styles array always starts with a number identifying the\r\n    // mode/overlays that it is based on (for easy invalidation).\r\n    var st = [cm.state.modeGen];\r\n    // Compute the base array of styles\r\n    runMode(cm, line.text, cm.doc.mode, state, function(end, style) {st.push(end, style);});\r\n\r\n    // Run overlays, adjust style array.\r\n    for (var o = 0; o < cm.state.overlays.length; ++o) {\r\n      var overlay = cm.state.overlays[o], i = 1, at = 0;\r\n      runMode(cm, line.text, overlay.mode, true, function(end, style) {\r\n        var start = i;\r\n        // Ensure there's a token end at the current position, and that i points at it\r\n        while (at < end) {\r\n          var i_end = st[i];\r\n          if (i_end > end)\r\n            st.splice(i, 1, end, st[i+1], i_end);\r\n          i += 2;\r\n          at = Math.min(end, i_end);\r\n        }\r\n        if (!style) return;\r\n        if (overlay.opaque) {\r\n          st.splice(start, i - start, end, style);\r\n          i = start + 2;\r\n        } else {\r\n          for (; start < i; start += 2) {\r\n            var cur = st[start+1];\r\n            st[start+1] = cur ? cur + \" \" + style : style;\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    return st;\r\n  }\r\n\r\n  function getLineStyles(cm, line) {\r\n    if (!line.styles || line.styles[0] != cm.state.modeGen)\r\n      line.styles = highlightLine(cm, line, line.stateAfter = getStateBefore(cm, lineNo(line)));\r\n    return line.styles;\r\n  }\r\n\r\n  // Lightweight form of highlight -- proceed over this line and\r\n  // update state, but don't save a style array.\r\n  function processLine(cm, line, state) {\r\n    var mode = cm.doc.mode;\r\n    var stream = new StringStream(line.text, cm.options.tabSize);\r\n    if (line.text == \"\" && mode.blankLine) mode.blankLine(state);\r\n    while (!stream.eol() && stream.pos <= cm.options.maxHighlightLength) {\r\n      mode.token(stream, state);\r\n      stream.start = stream.pos;\r\n    }\r\n  }\r\n\r\n  var styleToClassCache = {};\r\n  function styleToClass(style) {\r\n    if (!style) return null;\r\n    return styleToClassCache[style] ||\r\n      (styleToClassCache[style] = \"cm-\" + style.replace(/ +/g, \" cm-\"));\r\n  }\r\n\r\n  function lineContent(cm, realLine, measure) {\r\n    var merged, line = realLine, empty = true;\r\n    while (merged = collapsedSpanAtStart(line))\r\n      line = getLine(cm.doc, merged.find().from.line);\r\n\r\n    var builder = {pre: elt(\"pre\"), col: 0, pos: 0, display: !measure,\r\n                   measure: null, measuredSomething: false, cm: cm};\r\n    if (line.textClass) builder.pre.className = line.textClass;\r\n\r\n    do {\r\n      if (line.text) empty = false;\r\n      builder.measure = line == realLine && measure;\r\n      builder.pos = 0;\r\n      builder.addToken = builder.measure ? buildTokenMeasure : buildToken;\r\n      if ((ie || webkit) && cm.getOption(\"lineWrapping\"))\r\n        builder.addToken = buildTokenSplitSpaces(builder.addToken);\r\n      var next = insertLineContent(line, builder, getLineStyles(cm, line));\r\n      if (measure && line == realLine && !builder.measuredSomething) {\r\n        measure[0] = builder.pre.appendChild(zeroWidthElement(cm.display.measure));\r\n        builder.measuredSomething = true;\r\n      }\r\n      if (next) line = getLine(cm.doc, next.to.line);\r\n    } while (next);\r\n\r\n    if (measure && !builder.measuredSomething && !measure[0])\r\n      measure[0] = builder.pre.appendChild(empty ? elt(\"span\", \"\\u00a0\") : zeroWidthElement(cm.display.measure));\r\n    if (!builder.pre.firstChild && !lineIsHidden(cm.doc, realLine))\r\n      builder.pre.appendChild(document.createTextNode(\"\\u00a0\"));\r\n\r\n    var order;\r\n    // Work around problem with the reported dimensions of single-char\r\n    // direction spans on IE (issue #1129). See also the comment in\r\n    // cursorCoords.\r\n    if (measure && ie && (order = getOrder(line))) {\r\n      var l = order.length - 1;\r\n      if (order[l].from == order[l].to) --l;\r\n      var last = order[l], prev = order[l - 1];\r\n      if (last.from + 1 == last.to && prev && last.level < prev.level) {\r\n        var span = measure[builder.pos - 1];\r\n        if (span) span.parentNode.insertBefore(span.measureRight = zeroWidthElement(cm.display.measure),\r\n                                               span.nextSibling);\r\n      }\r\n    }\r\n\r\n    signal(cm, \"renderLine\", cm, realLine, builder.pre);\r\n    return builder.pre;\r\n  }\r\n\r\n  var tokenSpecialChars = /[\\t\\u0000-\\u0019\\u00ad\\u200b\\u2028\\u2029\\uFEFF]/g;\r\n  function buildToken(builder, text, style, startStyle, endStyle) {\r\n    if (!text) return;\r\n    if (!tokenSpecialChars.test(text)) {\r\n      builder.col += text.length;\r\n      var content = document.createTextNode(text);\r\n    } else {\r\n      var content = document.createDocumentFragment(), pos = 0;\r\n      while (true) {\r\n        tokenSpecialChars.lastIndex = pos;\r\n        var m = tokenSpecialChars.exec(text);\r\n        var skipped = m ? m.index - pos : text.length - pos;\r\n        if (skipped) {\r\n          content.appendChild(document.createTextNode(text.slice(pos, pos + skipped)));\r\n          builder.col += skipped;\r\n        }\r\n        if (!m) break;\r\n        pos += skipped + 1;\r\n        if (m[0] == \"\\t\") {\r\n          var tabSize = builder.cm.options.tabSize, tabWidth = tabSize - builder.col % tabSize;\r\n          content.appendChild(elt(\"span\", spaceStr(tabWidth), \"cm-tab\"));\r\n          builder.col += tabWidth;\r\n        } else {\r\n          var token = elt(\"span\", \"\\u2022\", \"cm-invalidchar\");\r\n          token.title = \"\\\\u\" + m[0].charCodeAt(0).toString(16);\r\n          content.appendChild(token);\r\n          builder.col += 1;\r\n        }\r\n      }\r\n    }\r\n    if (style || startStyle || endStyle || builder.measure) {\r\n      var fullStyle = style || \"\";\r\n      if (startStyle) fullStyle += startStyle;\r\n      if (endStyle) fullStyle += endStyle;\r\n      return builder.pre.appendChild(elt(\"span\", [content], fullStyle));\r\n    }\r\n    builder.pre.appendChild(content);\r\n  }\r\n\r\n  function buildTokenMeasure(builder, text, style, startStyle, endStyle) {\r\n    var wrapping = builder.cm.options.lineWrapping;\r\n    for (var i = 0; i < text.length; ++i) {\r\n      var ch = text.charAt(i), start = i == 0;\r\n      if (ch >= \"\\ud800\" && ch < \"\\udbff\" && i < text.length - 1) {\r\n        ch = text.slice(i, i + 2);\r\n        ++i;\r\n      } else if (i && wrapping && spanAffectsWrapping(text, i)) {\r\n        builder.pre.appendChild(elt(\"wbr\"));\r\n      }\r\n      var span = builder.measure[builder.pos] =\r\n        buildToken(builder, ch, style,\r\n                   start && startStyle, i == text.length - 1 && endStyle);\r\n      // In IE single-space nodes wrap differently than spaces\r\n      // embedded in larger text nodes, except when set to\r\n      // white-space: normal (issue #1268).\r\n      if (ie && wrapping && ch == \" \" && i && !/\\s/.test(text.charAt(i - 1)) &&\r\n          i < text.length - 1 && !/\\s/.test(text.charAt(i + 1)))\r\n        span.style.whiteSpace = \"normal\";\r\n      builder.pos += ch.length;\r\n    }\r\n    if (text.length) builder.measuredSomething = true;\r\n  }\r\n\r\n  function buildTokenSplitSpaces(inner) {\r\n    function split(old) {\r\n      var out = \" \";\r\n      for (var i = 0; i < old.length - 2; ++i) out += i % 2 ? \" \" : \"\\u00a0\";\r\n      out += \" \";\r\n      return out;\r\n    }\r\n    return function(builder, text, style, startStyle, endStyle) {\r\n      return inner(builder, text.replace(/ {3,}/, split), style, startStyle, endStyle);\r\n    };\r\n  }\r\n\r\n  function buildCollapsedSpan(builder, size, widget) {\r\n    if (widget) {\r\n      if (!builder.display) widget = widget.cloneNode(true);\r\n      if (builder.measure) {\r\n        builder.measure[builder.pos] = size ? widget\r\n          : builder.pre.appendChild(zeroWidthElement(builder.cm.display.measure));\r\n        builder.measuredSomething = true;\r\n      }\r\n      builder.pre.appendChild(widget);\r\n    }\r\n    builder.pos += size;\r\n  }\r\n\r\n  // Outputs a number of spans to make up a line, taking highlighting\r\n  // and marked text into account.\r\n  function insertLineContent(line, builder, styles) {\r\n    var spans = line.markedSpans, allText = line.text, at = 0;\r\n    if (!spans) {\r\n      for (var i = 1; i < styles.length; i+=2)\r\n        builder.addToken(builder, allText.slice(at, at = styles[i]), styleToClass(styles[i+1]));\r\n      return;\r\n    }\r\n\r\n    var len = allText.length, pos = 0, i = 1, text = \"\", style;\r\n    var nextChange = 0, spanStyle, spanEndStyle, spanStartStyle, collapsed;\r\n    for (;;) {\r\n      if (nextChange == pos) { // Update current marker set\r\n        spanStyle = spanEndStyle = spanStartStyle = \"\";\r\n        collapsed = null; nextChange = Infinity;\r\n        var foundBookmark = null;\r\n        for (var j = 0; j < spans.length; ++j) {\r\n          var sp = spans[j], m = sp.marker;\r\n          if (sp.from <= pos && (sp.to == null || sp.to > pos)) {\r\n            if (sp.to != null && nextChange > sp.to) { nextChange = sp.to; spanEndStyle = \"\"; }\r\n            if (m.className) spanStyle += \" \" + m.className;\r\n            if (m.startStyle && sp.from == pos) spanStartStyle += \" \" + m.startStyle;\r\n            if (m.endStyle && sp.to == nextChange) spanEndStyle += \" \" + m.endStyle;\r\n            if (m.collapsed && (!collapsed || collapsed.marker.size < m.size))\r\n              collapsed = sp;\r\n          } else if (sp.from > pos && nextChange > sp.from) {\r\n            nextChange = sp.from;\r\n          }\r\n          if (m.type == \"bookmark\" && sp.from == pos && m.replacedWith)\r\n            foundBookmark = m.replacedWith;\r\n        }\r\n        if (collapsed && (collapsed.from || 0) == pos) {\r\n          buildCollapsedSpan(builder, (collapsed.to == null ? len : collapsed.to) - pos,\r\n                             collapsed.from != null && collapsed.marker.replacedWith);\r\n          if (collapsed.to == null) return collapsed.marker.find();\r\n        }\r\n        if (foundBookmark && !collapsed) buildCollapsedSpan(builder, 0, foundBookmark);\r\n      }\r\n      if (pos >= len) break;\r\n\r\n      var upto = Math.min(len, nextChange);\r\n      while (true) {\r\n        if (text) {\r\n          var end = pos + text.length;\r\n          if (!collapsed) {\r\n            var tokenText = end > upto ? text.slice(0, upto - pos) : text;\r\n            builder.addToken(builder, tokenText, style ? style + spanStyle : spanStyle,\r\n                             spanStartStyle, pos + tokenText.length == nextChange ? spanEndStyle : \"\");\r\n          }\r\n          if (end >= upto) {text = text.slice(upto - pos); pos = upto; break;}\r\n          pos = end;\r\n          spanStartStyle = \"\";\r\n        }\r\n        text = allText.slice(at, at = styles[i++]);\r\n        style = styleToClass(styles[i++]);\r\n      }\r\n    }\r\n  }\r\n\r\n  // DOCUMENT DATA STRUCTURE\r\n\r\n  function updateDoc(doc, change, markedSpans, selAfter, estimateHeight) {\r\n    function spansFor(n) {return markedSpans ? markedSpans[n] : null;}\r\n    function update(line, text, spans) {\r\n      updateLine(line, text, spans, estimateHeight);\r\n      signalLater(line, \"change\", line, change);\r\n    }\r\n\r\n    var from = change.from, to = change.to, text = change.text;\r\n    var firstLine = getLine(doc, from.line), lastLine = getLine(doc, to.line);\r\n    var lastText = lst(text), lastSpans = spansFor(text.length - 1), nlines = to.line - from.line;\r\n\r\n    // First adjust the line structure\r\n    if (from.ch == 0 && to.ch == 0 && lastText == \"\") {\r\n      // This is a whole-line replace. Treated specially to make\r\n      // sure line objects move the way they are supposed to.\r\n      for (var i = 0, e = text.length - 1, added = []; i < e; ++i)\r\n        added.push(makeLine(text[i], spansFor(i), estimateHeight));\r\n      update(lastLine, lastLine.text, lastSpans);\r\n      if (nlines) doc.remove(from.line, nlines);\r\n      if (added.length) doc.insert(from.line, added);\r\n    } else if (firstLine == lastLine) {\r\n      if (text.length == 1) {\r\n        update(firstLine, firstLine.text.slice(0, from.ch) + lastText + firstLine.text.slice(to.ch), lastSpans);\r\n      } else {\r\n        for (var added = [], i = 1, e = text.length - 1; i < e; ++i)\r\n          added.push(makeLine(text[i], spansFor(i), estimateHeight));\r\n        added.push(makeLine(lastText + firstLine.text.slice(to.ch), lastSpans, estimateHeight));\r\n        update(firstLine, firstLine.text.slice(0, from.ch) + text[0], spansFor(0));\r\n        doc.insert(from.line + 1, added);\r\n      }\r\n    } else if (text.length == 1) {\r\n      update(firstLine, firstLine.text.slice(0, from.ch) + text[0] + lastLine.text.slice(to.ch), spansFor(0));\r\n      doc.remove(from.line + 1, nlines);\r\n    } else {\r\n      update(firstLine, firstLine.text.slice(0, from.ch) + text[0], spansFor(0));\r\n      update(lastLine, lastText + lastLine.text.slice(to.ch), lastSpans);\r\n      for (var i = 1, e = text.length - 1, added = []; i < e; ++i)\r\n        added.push(makeLine(text[i], spansFor(i), estimateHeight));\r\n      if (nlines > 1) doc.remove(from.line + 1, nlines - 1);\r\n      doc.insert(from.line + 1, added);\r\n    }\r\n\r\n    signalLater(doc, \"change\", doc, change);\r\n    setSelection(doc, selAfter.anchor, selAfter.head, null, true);\r\n  }\r\n\r\n  function LeafChunk(lines) {\r\n    this.lines = lines;\r\n    this.parent = null;\r\n    for (var i = 0, e = lines.length, height = 0; i < e; ++i) {\r\n      lines[i].parent = this;\r\n      height += lines[i].height;\r\n    }\r\n    this.height = height;\r\n  }\r\n\r\n  LeafChunk.prototype = {\r\n    chunkSize: function() { return this.lines.length; },\r\n    removeInner: function(at, n) {\r\n      for (var i = at, e = at + n; i < e; ++i) {\r\n        var line = this.lines[i];\r\n        this.height -= line.height;\r\n        cleanUpLine(line);\r\n        signalLater(line, \"delete\");\r\n      }\r\n      this.lines.splice(at, n);\r\n    },\r\n    collapse: function(lines) {\r\n      lines.splice.apply(lines, [lines.length, 0].concat(this.lines));\r\n    },\r\n    insertInner: function(at, lines, height) {\r\n      this.height += height;\r\n      this.lines = this.lines.slice(0, at).concat(lines).concat(this.lines.slice(at));\r\n      for (var i = 0, e = lines.length; i < e; ++i) lines[i].parent = this;\r\n    },\r\n    iterN: function(at, n, op) {\r\n      for (var e = at + n; at < e; ++at)\r\n        if (op(this.lines[at])) return true;\r\n    }\r\n  };\r\n\r\n  function BranchChunk(children) {\r\n    this.children = children;\r\n    var size = 0, height = 0;\r\n    for (var i = 0, e = children.length; i < e; ++i) {\r\n      var ch = children[i];\r\n      size += ch.chunkSize(); height += ch.height;\r\n      ch.parent = this;\r\n    }\r\n    this.size = size;\r\n    this.height = height;\r\n    this.parent = null;\r\n  }\r\n\r\n  BranchChunk.prototype = {\r\n    chunkSize: function() { return this.size; },\r\n    removeInner: function(at, n) {\r\n      this.size -= n;\r\n      for (var i = 0; i < this.children.length; ++i) {\r\n        var child = this.children[i], sz = child.chunkSize();\r\n        if (at < sz) {\r\n          var rm = Math.min(n, sz - at), oldHeight = child.height;\r\n          child.removeInner(at, rm);\r\n          this.height -= oldHeight - child.height;\r\n          if (sz == rm) { this.children.splice(i--, 1); child.parent = null; }\r\n          if ((n -= rm) == 0) break;\r\n          at = 0;\r\n        } else at -= sz;\r\n      }\r\n      if (this.size - n < 25) {\r\n        var lines = [];\r\n        this.collapse(lines);\r\n        this.children = [new LeafChunk(lines)];\r\n        this.children[0].parent = this;\r\n      }\r\n    },\r\n    collapse: function(lines) {\r\n      for (var i = 0, e = this.children.length; i < e; ++i) this.children[i].collapse(lines);\r\n    },\r\n    insertInner: function(at, lines, height) {\r\n      this.size += lines.length;\r\n      this.height += height;\r\n      for (var i = 0, e = this.children.length; i < e; ++i) {\r\n        var child = this.children[i], sz = child.chunkSize();\r\n        if (at <= sz) {\r\n          child.insertInner(at, lines, height);\r\n          if (child.lines && child.lines.length > 50) {\r\n            while (child.lines.length > 50) {\r\n              var spilled = child.lines.splice(child.lines.length - 25, 25);\r\n              var newleaf = new LeafChunk(spilled);\r\n              child.height -= newleaf.height;\r\n              this.children.splice(i + 1, 0, newleaf);\r\n              newleaf.parent = this;\r\n            }\r\n            this.maybeSpill();\r\n          }\r\n          break;\r\n        }\r\n        at -= sz;\r\n      }\r\n    },\r\n    maybeSpill: function() {\r\n      if (this.children.length <= 10) return;\r\n      var me = this;\r\n      do {\r\n        var spilled = me.children.splice(me.children.length - 5, 5);\r\n        var sibling = new BranchChunk(spilled);\r\n        if (!me.parent) { // Become the parent node\r\n          var copy = new BranchChunk(me.children);\r\n          copy.parent = me;\r\n          me.children = [copy, sibling];\r\n          me = copy;\r\n        } else {\r\n          me.size -= sibling.size;\r\n          me.height -= sibling.height;\r\n          var myIndex = indexOf(me.parent.children, me);\r\n          me.parent.children.splice(myIndex + 1, 0, sibling);\r\n        }\r\n        sibling.parent = me.parent;\r\n      } while (me.children.length > 10);\r\n      me.parent.maybeSpill();\r\n    },\r\n    iterN: function(at, n, op) {\r\n      for (var i = 0, e = this.children.length; i < e; ++i) {\r\n        var child = this.children[i], sz = child.chunkSize();\r\n        if (at < sz) {\r\n          var used = Math.min(n, sz - at);\r\n          if (child.iterN(at, used, op)) return true;\r\n          if ((n -= used) == 0) break;\r\n          at = 0;\r\n        } else at -= sz;\r\n      }\r\n    }\r\n  };\r\n\r\n  var nextDocId = 0;\r\n  var Doc = CodeMirror.Doc = function(text, mode, firstLine) {\r\n    if (!(this instanceof Doc)) return new Doc(text, mode, firstLine);\r\n    if (firstLine == null) firstLine = 0;\r\n\r\n    BranchChunk.call(this, [new LeafChunk([makeLine(\"\", null)])]);\r\n    this.first = firstLine;\r\n    this.scrollTop = this.scrollLeft = 0;\r\n    this.cantEdit = false;\r\n    this.history = makeHistory();\r\n    this.cleanGeneration = 1;\r\n    this.frontier = firstLine;\r\n    var start = Pos(firstLine, 0);\r\n    this.sel = {from: start, to: start, head: start, anchor: start, shift: false, extend: false, goalColumn: null};\r\n    this.id = ++nextDocId;\r\n    this.modeOption = mode;\r\n\r\n    if (typeof text == \"string\") text = splitLines(text);\r\n    updateDoc(this, {from: start, to: start, text: text}, null, {head: start, anchor: start});\r\n  };\r\n\r\n  Doc.prototype = createObj(BranchChunk.prototype, {\r\n    constructor: Doc,\r\n    iter: function(from, to, op) {\r\n      if (op) this.iterN(from - this.first, to - from, op);\r\n      else this.iterN(this.first, this.first + this.size, from);\r\n    },\r\n\r\n    insert: function(at, lines) {\r\n      var height = 0;\r\n      for (var i = 0, e = lines.length; i < e; ++i) height += lines[i].height;\r\n      this.insertInner(at - this.first, lines, height);\r\n    },\r\n    remove: function(at, n) { this.removeInner(at - this.first, n); },\r\n\r\n    getValue: function(lineSep) {\r\n      var lines = getLines(this, this.first, this.first + this.size);\r\n      if (lineSep === false) return lines;\r\n      return lines.join(lineSep || \"\\n\");\r\n    },\r\n    setValue: function(code) {\r\n      var top = Pos(this.first, 0), last = this.first + this.size - 1;\r\n      makeChange(this, {from: top, to: Pos(last, getLine(this, last).text.length),\r\n                        text: splitLines(code), origin: \"setValue\"},\r\n                 {head: top, anchor: top}, true);\r\n    },\r\n    replaceRange: function(code, from, to, origin) {\r\n      from = clipPos(this, from);\r\n      to = to ? clipPos(this, to) : from;\r\n      replaceRange(this, code, from, to, origin);\r\n    },\r\n    getRange: function(from, to, lineSep) {\r\n      var lines = getBetween(this, clipPos(this, from), clipPos(this, to));\r\n      if (lineSep === false) return lines;\r\n      return lines.join(lineSep || \"\\n\");\r\n    },\r\n\r\n    getLine: function(line) {var l = this.getLineHandle(line); return l && l.text;},\r\n    setLine: function(line, text) {\r\n      if (isLine(this, line))\r\n        replaceRange(this, text, Pos(line, 0), clipPos(this, Pos(line)));\r\n    },\r\n    removeLine: function(line) {\r\n      if (line) replaceRange(this, \"\", clipPos(this, Pos(line - 1)), clipPos(this, Pos(line)));\r\n      else replaceRange(this, \"\", Pos(0, 0), clipPos(this, Pos(1, 0)));\r\n    },\r\n\r\n    getLineHandle: function(line) {if (isLine(this, line)) return getLine(this, line);},\r\n    getLineNumber: function(line) {return lineNo(line);},\r\n\r\n    lineCount: function() {return this.size;},\r\n    firstLine: function() {return this.first;},\r\n    lastLine: function() {return this.first + this.size - 1;},\r\n\r\n    clipPos: function(pos) {return clipPos(this, pos);},\r\n\r\n    getCursor: function(start) {\r\n      var sel = this.sel, pos;\r\n      if (start == null || start == \"head\") pos = sel.head;\r\n      else if (start == \"anchor\") pos = sel.anchor;\r\n      else if (start == \"end\" || start === false) pos = sel.to;\r\n      else pos = sel.from;\r\n      return copyPos(pos);\r\n    },\r\n    somethingSelected: function() {return !posEq(this.sel.head, this.sel.anchor);},\r\n\r\n    setCursor: docOperation(function(line, ch, extend) {\r\n      var pos = clipPos(this, typeof line == \"number\" ? Pos(line, ch || 0) : line);\r\n      if (extend) extendSelection(this, pos);\r\n      else setSelection(this, pos, pos);\r\n    }),\r\n    setSelection: docOperation(function(anchor, head) {\r\n      setSelection(this, clipPos(this, anchor), clipPos(this, head || anchor));\r\n    }),\r\n    extendSelection: docOperation(function(from, to) {\r\n      extendSelection(this, clipPos(this, from), to && clipPos(this, to));\r\n    }),\r\n\r\n    getSelection: function(lineSep) {return this.getRange(this.sel.from, this.sel.to, lineSep);},\r\n    replaceSelection: function(code, collapse, origin) {\r\n      makeChange(this, {from: this.sel.from, to: this.sel.to, text: splitLines(code), origin: origin}, collapse || \"around\");\r\n    },\r\n    undo: docOperation(function() {makeChangeFromHistory(this, \"undo\");}),\r\n    redo: docOperation(function() {makeChangeFromHistory(this, \"redo\");}),\r\n\r\n    setExtending: function(val) {this.sel.extend = val;},\r\n\r\n    historySize: function() {\r\n      var hist = this.history;\r\n      return {undo: hist.done.length, redo: hist.undone.length};\r\n    },\r\n    clearHistory: function() {this.history = makeHistory(this.history.maxGeneration);},\r\n\r\n    markClean: function() {\r\n      this.cleanGeneration = this.changeGeneration();\r\n    },\r\n    changeGeneration: function() {\r\n      this.history.lastOp = this.history.lastOrigin = null;\r\n      return this.history.generation;\r\n    },\r\n    isClean: function (gen) {\r\n      return this.history.generation == (gen || this.cleanGeneration);\r\n    },\r\n\r\n    getHistory: function() {\r\n      return {done: copyHistoryArray(this.history.done),\r\n              undone: copyHistoryArray(this.history.undone)};\r\n    },\r\n    setHistory: function(histData) {\r\n      var hist = this.history = makeHistory(this.history.maxGeneration);\r\n      hist.done = histData.done.slice(0);\r\n      hist.undone = histData.undone.slice(0);\r\n    },\r\n\r\n    markText: function(from, to, options) {\r\n      return markText(this, clipPos(this, from), clipPos(this, to), options, \"range\");\r\n    },\r\n    setBookmark: function(pos, options) {\r\n      var realOpts = {replacedWith: options && (options.nodeType == null ? options.widget : options),\r\n                      insertLeft: options && options.insertLeft};\r\n      pos = clipPos(this, pos);\r\n      return markText(this, pos, pos, realOpts, \"bookmark\");\r\n    },\r\n    findMarksAt: function(pos) {\r\n      pos = clipPos(this, pos);\r\n      var markers = [], spans = getLine(this, pos.line).markedSpans;\r\n      if (spans) for (var i = 0; i < spans.length; ++i) {\r\n        var span = spans[i];\r\n        if ((span.from == null || span.from <= pos.ch) &&\r\n            (span.to == null || span.to >= pos.ch))\r\n          markers.push(span.marker.parent || span.marker);\r\n      }\r\n      return markers;\r\n    },\r\n    getAllMarks: function() {\r\n      var markers = [];\r\n      this.iter(function(line) {\r\n        var sps = line.markedSpans;\r\n        if (sps) for (var i = 0; i < sps.length; ++i)\r\n          if (sps[i].from != null) markers.push(sps[i].marker);\r\n      });\r\n      return markers;\r\n    },\r\n\r\n    posFromIndex: function(off) {\r\n      var ch, lineNo = this.first;\r\n      this.iter(function(line) {\r\n        var sz = line.text.length + 1;\r\n        if (sz > off) { ch = off; return true; }\r\n        off -= sz;\r\n        ++lineNo;\r\n      });\r\n      return clipPos(this, Pos(lineNo, ch));\r\n    },\r\n    indexFromPos: function (coords) {\r\n      coords = clipPos(this, coords);\r\n      var index = coords.ch;\r\n      if (coords.line < this.first || coords.ch < 0) return 0;\r\n      this.iter(this.first, coords.line, function (line) {\r\n        index += line.text.length + 1;\r\n      });\r\n      return index;\r\n    },\r\n\r\n    copy: function(copyHistory) {\r\n      var doc = new Doc(getLines(this, this.first, this.first + this.size), this.modeOption, this.first);\r\n      doc.scrollTop = this.scrollTop; doc.scrollLeft = this.scrollLeft;\r\n      doc.sel = {from: this.sel.from, to: this.sel.to, head: this.sel.head, anchor: this.sel.anchor,\r\n                 shift: this.sel.shift, extend: false, goalColumn: this.sel.goalColumn};\r\n      if (copyHistory) {\r\n        doc.history.undoDepth = this.history.undoDepth;\r\n        doc.setHistory(this.getHistory());\r\n      }\r\n      return doc;\r\n    },\r\n\r\n    linkedDoc: function(options) {\r\n      if (!options) options = {};\r\n      var from = this.first, to = this.first + this.size;\r\n      if (options.from != null && options.from > from) from = options.from;\r\n      if (options.to != null && options.to < to) to = options.to;\r\n      var copy = new Doc(getLines(this, from, to), options.mode || this.modeOption, from);\r\n      if (options.sharedHist) copy.history = this.history;\r\n      (this.linked || (this.linked = [])).push({doc: copy, sharedHist: options.sharedHist});\r\n      copy.linked = [{doc: this, isParent: true, sharedHist: options.sharedHist}];\r\n      return copy;\r\n    },\r\n    unlinkDoc: function(other) {\r\n      if (other instanceof CodeMirror) other = other.doc;\r\n      if (this.linked) for (var i = 0; i < this.linked.length; ++i) {\r\n        var link = this.linked[i];\r\n        if (link.doc != other) continue;\r\n        this.linked.splice(i, 1);\r\n        other.unlinkDoc(this);\r\n        break;\r\n      }\r\n      // If the histories were shared, split them again\r\n      if (other.history == this.history) {\r\n        var splitIds = [other.id];\r\n        linkedDocs(other, function(doc) {splitIds.push(doc.id);}, true);\r\n        other.history = makeHistory();\r\n        other.history.done = copyHistoryArray(this.history.done, splitIds);\r\n        other.history.undone = copyHistoryArray(this.history.undone, splitIds);\r\n      }\r\n    },\r\n    iterLinkedDocs: function(f) {linkedDocs(this, f);},\r\n\r\n    getMode: function() {return this.mode;},\r\n    getEditor: function() {return this.cm;}\r\n  });\r\n\r\n  Doc.prototype.eachLine = Doc.prototype.iter;\r\n\r\n  // The Doc methods that should be available on CodeMirror instances\r\n  var dontDelegate = \"iter insert remove copy getEditor\".split(\" \");\r\n  for (var prop in Doc.prototype) if (Doc.prototype.hasOwnProperty(prop) && indexOf(dontDelegate, prop) < 0)\r\n    CodeMirror.prototype[prop] = (function(method) {\r\n      return function() {return method.apply(this.doc, arguments);};\r\n    })(Doc.prototype[prop]);\r\n\r\n  function linkedDocs(doc, f, sharedHistOnly) {\r\n    function propagate(doc, skip, sharedHist) {\r\n      if (doc.linked) for (var i = 0; i < doc.linked.length; ++i) {\r\n        var rel = doc.linked[i];\r\n        if (rel.doc == skip) continue;\r\n        var shared = sharedHist && rel.sharedHist;\r\n        if (sharedHistOnly && !shared) continue;\r\n        f(rel.doc, shared);\r\n        propagate(rel.doc, doc, shared);\r\n      }\r\n    }\r\n    propagate(doc, null, true);\r\n  }\r\n\r\n  function attachDoc(cm, doc) {\r\n    if (doc.cm) throw new Error(\"This document is already in use.\");\r\n    cm.doc = doc;\r\n    doc.cm = cm;\r\n    estimateLineHeights(cm);\r\n    loadMode(cm);\r\n    if (!cm.options.lineWrapping) computeMaxLength(cm);\r\n    cm.options.mode = doc.modeOption;\r\n    regChange(cm);\r\n  }\r\n\r\n  // LINE UTILITIES\r\n\r\n  function getLine(chunk, n) {\r\n    n -= chunk.first;\r\n    while (!chunk.lines) {\r\n      for (var i = 0;; ++i) {\r\n        var child = chunk.children[i], sz = child.chunkSize();\r\n        if (n < sz) { chunk = child; break; }\r\n        n -= sz;\r\n      }\r\n    }\r\n    return chunk.lines[n];\r\n  }\r\n\r\n  function getBetween(doc, start, end) {\r\n    var out = [], n = start.line;\r\n    doc.iter(start.line, end.line + 1, function(line) {\r\n      var text = line.text;\r\n      if (n == end.line) text = text.slice(0, end.ch);\r\n      if (n == start.line) text = text.slice(start.ch);\r\n      out.push(text);\r\n      ++n;\r\n    });\r\n    return out;\r\n  }\r\n  function getLines(doc, from, to) {\r\n    var out = [];\r\n    doc.iter(from, to, function(line) { out.push(line.text); });\r\n    return out;\r\n  }\r\n\r\n  function updateLineHeight(line, height) {\r\n    var diff = height - line.height;\r\n    for (var n = line; n; n = n.parent) n.height += diff;\r\n  }\r\n\r\n  function lineNo(line) {\r\n    if (line.parent == null) return null;\r\n    var cur = line.parent, no = indexOf(cur.lines, line);\r\n    for (var chunk = cur.parent; chunk; cur = chunk, chunk = chunk.parent) {\r\n      for (var i = 0;; ++i) {\r\n        if (chunk.children[i] == cur) break;\r\n        no += chunk.children[i].chunkSize();\r\n      }\r\n    }\r\n    return no + cur.first;\r\n  }\r\n\r\n  function lineAtHeight(chunk, h) {\r\n    var n = chunk.first;\r\n    outer: do {\r\n      for (var i = 0, e = chunk.children.length; i < e; ++i) {\r\n        var child = chunk.children[i], ch = child.height;\r\n        if (h < ch) { chunk = child; continue outer; }\r\n        h -= ch;\r\n        n += child.chunkSize();\r\n      }\r\n      return n;\r\n    } while (!chunk.lines);\r\n    for (var i = 0, e = chunk.lines.length; i < e; ++i) {\r\n      var line = chunk.lines[i], lh = line.height;\r\n      if (h < lh) break;\r\n      h -= lh;\r\n    }\r\n    return n + i;\r\n  }\r\n\r\n  function heightAtLine(cm, lineObj) {\r\n    lineObj = visualLine(cm.doc, lineObj);\r\n\r\n    var h = 0, chunk = lineObj.parent;\r\n    for (var i = 0; i < chunk.lines.length; ++i) {\r\n      var line = chunk.lines[i];\r\n      if (line == lineObj) break;\r\n      else h += line.height;\r\n    }\r\n    for (var p = chunk.parent; p; chunk = p, p = chunk.parent) {\r\n      for (var i = 0; i < p.children.length; ++i) {\r\n        var cur = p.children[i];\r\n        if (cur == chunk) break;\r\n        else h += cur.height;\r\n      }\r\n    }\r\n    return h;\r\n  }\r\n\r\n  function getOrder(line) {\r\n    var order = line.order;\r\n    if (order == null) order = line.order = bidiOrdering(line.text);\r\n    return order;\r\n  }\r\n\r\n  // HISTORY\r\n\r\n  function makeHistory(startGen) {\r\n    return {\r\n      // Arrays of history events. Doing something adds an event to\r\n      // done and clears undo. Undoing moves events from done to\r\n      // undone, redoing moves them in the other direction.\r\n      done: [], undone: [], undoDepth: Infinity,\r\n      // Used to track when changes can be merged into a single undo\r\n      // event\r\n      lastTime: 0, lastOp: null, lastOrigin: null,\r\n      // Used by the isClean() method\r\n      generation: startGen || 1, maxGeneration: startGen || 1\r\n    };\r\n  }\r\n\r\n  function attachLocalSpans(doc, change, from, to) {\r\n    var existing = change[\"spans_\" + doc.id], n = 0;\r\n    doc.iter(Math.max(doc.first, from), Math.min(doc.first + doc.size, to), function(line) {\r\n      if (line.markedSpans)\r\n        (existing || (existing = change[\"spans_\" + doc.id] = {}))[n] = line.markedSpans;\r\n      ++n;\r\n    });\r\n  }\r\n\r\n  function historyChangeFromChange(doc, change) {\r\n    var histChange = {from: change.from, to: changeEnd(change), text: getBetween(doc, change.from, change.to)};\r\n    attachLocalSpans(doc, histChange, change.from.line, change.to.line + 1);\r\n    linkedDocs(doc, function(doc) {attachLocalSpans(doc, histChange, change.from.line, change.to.line + 1);}, true);\r\n    return histChange;\r\n  }\r\n\r\n  function addToHistory(doc, change, selAfter, opId) {\r\n    var hist = doc.history;\r\n    hist.undone.length = 0;\r\n    var time = +new Date, cur = lst(hist.done);\r\n\r\n    if (cur &&\r\n        (hist.lastOp == opId ||\r\n         hist.lastOrigin == change.origin && change.origin &&\r\n         ((change.origin.charAt(0) == \"+\" && doc.cm && hist.lastTime > time - doc.cm.options.historyEventDelay) ||\r\n          change.origin.charAt(0) == \"*\"))) {\r\n      // Merge this change into the last event\r\n      var last = lst(cur.changes);\r\n      if (posEq(change.from, change.to) && posEq(change.from, last.to)) {\r\n        // Optimized case for simple insertion -- don't want to add\r\n        // new changesets for every character typed\r\n        last.to = changeEnd(change);\r\n      } else {\r\n        // Add new sub-event\r\n        cur.changes.push(historyChangeFromChange(doc, change));\r\n      }\r\n      cur.anchorAfter = selAfter.anchor; cur.headAfter = selAfter.head;\r\n    } else {\r\n      // Can not be merged, start a new event.\r\n      cur = {changes: [historyChangeFromChange(doc, change)],\r\n             generation: hist.generation,\r\n             anchorBefore: doc.sel.anchor, headBefore: doc.sel.head,\r\n             anchorAfter: selAfter.anchor, headAfter: selAfter.head};\r\n      hist.done.push(cur);\r\n      hist.generation = ++hist.maxGeneration;\r\n      while (hist.done.length > hist.undoDepth)\r\n        hist.done.shift();\r\n    }\r\n    hist.lastTime = time;\r\n    hist.lastOp = opId;\r\n    hist.lastOrigin = change.origin;\r\n  }\r\n\r\n  function removeClearedSpans(spans) {\r\n    if (!spans) return null;\r\n    for (var i = 0, out; i < spans.length; ++i) {\r\n      if (spans[i].marker.explicitlyCleared) { if (!out) out = spans.slice(0, i); }\r\n      else if (out) out.push(spans[i]);\r\n    }\r\n    return !out ? spans : out.length ? out : null;\r\n  }\r\n\r\n  function getOldSpans(doc, change) {\r\n    var found = change[\"spans_\" + doc.id];\r\n    if (!found) return null;\r\n    for (var i = 0, nw = []; i < change.text.length; ++i)\r\n      nw.push(removeClearedSpans(found[i]));\r\n    return nw;\r\n  }\r\n\r\n  // Used both to provide a JSON-safe object in .getHistory, and, when\r\n  // detaching a document, to split the history in two\r\n  function copyHistoryArray(events, newGroup) {\r\n    for (var i = 0, copy = []; i < events.length; ++i) {\r\n      var event = events[i], changes = event.changes, newChanges = [];\r\n      copy.push({changes: newChanges, anchorBefore: event.anchorBefore, headBefore: event.headBefore,\r\n                 anchorAfter: event.anchorAfter, headAfter: event.headAfter});\r\n      for (var j = 0; j < changes.length; ++j) {\r\n        var change = changes[j], m;\r\n        newChanges.push({from: change.from, to: change.to, text: change.text});\r\n        if (newGroup) for (var prop in change) if (m = prop.match(/^spans_(\\d+)$/)) {\r\n          if (indexOf(newGroup, Number(m[1])) > -1) {\r\n            lst(newChanges)[prop] = change[prop];\r\n            delete change[prop];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return copy;\r\n  }\r\n\r\n  // Rebasing/resetting history to deal with externally-sourced changes\r\n\r\n  function rebaseHistSel(pos, from, to, diff) {\r\n    if (to < pos.line) {\r\n      pos.line += diff;\r\n    } else if (from < pos.line) {\r\n      pos.line = from;\r\n      pos.ch = 0;\r\n    }\r\n  }\r\n\r\n  // Tries to rebase an array of history events given a change in the\r\n  // document. If the change touches the same lines as the event, the\r\n  // event, and everything 'behind' it, is discarded. If the change is\r\n  // before the event, the event's positions are updated. Uses a\r\n  // copy-on-write scheme for the positions, to avoid having to\r\n  // reallocate them all on every rebase, but also avoid problems with\r\n  // shared position objects being unsafely updated.\r\n  function rebaseHistArray(array, from, to, diff) {\r\n    for (var i = 0; i < array.length; ++i) {\r\n      var sub = array[i], ok = true;\r\n      for (var j = 0; j < sub.changes.length; ++j) {\r\n        var cur = sub.changes[j];\r\n        if (!sub.copied) { cur.from = copyPos(cur.from); cur.to = copyPos(cur.to); }\r\n        if (to < cur.from.line) {\r\n          cur.from.line += diff;\r\n          cur.to.line += diff;\r\n        } else if (from <= cur.to.line) {\r\n          ok = false;\r\n          break;\r\n        }\r\n      }\r\n      if (!sub.copied) {\r\n        sub.anchorBefore = copyPos(sub.anchorBefore); sub.headBefore = copyPos(sub.headBefore);\r\n        sub.anchorAfter = copyPos(sub.anchorAfter); sub.readAfter = copyPos(sub.headAfter);\r\n        sub.copied = true;\r\n      }\r\n      if (!ok) {\r\n        array.splice(0, i + 1);\r\n        i = 0;\r\n      } else {\r\n        rebaseHistSel(sub.anchorBefore); rebaseHistSel(sub.headBefore);\r\n        rebaseHistSel(sub.anchorAfter); rebaseHistSel(sub.headAfter);\r\n      }\r\n    }\r\n  }\r\n\r\n  function rebaseHist(hist, change) {\r\n    var from = change.from.line, to = change.to.line, diff = change.text.length - (to - from) - 1;\r\n    rebaseHistArray(hist.done, from, to, diff);\r\n    rebaseHistArray(hist.undone, from, to, diff);\r\n  }\r\n\r\n  // EVENT OPERATORS\r\n\r\n  function stopMethod() {e_stop(this);}\r\n  // Ensure an event has a stop method.\r\n  function addStop(event) {\r\n    if (!event.stop) event.stop = stopMethod;\r\n    return event;\r\n  }\r\n\r\n  function e_preventDefault(e) {\r\n    if (e.preventDefault) e.preventDefault();\r\n    else e.returnValue = false;\r\n  }\r\n  function e_stopPropagation(e) {\r\n    if (e.stopPropagation) e.stopPropagation();\r\n    else e.cancelBubble = true;\r\n  }\r\n  function e_defaultPrevented(e) {\r\n    return e.defaultPrevented != null ? e.defaultPrevented : e.returnValue == false;\r\n  }\r\n  function e_stop(e) {e_preventDefault(e); e_stopPropagation(e);}\r\n  CodeMirror.e_stop = e_stop;\r\n  CodeMirror.e_preventDefault = e_preventDefault;\r\n  CodeMirror.e_stopPropagation = e_stopPropagation;\r\n\r\n  function e_target(e) {return e.target || e.srcElement;}\r\n  function e_button(e) {\r\n    var b = e.which;\r\n    if (b == null) {\r\n      if (e.button & 1) b = 1;\r\n      else if (e.button & 2) b = 3;\r\n      else if (e.button & 4) b = 2;\r\n    }\r\n    if (mac && e.ctrlKey && b == 1) b = 3;\r\n    return b;\r\n  }\r\n\r\n  // EVENT HANDLING\r\n\r\n  function on(emitter, type, f) {\r\n    if (emitter.addEventListener)\r\n      emitter.addEventListener(type, f, false);\r\n    else if (emitter.attachEvent)\r\n      emitter.attachEvent(\"on\" + type, f);\r\n    else {\r\n      var map = emitter._handlers || (emitter._handlers = {});\r\n      var arr = map[type] || (map[type] = []);\r\n      arr.push(f);\r\n    }\r\n  }\r\n\r\n  function off(emitter, type, f) {\r\n    if (emitter.removeEventListener)\r\n      emitter.removeEventListener(type, f, false);\r\n    else if (emitter.detachEvent)\r\n      emitter.detachEvent(\"on\" + type, f);\r\n    else {\r\n      var arr = emitter._handlers && emitter._handlers[type];\r\n      if (!arr) return;\r\n      for (var i = 0; i < arr.length; ++i)\r\n        if (arr[i] == f) { arr.splice(i, 1); break; }\r\n    }\r\n  }\r\n\r\n  function signal(emitter, type /*, values...*/) {\r\n    var arr = emitter._handlers && emitter._handlers[type];\r\n    if (!arr) return;\r\n    var args = Array.prototype.slice.call(arguments, 2);\r\n    for (var i = 0; i < arr.length; ++i) arr[i].apply(null, args);\r\n  }\r\n\r\n  var delayedCallbacks, delayedCallbackDepth = 0;\r\n  function signalLater(emitter, type /*, values...*/) {\r\n    var arr = emitter._handlers && emitter._handlers[type];\r\n    if (!arr) return;\r\n    var args = Array.prototype.slice.call(arguments, 2);\r\n    if (!delayedCallbacks) {\r\n      ++delayedCallbackDepth;\r\n      delayedCallbacks = [];\r\n      setTimeout(fireDelayed, 0);\r\n    }\r\n    function bnd(f) {return function(){f.apply(null, args);};};\r\n    for (var i = 0; i < arr.length; ++i)\r\n      delayedCallbacks.push(bnd(arr[i]));\r\n  }\r\n\r\n  function signalDOMEvent(cm, e) {\r\n    signal(cm, e.type, cm, e);\r\n    return e_defaultPrevented(e);\r\n  }\r\n\r\n  function fireDelayed() {\r\n    --delayedCallbackDepth;\r\n    var delayed = delayedCallbacks;\r\n    delayedCallbacks = null;\r\n    for (var i = 0; i < delayed.length; ++i) delayed[i]();\r\n  }\r\n\r\n  function hasHandler(emitter, type) {\r\n    var arr = emitter._handlers && emitter._handlers[type];\r\n    return arr && arr.length > 0;\r\n  }\r\n\r\n  CodeMirror.on = on; CodeMirror.off = off; CodeMirror.signal = signal;\r\n\r\n  // MISC UTILITIES\r\n\r\n  // Number of pixels added to scroller and sizer to hide scrollbar\r\n  var scrollerCutOff = 30;\r\n\r\n  // Returned or thrown by various protocols to signal 'I'm not\r\n  // handling this'.\r\n  var Pass = CodeMirror.Pass = {toString: function(){return \"CodeMirror.Pass\";}};\r\n\r\n  function Delayed() {this.id = null;}\r\n  Delayed.prototype = {set: function(ms, f) {clearTimeout(this.id); this.id = setTimeout(f, ms);}};\r\n\r\n  // Counts the column offset in a string, taking tabs into account.\r\n  // Used mostly to find indentation.\r\n  function countColumn(string, end, tabSize, startIndex, startValue) {\r\n    if (end == null) {\r\n      end = string.search(/[^\\s\\u00a0]/);\r\n      if (end == -1) end = string.length;\r\n    }\r\n    for (var i = startIndex || 0, n = startValue || 0; i < end; ++i) {\r\n      if (string.charAt(i) == \"\\t\") n += tabSize - (n % tabSize);\r\n      else ++n;\r\n    }\r\n    return n;\r\n  }\r\n  CodeMirror.countColumn = countColumn;\r\n\r\n  var spaceStrs = [\"\"];\r\n  function spaceStr(n) {\r\n    while (spaceStrs.length <= n)\r\n      spaceStrs.push(lst(spaceStrs) + \" \");\r\n    return spaceStrs[n];\r\n  }\r\n\r\n  function lst(arr) { return arr[arr.length-1]; }\r\n\r\n  function selectInput(node) {\r\n    if (ios) { // Mobile Safari apparently has a bug where select() is broken.\r\n      node.selectionStart = 0;\r\n      node.selectionEnd = node.value.length;\r\n    } else {\r\n      // Suppress mysterious IE10 errors\r\n      try { node.select(); }\r\n      catch(_e) {}\r\n    }\r\n  }\r\n\r\n  function indexOf(collection, elt) {\r\n    if (collection.indexOf) return collection.indexOf(elt);\r\n    for (var i = 0, e = collection.length; i < e; ++i)\r\n      if (collection[i] == elt) return i;\r\n    return -1;\r\n  }\r\n\r\n  function createObj(base, props) {\r\n    function Obj() {}\r\n    Obj.prototype = base;\r\n    var inst = new Obj();\r\n    if (props) copyObj(props, inst);\r\n    return inst;\r\n  }\r\n\r\n  function copyObj(obj, target) {\r\n    if (!target) target = {};\r\n    for (var prop in obj) if (obj.hasOwnProperty(prop)) target[prop] = obj[prop];\r\n    return target;\r\n  }\r\n\r\n  function emptyArray(size) {\r\n    for (var a = [], i = 0; i < size; ++i) a.push(undefined);\r\n    return a;\r\n  }\r\n\r\n  function bind(f) {\r\n    var args = Array.prototype.slice.call(arguments, 1);\r\n    return function(){return f.apply(null, args);};\r\n  }\r\n\r\n  var nonASCIISingleCaseWordChar = /[\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\r\n  function isWordChar(ch) {\r\n    return /\\w/.test(ch) || ch > \"\\x80\" &&\r\n      (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch));\r\n  }\r\n\r\n  function isEmpty(obj) {\r\n    for (var n in obj) if (obj.hasOwnProperty(n) && obj[n]) return false;\r\n    return true;\r\n  }\r\n\r\n  var isExtendingChar = /[\\u0300-\\u036F\\u0483-\\u0487\\u0488-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1-\\u05C2\\u05C4-\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7-\\u06E8\\u06EA-\\u06ED\\uA66F\\uA670-\\uA672\\uA674-\\uA67D\\uA69F\\udc00-\\udfff]/;\r\n\r\n  // DOM UTILITIES\r\n\r\n  function elt(tag, content, className, style) {\r\n    var e = document.createElement(tag);\r\n    if (className) e.className = className;\r\n    if (style) e.style.cssText = style;\r\n    if (typeof content == \"string\") setTextContent(e, content);\r\n    else if (content) for (var i = 0; i < content.length; ++i) e.appendChild(content[i]);\r\n    return e;\r\n  }\r\n\r\n  function removeChildren(e) {\r\n    for (var count = e.childNodes.length; count > 0; --count)\r\n      e.removeChild(e.firstChild);\r\n    return e;\r\n  }\r\n\r\n  function removeChildrenAndAdd(parent, e) {\r\n    return removeChildren(parent).appendChild(e);\r\n  }\r\n\r\n  function setTextContent(e, str) {\r\n    if (ie_lt9) {\r\n      e.innerHTML = \"\";\r\n      e.appendChild(document.createTextNode(str));\r\n    } else e.textContent = str;\r\n  }\r\n\r\n  function getRect(node) {\r\n    return node.getBoundingClientRect();\r\n  }\r\n  CodeMirror.replaceGetRect = function(f) { getRect = f; };\r\n\r\n  // FEATURE DETECTION\r\n\r\n  // Detect drag-and-drop\r\n  var dragAndDrop = function() {\r\n    // There is *some* kind of drag-and-drop support in IE6-8, but I\r\n    // couldn't get it to work yet.\r\n    if (ie_lt9) return false;\r\n    var div = elt('div');\r\n    return \"draggable\" in div || \"dragDrop\" in div;\r\n  }();\r\n\r\n  // For a reason I have yet to figure out, some browsers disallow\r\n  // word wrapping between certain characters *only* if a new inline\r\n  // element is started between them. This makes it hard to reliably\r\n  // measure the position of things, since that requires inserting an\r\n  // extra span. This terribly fragile set of tests matches the\r\n  // character combinations that suffer from this phenomenon on the\r\n  // various browsers.\r\n  function spanAffectsWrapping() { return false; }\r\n  if (gecko) // Only for \"$'\"\r\n    spanAffectsWrapping = function(str, i) {\r\n      return str.charCodeAt(i - 1) == 36 && str.charCodeAt(i) == 39;\r\n    };\r\n  else if (safari && !/Version\\/([6-9]|\\d\\d)\\b/.test(navigator.userAgent))\r\n    spanAffectsWrapping = function(str, i) {\r\n      return /\\-[^ \\-?]|\\?[^ !\\'\\\"\\),.\\-\\/:;\\?\\]\\}]/.test(str.slice(i - 1, i + 1));\r\n    };\r\n  else if (webkit)\r\n    spanAffectsWrapping = function(str, i) {\r\n      if (i > 1 && str.charCodeAt(i - 1) == 45 && /\\w/.test(str.charAt(i - 2)) && /[^\\-?\\.]/.test(str.charAt(i)))\r\n        return true;\r\n      return /[~!#%&*)=+}\\]|\\\"\\.>,:;][({[<]|-[^\\-?\\.\\u2010-\\u201f\\u2026]|\\?[\\w~`@#$%\\^&*(_=+{[|><]|…[\\w~`@#$%\\^&*(_=+{[><]/.test(str.slice(i - 1, i + 1));\r\n    };\r\n\r\n  var knownScrollbarWidth;\r\n  function scrollbarWidth(measure) {\r\n    if (knownScrollbarWidth != null) return knownScrollbarWidth;\r\n    var test = elt(\"div\", null, null, \"width: 50px; height: 50px; overflow-x: scroll\");\r\n    removeChildrenAndAdd(measure, test);\r\n    if (test.offsetWidth)\r\n      knownScrollbarWidth = test.offsetHeight - test.clientHeight;\r\n    return knownScrollbarWidth || 0;\r\n  }\r\n\r\n  var zwspSupported;\r\n  function zeroWidthElement(measure) {\r\n    if (zwspSupported == null) {\r\n      var test = elt(\"span\", \"\\u200b\");\r\n      removeChildrenAndAdd(measure, elt(\"span\", [test, document.createTextNode(\"x\")]));\r\n      if (measure.firstChild.offsetHeight != 0)\r\n        zwspSupported = test.offsetWidth <= 1 && test.offsetHeight > 2 && !ie_lt8;\r\n    }\r\n    if (zwspSupported) return elt(\"span\", \"\\u200b\");\r\n    else return elt(\"span\", \"\\u00a0\", null, \"display: inline-block; width: 1px; margin-right: -1px\");\r\n  }\r\n\r\n  // See if \"\".split is the broken IE version, if so, provide an\r\n  // alternative way to split lines.\r\n  var splitLines = \"\\n\\nb\".split(/\\n/).length != 3 ? function(string) {\r\n    var pos = 0, result = [], l = string.length;\r\n    while (pos <= l) {\r\n      var nl = string.indexOf(\"\\n\", pos);\r\n      if (nl == -1) nl = string.length;\r\n      var line = string.slice(pos, string.charAt(nl - 1) == \"\\r\" ? nl - 1 : nl);\r\n      var rt = line.indexOf(\"\\r\");\r\n      if (rt != -1) {\r\n        result.push(line.slice(0, rt));\r\n        pos += rt + 1;\r\n      } else {\r\n        result.push(line);\r\n        pos = nl + 1;\r\n      }\r\n    }\r\n    return result;\r\n  } : function(string){return string.split(/\\r\\n?|\\n/);};\r\n  CodeMirror.splitLines = splitLines;\r\n\r\n  var hasSelection = window.getSelection ? function(te) {\r\n    try { return te.selectionStart != te.selectionEnd; }\r\n    catch(e) { return false; }\r\n  } : function(te) {\r\n    try {var range = te.ownerDocument.selection.createRange();}\r\n    catch(e) {}\r\n    if (!range || range.parentElement() != te) return false;\r\n    return range.compareEndPoints(\"StartToEnd\", range) != 0;\r\n  };\r\n\r\n  var hasCopyEvent = (function() {\r\n    var e = elt(\"div\");\r\n    if (\"oncopy\" in e) return true;\r\n    e.setAttribute(\"oncopy\", \"return;\");\r\n    return typeof e.oncopy == 'function';\r\n  })();\r\n\r\n  // KEY NAMING\r\n\r\n  var keyNames = {3: \"Enter\", 8: \"Backspace\", 9: \"Tab\", 13: \"Enter\", 16: \"Shift\", 17: \"Ctrl\", 18: \"Alt\",\r\n                  19: \"Pause\", 20: \"CapsLock\", 27: \"Esc\", 32: \"Space\", 33: \"PageUp\", 34: \"PageDown\", 35: \"End\",\r\n                  36: \"Home\", 37: \"Left\", 38: \"Up\", 39: \"Right\", 40: \"Down\", 44: \"PrintScrn\", 45: \"Insert\",\r\n                  46: \"Delete\", 59: \";\", 91: \"Mod\", 92: \"Mod\", 93: \"Mod\", 109: \"-\", 107: \"=\", 127: \"Delete\",\r\n                  186: \";\", 187: \"=\", 188: \",\", 189: \"-\", 190: \".\", 191: \"/\", 192: \"`\", 219: \"[\", 220: \"\\\\\",\r\n                  221: \"]\", 222: \"'\", 63276: \"PageUp\", 63277: \"PageDown\", 63275: \"End\", 63273: \"Home\",\r\n                  63234: \"Left\", 63232: \"Up\", 63235: \"Right\", 63233: \"Down\", 63302: \"Insert\", 63272: \"Delete\"};\r\n  CodeMirror.keyNames = keyNames;\r\n  (function() {\r\n    // Number keys\r\n    for (var i = 0; i < 10; i++) keyNames[i + 48] = String(i);\r\n    // Alphabetic keys\r\n    for (var i = 65; i <= 90; i++) keyNames[i] = String.fromCharCode(i);\r\n    // Function keys\r\n    for (var i = 1; i <= 12; i++) keyNames[i + 111] = keyNames[i + 63235] = \"F\" + i;\r\n  })();\r\n\r\n  // BIDI HELPERS\r\n\r\n  function iterateBidiSections(order, from, to, f) {\r\n    if (!order) return f(from, to, \"ltr\");\r\n    for (var i = 0; i < order.length; ++i) {\r\n      var part = order[i];\r\n      if (part.from < to && part.to > from || from == to && part.to == from)\r\n        f(Math.max(part.from, from), Math.min(part.to, to), part.level == 1 ? \"rtl\" : \"ltr\");\r\n    }\r\n  }\r\n\r\n  function bidiLeft(part) { return part.level % 2 ? part.to : part.from; }\r\n  function bidiRight(part) { return part.level % 2 ? part.from : part.to; }\r\n\r\n  function lineLeft(line) { var order = getOrder(line); return order ? bidiLeft(order[0]) : 0; }\r\n  function lineRight(line) {\r\n    var order = getOrder(line);\r\n    if (!order) return line.text.length;\r\n    return bidiRight(lst(order));\r\n  }\r\n\r\n  function lineStart(cm, lineN) {\r\n    var line = getLine(cm.doc, lineN);\r\n    var visual = visualLine(cm.doc, line);\r\n    if (visual != line) lineN = lineNo(visual);\r\n    var order = getOrder(visual);\r\n    var ch = !order ? 0 : order[0].level % 2 ? lineRight(visual) : lineLeft(visual);\r\n    return Pos(lineN, ch);\r\n  }\r\n  function lineEnd(cm, lineN) {\r\n    var merged, line;\r\n    while (merged = collapsedSpanAtEnd(line = getLine(cm.doc, lineN)))\r\n      lineN = merged.find().to.line;\r\n    var order = getOrder(line);\r\n    var ch = !order ? line.text.length : order[0].level % 2 ? lineLeft(line) : lineRight(line);\r\n    return Pos(lineN, ch);\r\n  }\r\n\r\n  function compareBidiLevel(order, a, b) {\r\n    var linedir = order[0].level;\r\n    if (a == linedir) return true;\r\n    if (b == linedir) return false;\r\n    return a < b;\r\n  }\r\n  var bidiOther;\r\n  function getBidiPartAt(order, pos) {\r\n    for (var i = 0, found; i < order.length; ++i) {\r\n      var cur = order[i];\r\n      if (cur.from < pos && cur.to > pos) { bidiOther = null; return i; }\r\n      if (cur.from == pos || cur.to == pos) {\r\n        if (found == null) {\r\n          found = i;\r\n        } else if (compareBidiLevel(order, cur.level, order[found].level)) {\r\n          bidiOther = found;\r\n          return i;\r\n        } else {\r\n          bidiOther = i;\r\n          return found;\r\n        }\r\n      }\r\n    }\r\n    bidiOther = null;\r\n    return found;\r\n  }\r\n\r\n  function moveInLine(line, pos, dir, byUnit) {\r\n    if (!byUnit) return pos + dir;\r\n    do pos += dir;\r\n    while (pos > 0 && isExtendingChar.test(line.text.charAt(pos)));\r\n    return pos;\r\n  }\r\n\r\n  // This is somewhat involved. It is needed in order to move\r\n  // 'visually' through bi-directional text -- i.e., pressing left\r\n  // should make the cursor go left, even when in RTL text. The\r\n  // tricky part is the 'jumps', where RTL and LTR text touch each\r\n  // other. This often requires the cursor offset to move more than\r\n  // one unit, in order to visually move one unit.\r\n  function moveVisually(line, start, dir, byUnit) {\r\n    var bidi = getOrder(line);\r\n    if (!bidi) return moveLogically(line, start, dir, byUnit);\r\n    var pos = getBidiPartAt(bidi, start), part = bidi[pos];\r\n    var target = moveInLine(line, start, part.level % 2 ? -dir : dir, byUnit);\r\n\r\n    for (;;) {\r\n      if (target > part.from && target < part.to) return target;\r\n      if (target == part.from || target == part.to) {\r\n        if (getBidiPartAt(bidi, target) == pos) return target;\r\n        part = bidi[pos += dir];\r\n        return (dir > 0) == part.level % 2 ? part.to : part.from;\r\n      } else {\r\n        part = bidi[pos += dir];\r\n        if (!part) return null;\r\n        if ((dir > 0) == part.level % 2)\r\n          target = moveInLine(line, part.to, -1, byUnit);\r\n        else\r\n          target = moveInLine(line, part.from, 1, byUnit);\r\n      }\r\n    }\r\n  }\r\n\r\n  function moveLogically(line, start, dir, byUnit) {\r\n    var target = start + dir;\r\n    if (byUnit) while (target > 0 && isExtendingChar.test(line.text.charAt(target))) target += dir;\r\n    return target < 0 || target > line.text.length ? null : target;\r\n  }\r\n\r\n  // Bidirectional ordering algorithm\r\n  // See http://unicode.org/reports/tr9/tr9-13.html for the algorithm\r\n  // that this (partially) implements.\r\n\r\n  // One-char codes used for character types:\r\n  // L (L):   Left-to-Right\r\n  // R (R):   Right-to-Left\r\n  // r (AL):  Right-to-Left Arabic\r\n  // 1 (EN):  European Number\r\n  // + (ES):  European Number Separator\r\n  // % (ET):  European Number Terminator\r\n  // n (AN):  Arabic Number\r\n  // , (CS):  Common Number Separator\r\n  // m (NSM): Non-Spacing Mark\r\n  // b (BN):  Boundary Neutral\r\n  // s (B):   Paragraph Separator\r\n  // t (S):   Segment Separator\r\n  // w (WS):  Whitespace\r\n  // N (ON):  Other Neutrals\r\n\r\n  // Returns null if characters are ordered as they appear\r\n  // (left-to-right), or an array of sections ({from, to, level}\r\n  // objects) in the order in which they occur visually.\r\n  var bidiOrdering = (function() {\r\n    // Character types for codepoints 0 to 0xff\r\n    var lowTypes = \"bbbbbbbbbtstwsbbbbbbbbbbbbbbssstwNN%%%NNNNNN,N,N1111111111NNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNbbbbbbsbbbbbbbbbbbbbbbbbbbbbbbbbb,N%%%%NNNNLNNNNN%%11NLNNN1LNNNNNLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLL\";\r\n    // Character types for codepoints 0x600 to 0x6ff\r\n    var arabicTypes = \"rrrrrrrrrrrr,rNNmmmmmmrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrmmmmmmmmmmmmmmrrrrrrrnnnnnnnnnn%nnrrrmrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrmmmmmmmmmmmmmmmmmmmNmmmmrrrrrrrrrrrrrrrrrr\";\r\n    function charType(code) {\r\n      if (code <= 0xff) return lowTypes.charAt(code);\r\n      else if (0x590 <= code && code <= 0x5f4) return \"R\";\r\n      else if (0x600 <= code && code <= 0x6ff) return arabicTypes.charAt(code - 0x600);\r\n      else if (0x700 <= code && code <= 0x8ac) return \"r\";\r\n      else return \"L\";\r\n    }\r\n\r\n    var bidiRE = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\r\n    var isNeutral = /[stwN]/, isStrong = /[LRr]/, countsAsLeft = /[Lb1n]/, countsAsNum = /[1n]/;\r\n    // Browsers seem to always treat the boundaries of block elements as being L.\r\n    var outerType = \"L\";\r\n\r\n    return function(str) {\r\n      if (!bidiRE.test(str)) return false;\r\n      var len = str.length, types = [];\r\n      for (var i = 0, type; i < len; ++i)\r\n        types.push(type = charType(str.charCodeAt(i)));\r\n\r\n      // W1. Examine each non-spacing mark (NSM) in the level run, and\r\n      // change the type of the NSM to the type of the previous\r\n      // character. If the NSM is at the start of the level run, it will\r\n      // get the type of sor.\r\n      for (var i = 0, prev = outerType; i < len; ++i) {\r\n        var type = types[i];\r\n        if (type == \"m\") types[i] = prev;\r\n        else prev = type;\r\n      }\r\n\r\n      // W2. Search backwards from each instance of a European number\r\n      // until the first strong type (R, L, AL, or sor) is found. If an\r\n      // AL is found, change the type of the European number to Arabic\r\n      // number.\r\n      // W3. Change all ALs to R.\r\n      for (var i = 0, cur = outerType; i < len; ++i) {\r\n        var type = types[i];\r\n        if (type == \"1\" && cur == \"r\") types[i] = \"n\";\r\n        else if (isStrong.test(type)) { cur = type; if (type == \"r\") types[i] = \"R\"; }\r\n      }\r\n\r\n      // W4. A single European separator between two European numbers\r\n      // changes to a European number. A single common separator between\r\n      // two numbers of the same type changes to that type.\r\n      for (var i = 1, prev = types[0]; i < len - 1; ++i) {\r\n        var type = types[i];\r\n        if (type == \"+\" && prev == \"1\" && types[i+1] == \"1\") types[i] = \"1\";\r\n        else if (type == \",\" && prev == types[i+1] &&\r\n                 (prev == \"1\" || prev == \"n\")) types[i] = prev;\r\n        prev = type;\r\n      }\r\n\r\n      // W5. A sequence of European terminators adjacent to European\r\n      // numbers changes to all European numbers.\r\n      // W6. Otherwise, separators and terminators change to Other\r\n      // Neutral.\r\n      for (var i = 0; i < len; ++i) {\r\n        var type = types[i];\r\n        if (type == \",\") types[i] = \"N\";\r\n        else if (type == \"%\") {\r\n          for (var end = i + 1; end < len && types[end] == \"%\"; ++end) {}\r\n          var replace = (i && types[i-1] == \"!\") || (end < len - 1 && types[end] == \"1\") ? \"1\" : \"N\";\r\n          for (var j = i; j < end; ++j) types[j] = replace;\r\n          i = end - 1;\r\n        }\r\n      }\r\n\r\n      // W7. Search backwards from each instance of a European number\r\n      // until the first strong type (R, L, or sor) is found. If an L is\r\n      // found, then change the type of the European number to L.\r\n      for (var i = 0, cur = outerType; i < len; ++i) {\r\n        var type = types[i];\r\n        if (cur == \"L\" && type == \"1\") types[i] = \"L\";\r\n        else if (isStrong.test(type)) cur = type;\r\n      }\r\n\r\n      // N1. A sequence of neutrals takes the direction of the\r\n      // surrounding strong text if the text on both sides has the same\r\n      // direction. European and Arabic numbers act as if they were R in\r\n      // terms of their influence on neutrals. Start-of-level-run (sor)\r\n      // and end-of-level-run (eor) are used at level run boundaries.\r\n      // N2. Any remaining neutrals take the embedding direction.\r\n      for (var i = 0; i < len; ++i) {\r\n        if (isNeutral.test(types[i])) {\r\n          for (var end = i + 1; end < len && isNeutral.test(types[end]); ++end) {}\r\n          var before = (i ? types[i-1] : outerType) == \"L\";\r\n          var after = (end < len - 1 ? types[end] : outerType) == \"L\";\r\n          var replace = before || after ? \"L\" : \"R\";\r\n          for (var j = i; j < end; ++j) types[j] = replace;\r\n          i = end - 1;\r\n        }\r\n      }\r\n\r\n      // Here we depart from the documented algorithm, in order to avoid\r\n      // building up an actual levels array. Since there are only three\r\n      // levels (0, 1, 2) in an implementation that doesn't take\r\n      // explicit embedding into account, we can build up the order on\r\n      // the fly, without following the level-based algorithm.\r\n      var order = [], m;\r\n      for (var i = 0; i < len;) {\r\n        if (countsAsLeft.test(types[i])) {\r\n          var start = i;\r\n          for (++i; i < len && countsAsLeft.test(types[i]); ++i) {}\r\n          order.push({from: start, to: i, level: 0});\r\n        } else {\r\n          var pos = i, at = order.length;\r\n          for (++i; i < len && types[i] != \"L\"; ++i) {}\r\n          for (var j = pos; j < i;) {\r\n            if (countsAsNum.test(types[j])) {\r\n              if (pos < j) order.splice(at, 0, {from: pos, to: j, level: 1});\r\n              var nstart = j;\r\n              for (++j; j < i && countsAsNum.test(types[j]); ++j) {}\r\n              order.splice(at, 0, {from: nstart, to: j, level: 2});\r\n              pos = j;\r\n            } else ++j;\r\n          }\r\n          if (pos < i) order.splice(at, 0, {from: pos, to: i, level: 1});\r\n        }\r\n      }\r\n      if (order[0].level == 1 && (m = str.match(/^\\s+/))) {\r\n        order[0].from = m[0].length;\r\n        order.unshift({from: 0, to: m[0].length, level: 0});\r\n      }\r\n      if (lst(order).level == 1 && (m = str.match(/\\s+$/))) {\r\n        lst(order).to -= m[0].length;\r\n        order.push({from: len - m[0].length, to: len, level: 0});\r\n      }\r\n      if (order[0].level != lst(order).level)\r\n        order.push({from: len, to: len, level: order[0].level});\r\n\r\n      return order;\r\n    };\r\n  })();\r\n\r\n  // THE END\r\n\r\n  CodeMirror.version = \"3.14.0\";\r\n\r\n  return CodeMirror;\r\n})();\r\n\n\n//# sourceURL=webpack:///./lib/codemirror/lib/codemirror.js?");

/***/ }),

/***/ "./lib/codemirror/mode/javascript/javascript.js":
/*!******************************************************!*\
  !*** ./lib/codemirror/mode/javascript/javascript.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// TODO actually recognize syntax of TypeScript constructs\r\n\r\nCodeMirror.defineMode(\"javascript\", function(config, parserConfig) {\r\n  var indentUnit = config.indentUnit;\r\n  var statementIndent = parserConfig.statementIndent;\r\n  var jsonMode = parserConfig.json;\r\n  var isTS = parserConfig.typescript;\r\n\r\n  // Tokenizer\r\n\r\n  var keywords = function(){\r\n    function kw(type) {return {type: type, style: \"keyword\"};}\r\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\");\r\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"};\r\n\r\n    var jsKeywords = {\r\n      \"if\": kw(\"if\"), \"while\": A, \"with\": A, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\r\n      \"return\": C, \"break\": C, \"continue\": C, \"new\": C, \"delete\": C, \"throw\": C,\r\n      \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"let\": kw(\"var\"),\r\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"),\r\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\r\n      \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\r\n      \"true\": atom, \"false\": atom, \"null\": atom, \"undefined\": atom, \"NaN\": atom, \"Infinity\": atom,\r\n      \"this\": kw(\"this\")\r\n    };\r\n\r\n    // Extend the 'normal' keywords with the TypeScript language extensions\r\n    if (isTS) {\r\n      var type = {type: \"variable\", style: \"variable-3\"};\r\n      var tsKeywords = {\r\n        // object-like things\r\n        \"interface\": kw(\"interface\"),\r\n        \"class\": kw(\"class\"),\r\n        \"extends\": kw(\"extends\"),\r\n        \"constructor\": kw(\"constructor\"),\r\n\r\n        // scope modifiers\r\n        \"public\": kw(\"public\"),\r\n        \"private\": kw(\"private\"),\r\n        \"protected\": kw(\"protected\"),\r\n        \"static\": kw(\"static\"),\r\n\r\n        \"super\": kw(\"super\"),\r\n\r\n        // types\r\n        \"string\": type, \"number\": type, \"bool\": type, \"any\": type\r\n      };\r\n\r\n      for (var attr in tsKeywords) {\r\n        jsKeywords[attr] = tsKeywords[attr];\r\n      }\r\n    }\r\n\r\n    return jsKeywords;\r\n  }();\r\n\r\n  var isOperatorChar = /[+\\-*&%=<>!?|~^]/;\r\n\r\n  function chain(stream, state, f) {\r\n    state.tokenize = f;\r\n    return f(stream, state);\r\n  }\r\n\r\n  function nextUntilUnescaped(stream, end) {\r\n    var escaped = false, next;\r\n    while ((next = stream.next()) != null) {\r\n      if (next == end && !escaped)\r\n        return false;\r\n      escaped = !escaped && next == \"\\\\\";\r\n    }\r\n    return escaped;\r\n  }\r\n\r\n  // Used as scratch variables to communicate multiple values without\r\n  // consing up tons of objects.\r\n  var type, content;\r\n  function ret(tp, style, cont) {\r\n    type = tp; content = cont;\r\n    return style;\r\n  }\r\n\r\n  function jsTokenBase(stream, state) {\r\n    var ch = stream.next();\r\n    if (ch == '\"' || ch == \"'\")\r\n      return chain(stream, state, jsTokenString(ch));\r\n    else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch))\r\n      return ret(ch);\r\n    else if (ch == \"0\" && stream.eat(/x/i)) {\r\n      stream.eatWhile(/[\\da-f]/i);\r\n      return ret(\"number\", \"number\");\r\n    }\r\n    else if (/\\d/.test(ch) || ch == \"-\" && stream.eat(/\\d/)) {\r\n      stream.match(/^\\d*(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/);\r\n      return ret(\"number\", \"number\");\r\n    }\r\n    else if (ch == \"/\") {\r\n      if (stream.eat(\"*\")) {\r\n        return chain(stream, state, jsTokenComment);\r\n      }\r\n      else if (stream.eat(\"/\")) {\r\n        stream.skipToEnd();\r\n        return ret(\"comment\", \"comment\");\r\n      }\r\n      else if (state.lastType == \"operator\" || state.lastType == \"keyword c\" ||\r\n               /^[\\[{}\\(,;:]$/.test(state.lastType)) {\r\n        nextUntilUnescaped(stream, \"/\");\r\n        stream.eatWhile(/[gimy]/); // 'y' is \"sticky\" option in Mozilla\r\n        return ret(\"regexp\", \"string-2\");\r\n      }\r\n      else {\r\n        stream.eatWhile(isOperatorChar);\r\n        return ret(\"operator\", null, stream.current());\r\n      }\r\n    }\r\n    else if (ch == \"#\") {\r\n      stream.skipToEnd();\r\n      return ret(\"error\", \"error\");\r\n    }\r\n    else if (isOperatorChar.test(ch)) {\r\n      stream.eatWhile(isOperatorChar);\r\n      return ret(\"operator\", null, stream.current());\r\n    }\r\n    else {\r\n      stream.eatWhile(/[\\w\\$_]/);\r\n      var word = stream.current(), known = keywords.propertyIsEnumerable(word) && keywords[word];\r\n      return (known && state.lastType != \".\") ? ret(known.type, known.style, word) :\r\n                     ret(\"variable\", \"variable\", word);\r\n    }\r\n  }\r\n\r\n  function jsTokenString(quote) {\r\n    return function(stream, state) {\r\n      if (!nextUntilUnescaped(stream, quote))\r\n        state.tokenize = jsTokenBase;\r\n      return ret(\"string\", \"string\");\r\n    };\r\n  }\r\n\r\n  function jsTokenComment(stream, state) {\r\n    var maybeEnd = false, ch;\r\n    while (ch = stream.next()) {\r\n      if (ch == \"/\" && maybeEnd) {\r\n        state.tokenize = jsTokenBase;\r\n        break;\r\n      }\r\n      maybeEnd = (ch == \"*\");\r\n    }\r\n    return ret(\"comment\", \"comment\");\r\n  }\r\n\r\n  // Parser\r\n\r\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true, \"this\": true};\r\n\r\n  function JSLexical(indented, column, type, align, prev, info) {\r\n    this.indented = indented;\r\n    this.column = column;\r\n    this.type = type;\r\n    this.prev = prev;\r\n    this.info = info;\r\n    if (align != null) this.align = align;\r\n  }\r\n\r\n  function inScope(state, varname) {\r\n    for (var v = state.localVars; v; v = v.next)\r\n      if (v.name == varname) return true;\r\n  }\r\n\r\n  function parseJS(state, style, type, content, stream) {\r\n    var cc = state.cc;\r\n    // Communicate our context to the combinators.\r\n    // (Less wasteful than consing up a hundred closures on every call.)\r\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc;\r\n\r\n    if (!state.lexical.hasOwnProperty(\"align\"))\r\n      state.lexical.align = true;\r\n\r\n    while(true) {\r\n      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\r\n      if (combinator(type, content)) {\r\n        while(cc.length && cc[cc.length - 1].lex)\r\n          cc.pop()();\r\n        if (cx.marked) return cx.marked;\r\n        if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\r\n        return style;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Combinator utils\r\n\r\n  var cx = {state: null, column: null, marked: null, cc: null};\r\n  function pass() {\r\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\r\n  }\r\n  function cont() {\r\n    pass.apply(null, arguments);\r\n    return true;\r\n  }\r\n  function register(varname) {\r\n    function inList(list) {\r\n      for (var v = list; v; v = v.next)\r\n        if (v.name == varname) return true;\r\n      return false;\r\n    }\r\n    var state = cx.state;\r\n    if (state.context) {\r\n      cx.marked = \"def\";\r\n      if (inList(state.localVars)) return;\r\n      state.localVars = {name: varname, next: state.localVars};\r\n    } else {\r\n      if (inList(state.globalVars)) return;\r\n      state.globalVars = {name: varname, next: state.globalVars};\r\n    }\r\n  }\r\n\r\n  // Combinators\r\n\r\n  var defaultVars = {name: \"this\", next: {name: \"arguments\"}};\r\n  function pushcontext() {\r\n    cx.state.context = {prev: cx.state.context, vars: cx.state.localVars};\r\n    cx.state.localVars = defaultVars;\r\n  }\r\n  function popcontext() {\r\n    cx.state.localVars = cx.state.context.vars;\r\n    cx.state.context = cx.state.context.prev;\r\n  }\r\n  function pushlex(type, info) {\r\n    var result = function() {\r\n      var state = cx.state, indent = state.indented;\r\n      if (state.lexical.type == \"stat\") indent = state.lexical.indented;\r\n      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\r\n    };\r\n    result.lex = true;\r\n    return result;\r\n  }\r\n  function poplex() {\r\n    var state = cx.state;\r\n    if (state.lexical.prev) {\r\n      if (state.lexical.type == \")\")\r\n        state.indented = state.lexical.indented;\r\n      state.lexical = state.lexical.prev;\r\n    }\r\n  }\r\n  poplex.lex = true;\r\n\r\n  function expect(wanted) {\r\n    return function(type) {\r\n      if (type == wanted) return cont();\r\n      else if (wanted == \";\") return pass();\r\n      else return cont(arguments.callee);\r\n    };\r\n  }\r\n\r\n  function statement(type) {\r\n    if (type == \"var\") return cont(pushlex(\"vardef\"), vardef1, expect(\";\"), poplex);\r\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), expression, statement, poplex);\r\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\r\n    if (type == \"{\") return cont(pushlex(\"}\"), block, poplex);\r\n    if (type == \";\") return cont();\r\n    if (type == \"if\") return cont(pushlex(\"form\"), expression, statement, poplex, maybeelse(cx.state.indented));\r\n    if (type == \"function\") return cont(functiondef);\r\n    if (type == \"for\") return cont(pushlex(\"form\"), expect(\"(\"), pushlex(\")\"), forspec1, expect(\")\"),\r\n                                      poplex, statement, poplex);\r\n    if (type == \"variable\") return cont(pushlex(\"stat\"), maybelabel);\r\n    if (type == \"switch\") return cont(pushlex(\"form\"), expression, pushlex(\"}\", \"switch\"), expect(\"{\"),\r\n                                         block, poplex, poplex);\r\n    if (type == \"case\") return cont(expression, expect(\":\"));\r\n    if (type == \"default\") return cont(expect(\":\"));\r\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, expect(\"(\"), funarg, expect(\")\"),\r\n                                        statement, poplex, popcontext);\r\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\r\n  }\r\n  function expression(type) {\r\n    return expressionInner(type, false);\r\n  }\r\n  function expressionNoComma(type) {\r\n    return expressionInner(type, true);\r\n  }\r\n  function expressionInner(type, noComma) {\r\n    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\r\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\r\n    if (type == \"function\") return cont(functiondef);\r\n    if (type == \"keyword c\") return cont(noComma ? maybeexpressionNoComma : maybeexpression);\r\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\r\n    if (type == \"operator\") return cont(noComma ? expressionNoComma : expression);\r\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(expressionNoComma, \"]\"), poplex, maybeop);\r\n    if (type == \"{\") return cont(pushlex(\"}\"), commasep(objprop, \"}\"), poplex, maybeop);\r\n    return cont();\r\n  }\r\n  function maybeexpression(type) {\r\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\r\n    return pass(expression);\r\n  }\r\n  function maybeexpressionNoComma(type) {\r\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\r\n    return pass(expressionNoComma);\r\n  }\r\n\r\n  function maybeoperatorComma(type, value) {\r\n    if (type == \",\") return cont(expression);\r\n    return maybeoperatorNoComma(type, value, maybeoperatorComma);\r\n  }\r\n  function maybeoperatorNoComma(type, value, me) {\r\n    if (!me) me = maybeoperatorNoComma;\r\n    if (type == \"operator\") {\r\n      if (/\\+\\+|--/.test(value)) return cont(me);\r\n      if (value == \"?\") return cont(expression, expect(\":\"), expression);\r\n      return cont(expression);\r\n    }\r\n    if (type == \";\") return;\r\n    if (type == \"(\") return cont(pushlex(\")\", \"call\"), commasep(expressionNoComma, \")\"), poplex, me);\r\n    if (type == \".\") return cont(property, me);\r\n    if (type == \"[\") return cont(pushlex(\"]\"), expression, expect(\"]\"), poplex, me);\r\n  }\r\n  function maybelabel(type) {\r\n    if (type == \":\") return cont(poplex, statement);\r\n    return pass(maybeoperatorComma, expect(\";\"), poplex);\r\n  }\r\n  function property(type) {\r\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\r\n  }\r\n  function objprop(type, value) {\r\n    if (type == \"variable\") {\r\n      cx.marked = \"property\";\r\n      if (value == \"get\" || value == \"set\") return cont(getterSetter);\r\n    } else if (type == \"number\" || type == \"string\") {\r\n      cx.marked = type + \" property\";\r\n    }\r\n    if (atomicTypes.hasOwnProperty(type)) return cont(expect(\":\"), expressionNoComma);\r\n  }\r\n  function getterSetter(type) {\r\n    if (type == \":\") return cont(expression);\r\n    if (type != \"variable\") return cont(expect(\":\"), expression);\r\n    cx.marked = \"property\";\r\n    return cont(functiondef);\r\n  }\r\n  function commasep(what, end) {\r\n    function proceed(type) {\r\n      if (type == \",\") {\r\n        var lex = cx.state.lexical;\r\n        if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\r\n        return cont(what, proceed);\r\n      }\r\n      if (type == end) return cont();\r\n      return cont(expect(end));\r\n    }\r\n    return function(type) {\r\n      if (type == end) return cont();\r\n      else return pass(what, proceed);\r\n    };\r\n  }\r\n  function block(type) {\r\n    if (type == \"}\") return cont();\r\n    return pass(statement, block);\r\n  }\r\n  function maybetype(type) {\r\n    if (type == \":\") return cont(typedef);\r\n    return pass();\r\n  }\r\n  function typedef(type) {\r\n    if (type == \"variable\"){cx.marked = \"variable-3\"; return cont();}\r\n    return pass();\r\n  }\r\n  function vardef1(type, value) {\r\n    if (type == \"variable\") {\r\n      register(value);\r\n      return isTS ? cont(maybetype, vardef2) : cont(vardef2);\r\n    }\r\n    return pass();\r\n  }\r\n  function vardef2(type, value) {\r\n    if (value == \"=\") return cont(expressionNoComma, vardef2);\r\n    if (type == \",\") return cont(vardef1);\r\n  }\r\n  function maybeelse(indent) {\r\n    return function(type, value) {\r\n      if (type == \"keyword b\" && value == \"else\") {\r\n        cx.state.lexical = new JSLexical(indent, 0, \"form\", null, cx.state.lexical);\r\n        return cont(statement, poplex);\r\n      }\r\n      return pass();\r\n    };\r\n  }\r\n  function forspec1(type) {\r\n    if (type == \"var\") return cont(vardef1, expect(\";\"), forspec2);\r\n    if (type == \";\") return cont(forspec2);\r\n    if (type == \"variable\") return cont(formaybein);\r\n    return pass(expression, expect(\";\"), forspec2);\r\n  }\r\n  function formaybein(_type, value) {\r\n    if (value == \"in\") return cont(expression);\r\n    return cont(maybeoperatorComma, forspec2);\r\n  }\r\n  function forspec2(type, value) {\r\n    if (type == \";\") return cont(forspec3);\r\n    if (value == \"in\") return cont(expression);\r\n    return pass(expression, expect(\";\"), forspec3);\r\n  }\r\n  function forspec3(type) {\r\n    if (type != \")\") cont(expression);\r\n  }\r\n  function functiondef(type, value) {\r\n    if (type == \"variable\") {register(value); return cont(functiondef);}\r\n    if (type == \"(\") return cont(pushlex(\")\"), pushcontext, commasep(funarg, \")\"), poplex, statement, popcontext);\r\n  }\r\n  function funarg(type, value) {\r\n    if (type == \"variable\") {register(value); return isTS ? cont(maybetype) : cont();}\r\n  }\r\n\r\n  // Interface\r\n\r\n  return {\r\n    startState: function(basecolumn) {\r\n      return {\r\n        tokenize: jsTokenBase,\r\n        lastType: null,\r\n        cc: [],\r\n        lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\r\n        localVars: parserConfig.localVars,\r\n        globalVars: parserConfig.globalVars,\r\n        context: parserConfig.localVars && {vars: parserConfig.localVars},\r\n        indented: 0\r\n      };\r\n    },\r\n\r\n    token: function(stream, state) {\r\n      if (stream.sol()) {\r\n        if (!state.lexical.hasOwnProperty(\"align\"))\r\n          state.lexical.align = false;\r\n        state.indented = stream.indentation();\r\n      }\r\n      if (state.tokenize != jsTokenComment && stream.eatSpace()) return null;\r\n      var style = state.tokenize(stream, state);\r\n      if (type == \"comment\") return style;\r\n      state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\r\n      return parseJS(state, style, type, content, stream);\r\n    },\r\n\r\n    indent: function(state, textAfter) {\r\n      if (state.tokenize == jsTokenComment) return CodeMirror.Pass;\r\n      if (state.tokenize != jsTokenBase) return 0;\r\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical;\r\n      if (lexical.type == \"stat\" && firstChar == \"}\") lexical = lexical.prev;\r\n      if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\r\n        lexical = lexical.prev;\r\n      var type = lexical.type, closing = firstChar == type;\r\n\r\n      if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? 4 : 0);\r\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\r\n      else if (type == \"form\") return lexical.indented + indentUnit;\r\n      else if (type == \"stat\")\r\n        return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? statementIndent || indentUnit : 0);\r\n      else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\r\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\r\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\r\n      else return lexical.indented + (closing ? 0 : indentUnit);\r\n    },\r\n\r\n    electricChars: \":{}\",\r\n    blockCommentStart: jsonMode ? null : \"/*\",\r\n    blockCommentEnd: jsonMode ? null : \"*/\",\r\n    lineComment: jsonMode ? null : \"//\",\r\n\r\n    jsonMode: jsonMode\r\n  };\r\n});\r\n\r\nCodeMirror.defineMIME(\"text/javascript\", \"javascript\");\r\nCodeMirror.defineMIME(\"text/ecmascript\", \"javascript\");\r\nCodeMirror.defineMIME(\"application/javascript\", \"javascript\");\r\nCodeMirror.defineMIME(\"application/ecmascript\", \"javascript\");\r\nCodeMirror.defineMIME(\"application/json\", {name: \"javascript\", json: true});\r\nCodeMirror.defineMIME(\"application/x-json\", {name: \"javascript\", json: true});\r\nCodeMirror.defineMIME(\"text/typescript\", { name: \"javascript\", typescript: true });\r\nCodeMirror.defineMIME(\"application/typescript\", { name: \"javascript\", typescript: true });\r\n\n\n//# sourceURL=webpack:///./lib/codemirror/mode/javascript/javascript.js?");

/***/ }),

/***/ "./lib/d3-compat.js":
/*!**************************!*\
  !*** ./lib/d3-compat.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function() {\r\n\r\n  // get a reference to the d3.selection prototype,\r\n  // and keep a reference to the old d3.selection.on\r\n  var d3_selectionPrototype = d3.selection.prototype,\r\n      d3_on = d3_selectionPrototype.on;\r\n\r\n  // our shims are organized by event:\r\n  // \"desired-event\": [\"shimmed-event\", wrapperFunction]\r\n  var shims = {\r\n    \"mouseenter\": [\"mouseover\", relatedTarget],\r\n    \"mouseleave\": [\"mouseout\", relatedTarget]\r\n  };\r\n\r\n  // rewrite the d3.selection.on function to shim the events with wrapped\r\n  // callbacks\r\n  d3_selectionPrototype.on = function(evt, callback, useCapture) {\r\n    var bits = evt.split(\".\"),\r\n        type = bits.shift(),\r\n        shim = shims[type];\r\n    if (shim) {\r\n      evt = bits.length ? [shim[0], bits].join(\".\") : shim[0];\r\n      if (typeof callback === \"function\") {\r\n        callback = shim[1](callback);\r\n      }\r\n      return d3_on.call(this, evt, callback, useCapture);\r\n    } else {\r\n      return d3_on.apply(this, arguments);\r\n    } \r\n  };\r\n\r\n  function relatedTarget(callback) {\r\n    return function() {\r\n      var related = d3.event.relatedTarget;\r\n      if (this === related || childOf(this, related)) {\r\n        return undefined;\r\n      }\r\n      return callback.apply(this, arguments);\r\n    };\r\n  }\r\n\r\n  function childOf(p, c) {\r\n    if (p === c) return false;\r\n    while (c && c !== p) c = c.parentNode;\r\n    return c === p;\r\n  }\r\n\r\n})();\r\n\n\n//# sourceURL=webpack:///./lib/d3-compat.js?");

/***/ }),

/***/ "./lib/d3.keybinding.js":
/*!******************************!*\
  !*** ./lib/d3.keybinding.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\r\n * This code is licensed under the MIT license.\r\n *\r\n * Copyright © 2013, iD authors.\r\n *\r\n * Portions copyright © 2011, Keith Cirkel\r\n * See https://github.com/keithamus/jwerty\r\n *\r\n */\r\nd3.keybinding = function(namespace) {\r\n    var bindings = [];\r\n\r\n    function matches(binding, event) {\r\n        for (var p in binding.event) {\r\n            if (event[p] != binding.event[p])\r\n                return false;\r\n        }\r\n\r\n        return (!binding.capture) === (event.eventPhase !== Event.CAPTURING_PHASE);\r\n    }\r\n\r\n    function capture() {\r\n        for (var i = 0; i < bindings.length; i++) {\r\n            var binding = bindings[i];\r\n            if (matches(binding, d3.event)) {\r\n                binding.callback();\r\n            }\r\n        }\r\n    }\r\n\r\n    function bubble() {\r\n        var tagName = d3.select(d3.event.target).node().tagName;\r\n        if (tagName == 'INPUT' || tagName == 'SELECT' || tagName == 'TEXTAREA') {\r\n            return;\r\n        }\r\n        capture();\r\n    }\r\n\r\n    function keybinding(selection) {\r\n        selection = selection || d3.select(document);\r\n        selection.on('keydown.capture' + namespace, capture, true);\r\n        selection.on('keydown.bubble' + namespace, bubble, false);\r\n        return keybinding;\r\n    }\r\n\r\n    keybinding.off = function(selection) {\r\n        selection = selection || d3.select(document);\r\n        selection.on('keydown.capture' + namespace, null);\r\n        selection.on('keydown.bubble' + namespace, null);\r\n        return keybinding;\r\n    };\r\n\r\n    keybinding.on = function(code, callback, capture) {\r\n        var binding = {\r\n            event: {\r\n                keyCode: 0,\r\n                shiftKey: false,\r\n                ctrlKey: false,\r\n                altKey: false,\r\n                metaKey: false\r\n            },\r\n            capture: capture,\r\n            callback: callback\r\n        };\r\n\r\n        code = code.toLowerCase().match(/(?:(?:[^+⇧⌃⌥⌘])+|[⇧⌃⌥⌘]|\\+\\+|^\\+$)/g);\r\n\r\n        for (var i = 0; i < code.length; i++) {\r\n            // Normalise matching errors\r\n            if (code[i] === '++') code[i] = '+';\r\n\r\n            if (code[i] in d3.keybinding.modifierCodes) {\r\n                binding.event[d3.keybinding.modifierProperties[d3.keybinding.modifierCodes[code[i]]]] = true;\r\n            } else if (code[i] in d3.keybinding.keyCodes) {\r\n                binding.event.keyCode = d3.keybinding.keyCodes[code[i]];\r\n            }\r\n        }\r\n\r\n        bindings.push(binding);\r\n\r\n        return keybinding;\r\n    };\r\n\r\n    return keybinding;\r\n};\r\n\r\n(function () {\r\n    d3.keybinding.modifierCodes = {\r\n        // Shift key, ⇧\r\n        '⇧': 16, shift: 16,\r\n        // CTRL key, on Mac: ⌃\r\n        '⌃': 17, ctrl: 17,\r\n        // ALT key, on Mac: ⌥ (Alt)\r\n        '⌥': 18, alt: 18, option: 18,\r\n        // META, on Mac: ⌘ (CMD), on Windows (Win), on Linux (Super)\r\n        '⌘': 91, meta: 91, cmd: 91, 'super': 91, win: 91\r\n    };\r\n\r\n    d3.keybinding.modifierProperties = {\r\n        16: 'shiftKey',\r\n        17: 'ctrlKey',\r\n        18: 'altKey',\r\n        91: 'metaKey'\r\n    };\r\n\r\n    d3.keybinding.keyCodes = {\r\n        // Backspace key, on Mac: ⌫ (Backspace)\r\n        '⌫': 8, backspace: 8,\r\n        // Tab Key, on Mac: ⇥ (Tab), on Windows ⇥⇥\r\n        '⇥': 9, '⇆': 9, tab: 9,\r\n        // Return key, ↩\r\n        '↩': 13, 'return': 13, enter: 13, '⌅': 13,\r\n        // Pause/Break key\r\n        'pause': 19, 'pause-break': 19,\r\n        // Caps Lock key, ⇪\r\n        '⇪': 20, caps: 20, 'caps-lock': 20,\r\n        // Escape key, on Mac: ⎋, on Windows: Esc\r\n        '⎋': 27, escape: 27, esc: 27,\r\n        // Space key\r\n        space: 32,\r\n        // Page-Up key, or pgup, on Mac: ↖\r\n        '↖': 33, pgup: 33, 'page-up': 33,\r\n        // Page-Down key, or pgdown, on Mac: ↘\r\n        '↘': 34, pgdown: 34, 'page-down': 34,\r\n        // END key, on Mac: ⇟\r\n        '⇟': 35, end: 35,\r\n        // HOME key, on Mac: ⇞\r\n        '⇞': 36, home: 36,\r\n        // Insert key, or ins\r\n        ins: 45, insert: 45,\r\n        // Delete key, on Mac: ⌦ (Delete)\r\n        '⌦': 46, del: 46, 'delete': 46,\r\n        // Left Arrow Key, or ←\r\n        '←': 37, left: 37, 'arrow-left': 37,\r\n        // Up Arrow Key, or ↑\r\n        '↑': 38, up: 38, 'arrow-up': 38,\r\n        // Right Arrow Key, or →\r\n        '→': 39, right: 39, 'arrow-right': 39,\r\n        // Up Arrow Key, or ↓\r\n        '↓': 40, down: 40, 'arrow-down': 40,\r\n        // odities, printing characters that come out wrong:\r\n        // Num-Multiply, or *\r\n        '*': 106, star: 106, asterisk: 106, multiply: 106,\r\n        // Num-Plus or +\r\n        '+': 107, 'plus': 107,\r\n        // Num-Subtract, or -\r\n        '-': 109, subtract: 109,\r\n        // Semicolon\r\n        ';': 186, semicolon:186,\r\n        // = or equals\r\n        '=': 187, 'equals': 187,\r\n        // Comma, or ,\r\n        ',': 188, comma: 188,\r\n        'dash': 189, //???\r\n        // Period, or ., or full-stop\r\n        '.': 190, period: 190, 'full-stop': 190,\r\n        // Slash, or /, or forward-slash\r\n        '/': 191, slash: 191, 'forward-slash': 191,\r\n        // Tick, or `, or back-quote\r\n        '`': 192, tick: 192, 'back-quote': 192,\r\n        // Open bracket, or [\r\n        '[': 219, 'open-bracket': 219,\r\n        // Back slash, or \\\r\n        '\\\\': 220, 'back-slash': 220,\r\n        // Close backet, or ]\r\n        ']': 221, 'close-bracket': 221,\r\n        // Apostrophe, or Quote, or '\r\n        '\\'': 222, quote: 222, apostrophe: 222\r\n    };\r\n\r\n    // NUMPAD 0-9\r\n    var i = 95, n = 0;\r\n    while (++i < 106) {\r\n        d3.keybinding.keyCodes['num-' + n] = i;\r\n        ++n;\r\n    }\r\n\r\n    // 0-9\r\n    i = 47; n = 0;\r\n    while (++i < 58) {\r\n        d3.keybinding.keyCodes[n] = i;\r\n        ++n;\r\n    }\r\n\r\n    // F1-F25\r\n    i = 111; n = 1;\r\n    while (++i < 136) {\r\n        d3.keybinding.keyCodes['f' + n] = i;\r\n        ++n;\r\n    }\r\n\r\n    // a-z\r\n    i = 64;\r\n    while (++i < 91) {\r\n        d3.keybinding.keyCodes[String.fromCharCode(i).toLowerCase()] = i;\r\n    }\r\n})();\r\n\n\n//# sourceURL=webpack:///./lib/d3.keybinding.js?");

/***/ }),

/***/ "./lib/d3.trigger.js":
/*!***************************!*\
  !*** ./lib/d3.trigger.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("d3.selection.prototype.trigger = function (type) {\r\n    this.each(function() {\r\n        var evt = document.createEvent('HTMLEvents');\r\n        evt.initEvent(type, true, true);\r\n        this.dispatchEvent(evt);\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack:///./lib/d3.trigger.js?");

/***/ }),

/***/ "./lib/drag/leaflet.drag.js":
/*!**********************************!*\
  !*** ./lib/drag/leaflet.drag.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\r\n  Drag feature functionality for Leaflet.draw\r\n\t(c) Alexander Milevski\r\n\r\n\thttps://github.com/w8r/Leaflet.draw.drag\r\n\thttps://github.com/w8r/\r\n*/\r\nif(L.Browser.svg){L.Path.include({_resetTransform:function(){this._container.setAttributeNS(null,\"transform\",\"\")},_applyTransform:function(t){this._container.setAttributeNS(null,\"transform\",\"matrix(\"+t.join(\" \")+\")\")}})}else{L.Path.include({_resetTransform:function(){if(this._skew){this._skew.on=false;this._container.removeChild(this._skew);this._skew=null}},_applyTransform:function(t){var e=this._skew;if(!e){e=this._createElement(\"skew\");this._container.appendChild(e);e.style.behavior=\"url(#default#VML)\";this._skew=e}var i=t[0].toFixed(8)+\" \"+t[1].toFixed(8)+\" \"+t[2].toFixed(8)+\" \"+t[3].toFixed(8)+\" 0 0\";var r=Math.floor(t[4]).toFixed()+\", \"+Math.floor(t[5]).toFixed()+\"\";var a=this._container.style;var s=parseFloat(a.left);var o=parseFloat(a.top);var n=parseFloat(a.width);var h=parseFloat(a.height);if(isNaN(s))s=0;if(isNaN(o))o=0;if(isNaN(n)||!n)n=1;if(isNaN(h)||!h)h=1;var _=(-s/n-.5).toFixed(8)+\" \"+(-o/h-.5).toFixed(8);e.on=\"f\";e.matrix=i;e.origin=_;e.offset=r;e.on=true}})}L.Path.include({_onMouseClick:function(t){if(this.dragging&&this.dragging.moved()||this._map.dragging&&this._map.dragging.moved()){return}this._fireMouseEvent(t)}});\"use strict\";L.Handler.PathDrag=L.Handler.extend({statics:{DRAGGABLE_CLS:\"leaflet-path-draggable\"},initialize:function(t){this._path=t;this._matrix=null;this._startPoint=null;this._dragStartPoint=null;this._dragInProgress=false;this._dragMoved=false},addHooks:function(){var t=L.Handler.PathDrag.DRAGGABLE_CLS;var e=this._path._path;this._path.on(\"mousedown\",this._onDragStart,this);this._path.options.className=(this._path.options.className||\"\")+\" \"+t;if(!L.Path.CANVAS&&e){L.DomUtil.addClass(e,t)}},removeHooks:function(){var t=L.Handler.PathDrag.DRAGGABLE_CLS;var e=this._path._path;this._path.off(\"mousedown\",this._onDragStart,this);this._path.options.className=(this._path.options.className||\"\").replace(t,\"\");if(!L.Path.CANVAS&&e){L.DomUtil.removeClass(e,t)}this._dragMoved=false},moved:function(){return this._dragMoved},inProgress:function(){return this._dragInProgress},_onDragStart:function(t){this._dragInProgress=true;this._startPoint=t.containerPoint.clone();this._dragStartPoint=t.containerPoint.clone();this._matrix=[1,0,0,1,0,0];if(this._path._point){this._point=this._path._point.clone()}this._path._map.on(\"mousemove\",this._onDrag,this).on(\"mouseup\",this._onDragEnd,this);this._dragMoved=false},_onDrag:function(t){var e=t.containerPoint.x;var i=t.containerPoint.y;var r=this._matrix;var a=this._path;var s=this._startPoint;var o=e-s.x;var n=i-s.y;if(!this._dragMoved&&(o||n)){this._dragMoved=true;a.fire(\"dragstart\");if(a._popup){a._popup._close();a.off(\"click\",a._openPopup,a)}}r[4]+=o;r[5]+=n;s.x=e;s.y=i;a._applyTransform(r);if(a._point){a._point.x=this._point.x+r[4];a._point.y=this._point.y+r[5]}a.fire(\"drag\");L.DomEvent.stop(t.originalEvent)},_onDragEnd:function(t){L.DomEvent.stop(t);L.DomEvent._fakeStop({type:\"click\"});this._dragInProgress=false;this._path._resetTransform();this._transformPoints(this._matrix);this._path._map.off(\"mousemove\",this._onDrag,this).off(\"mouseup\",this._onDragEnd,this);this._path.fire(\"dragend\",{distance:Math.sqrt(L.LineUtil._sqDist(this._dragStartPoint,t.containerPoint))});if(this._path._popup){L.Util.requestAnimFrame(function(){this._path.on(\"click\",this._path._openPopup,this._path)},this)}this._matrix=null;this._startPoint=null;this._point=null;this._dragStartPoint=null},_transformPoint:function(t,e){var i=this._path;var r=L.point(e[4],e[5]);var a=i._map.options.crs;var s=a.transformation;var o=a.scale(i._map.getZoom());var n=a.projection;var h=s.untransform(r,o).subtract(s.untransform(L.point(0,0),o));return n.unproject(n.project(t)._add(h))},_transformPoints:function(t){var e=this._path;var i,r,a;var s=L.point(t[4],t[5]);var o=e._map.options.crs;var n=o.transformation;var h=o.scale(e._map.getZoom());var _=o.projection;var g=n.untransform(s,h).subtract(n.untransform(L.point(0,0),h));if(e._point){e._latlng=_.unproject(_.project(e._latlng)._add(g));e._point=this._point._add(s)}else if(e._originalPoints){for(i=0,r=e._originalPoints.length;i<r;i++){a=e._latlngs[i];e._latlngs[i]=_.unproject(_.project(a)._add(g));e._originalPoints[i]._add(s)}}if(e._holes){for(i=0,r=e._holes.length;i<r;i++){for(var p=0,d=e._holes[i].length;p<d;p++){a=e._holes[i][p];e._holes[i][p]=_.unproject(_.project(a)._add(g));e._holePoints[i][p]._add(s)}}}e._updatePath()}});L.Path.addInitHook(function(){if(this.options.draggable){if(this.dragging){this.dragging.enable()}else{this.dragging=new L.Handler.PathDrag(this);this.dragging.enable()}}else if(this.dragging){this.dragging.disable()}});L.Circle.prototype._getLatLng=L.Circle.prototype.getLatLng;L.Circle.prototype.getLatLng=function(){if(this.dragging&&this.dragging.inProgress()){return this.dragging._transformPoint(this._latlng,this.dragging._matrix)}else{return this._getLatLng()}};L.Polyline.prototype._getLatLngs=L.Polyline.prototype.getLatLngs;L.Polyline.prototype.getLatLngs=function(){if(this.dragging&&this.dragging.inProgress()){var t=this.dragging._matrix;var e=this._getLatLngs();for(var i=0,r=e.length;i<r;i++){e[i]=this.dragging._transformPoint(e[i],t)}return e}else{return this._getLatLngs()}};(function(){L.FeatureGroup.EVENTS+=\" dragstart\";function t(t,e,i){for(var r=0,a=t.length;r<a;r++){var s=t[r];s.prototype[\"_\"+e]=s.prototype[e];s.prototype[e]=i}}function e(t){if(this.hasLayer(t)){return this}t.on(\"drag\",this._onDrag,this).on(\"dragend\",this._onDragEnd,this);return this._addLayer.call(this,t)}function i(t){if(!this.hasLayer(t)){return this}t.off(\"drag\",this._onDrag,this).off(\"dragend\",this._onDragEnd,this);return this._removeLayer.call(this,t)}t([L.MultiPolygon,L.MultiPolyline],\"addLayer\",e);t([L.MultiPolygon,L.MultiPolyline],\"removeLayer\",i);var r={_onDrag:function(t){var e=t.target;this.eachLayer(function(t){if(t!==e){t._applyTransform(e.dragging._matrix)}});this._propagateEvent(t)},_onDragEnd:function(t){var e=t.target;this.eachLayer(function(t){if(t!==e){t._resetTransform();t.dragging._transformPoints(e.dragging._matrix)}});this._propagateEvent(t)}};L.MultiPolygon.include(r);L.MultiPolyline.include(r)})();L.Polygon.include(L.Polygon.prototype.getCenter?{}:{getCenter:function(){var t,e,i,r,a,s,o,n,h;var _=this._originalPoints;o=n=h=0;for(t=0,i=_.length,e=i-1;t<i;e=t++){r=_[t];a=_[e];s=r.y*a.x-a.y*r.x;n+=(r.x+a.x)*s;h+=(r.y+a.y)*s;o+=s*3}return this._map.layerPointToLatLng([n/o,h/o])}});\"use strict\";L.EditToolbar.Edit.MOVE_MARKERS=false;L.EditToolbar.Edit.include({initialize:function(t,e){L.EditToolbar.Edit.MOVE_MARKERS=!!e.selectedPathOptions.moveMarkers;this._initialize(t,e)},_initialize:L.EditToolbar.Edit.prototype.initialize});L.Edit.SimpleShape.include({_updateMoveMarker:function(){if(this._moveMarker){this._moveMarker.setLatLng(this._getShapeCenter())}},_getShapeCenter:function(){return this._shape.getBounds().getCenter()},_createMoveMarker:function(){if(L.EditToolbar.Edit.MOVE_MARKERS){this._moveMarker=this._createMarker(this._getShapeCenter(),this.options.moveIcon)}}});L.Edit.SimpleShape.mergeOptions({moveMarker:false});L.Edit.Circle.include({addHooks:function(){if(this._shape._map){this._map=this._shape._map;if(!this._markerGroup){this._enableDragging();this._initMarkers()}this._shape._map.addLayer(this._markerGroup)}},removeHooks:function(){if(this._shape._map){for(var t=0,e=this._resizeMarkers.length;t<e;t++){this._unbindMarker(this._resizeMarkers[t])}this._disableDragging();this._resizeMarkers=null;this._map.removeLayer(this._markerGroup);delete this._markerGroup}this._map=null},_createMoveMarker:L.Edit.SimpleShape.prototype._createMoveMarker,_resize:function(t){var e=this._shape.getLatLng();var i=e.distanceTo(t);this._shape.setRadius(i);this._updateMoveMarker();this._map.fire(\"draw:editresize\",{layer:this._shape})},_enableDragging:function(){if(!this._shape.dragging){this._shape.dragging=new L.Handler.PathDrag(this._shape)}this._shape.dragging.enable();this._shape.on(\"dragstart\",this._onStartDragFeature,this).on(\"dragend\",this._onStopDragFeature,this)},_disableDragging:function(){this._shape.dragging.disable();this._shape.off(\"dragstart\",this._onStartDragFeature,this).off(\"dragend\",this._onStopDragFeature,this)},_onStartDragFeature:function(){this._shape._map.removeLayer(this._markerGroup);this._shape.fire(\"editstart\")},_onStopDragFeature:function(){var t=this._shape.getLatLng();this._resizeMarkers[0].setLatLng(this._getResizeMarkerPoint(t));this._shape._map.addLayer(this._markerGroup);this._updateMoveMarker();this._fireEdit()}});L.Edit.Rectangle.include({addHooks:function(){if(this._shape._map){if(!this._markerGroup){this._enableDragging();this._initMarkers()}this._shape._map.addLayer(this._markerGroup)}},removeHooks:function(){if(this._shape._map){this._shape._map.removeLayer(this._markerGroup);this._disableDragging();delete this._markerGroup;delete this._markers}},_resize:function(t){this._shape.setBounds(L.latLngBounds(t,this._oppositeCorner));this._updateMoveMarker();this._map.fire(\"draw:editresize\",{layer:this._shape})},_onMarkerDragEnd:function(t){this._toggleCornerMarkers(1);this._repositionCornerMarkers();L.Edit.SimpleShape.prototype._onMarkerDragEnd.call(this,t)},_enableDragging:function(){if(!this._shape.dragging){this._shape.dragging=new L.Handler.PathDrag(this._shape)}this._shape.dragging.enable();this._shape.on(\"dragstart\",this._onStartDragFeature,this).on(\"dragend\",this._onStopDragFeature,this)},_disableDragging:function(){this._shape.dragging.disable();this._shape.off(\"dragstart\",this._onStartDragFeature,this).off(\"dragend\",this._onStopDragFeature,this)},_onStartDragFeature:function(){this._shape._map.removeLayer(this._markerGroup);this._shape.fire(\"editstart\")},_onStopDragFeature:function(){var t=this._shape;for(var e=0,i=t._latlngs.length;e<i;e++){var r=this._resizeMarkers[e];r.setLatLng(t._latlngs[e]);r._origLatLng=t._latlngs[e];if(r._middleLeft){r._middleLeft.setLatLng(this._getMiddleLatLng(r._prev,r))}if(r._middleRight){r._middleRight.setLatLng(this._getMiddleLatLng(r,r._next))}}this._shape._map.addLayer(this._markerGroup);this._updateMoveMarker();this._repositionCornerMarkers();this._fireEdit()}});L.Edit.Poly.include({__createMarker:L.Edit.Poly.prototype._createMarker,__removeMarker:L.Edit.Poly.prototype._removeMarker,addHooks:function(){if(this._poly._map){if(!this._markerGroup){this._enableDragging();this._initMarkers();this._createMoveMarker()}this._poly._map.addLayer(this._markerGroup)}},_createMoveMarker:function(){if(L.EditToolbar.Edit.MOVE_MARKERS&&this._poly instanceof L.Polygon){this._moveMarker=new L.Marker(this._getShapeCenter(),{icon:this.options.moveIcon});this._moveMarker.on(\"mousedown\",this._delegateToShape,this);this._markerGroup.addLayer(this._moveMarker)}},_delegateToShape:function(t){var e=this._shape||this._poly;var i=t.target;e.fire(\"mousedown\",L.Util.extend(t,{containerPoint:L.DomUtil.getPosition(i._icon).add(e._map._getMapPanePos())}))},_getShapeCenter:function(){return this._poly.getCenter()},removeHooks:function(){if(this._poly._map){this._poly._map.removeLayer(this._markerGroup);this._disableDragging();delete this._markerGroup;delete this._markers}},_enableDragging:function(){if(!this._poly.dragging){this._poly.dragging=new L.Handler.PathDrag(this._poly)}this._poly.dragging.enable();this._poly.on(\"dragstart\",this._onStartDragFeature,this).on(\"dragend\",this._onStopDragFeature,this)},_disableDragging:function(){this._poly.dragging.disable();this._poly.off(\"dragstart\",this._onStartDragFeature,this).off(\"dragend\",this._onStopDragFeature,this)},_onStartDragFeature:function(t){this._poly._map.removeLayer(this._markerGroup);this._poly.fire(\"editstart\")},_onStopDragFeature:function(t){var e=this._poly;for(var i=0,r=e._latlngs.length;i<r;i++){var a=this._markers[i];a.setLatLng(e._latlngs[i]);a._origLatLng=e._latlngs[i];if(a._middleLeft){a._middleLeft.setLatLng(this._getMiddleLatLng(a._prev,a))}if(a._middleRight){a._middleRight.setLatLng(this._getMiddleLatLng(a,a._next))}}this._poly._map.addLayer(this._markerGroup);L.Edit.SimpleShape.prototype._updateMoveMarker.call(this);this._fireEdit()},_updateMoveMarker:L.Edit.SimpleShape.prototype._updateMoveMarker,_createMarker:function(t,e){var i=this.__createMarker(t,e);i.on(\"dragstart\",this._hideMoveMarker,this).on(\"dragend\",this._showUpdateMoveMarker,this);return i},_removeMarker:function(t){this.__removeMarker(t);t.off(\"dragstart\",this._hideMoveMarker,this).off(\"dragend\",this._showUpdateMoveMarker,this)},_hideMoveMarker:function(){if(this._moveMarker){this._markerGroup.removeLayer(this._moveMarker)}},_showUpdateMoveMarker:function(){if(this._moveMarker){this._markerGroup.addLayer(this._moveMarker);this._updateMoveMarker()}}});L.Edit.Poly.prototype.options.moveIcon=new L.DivIcon({iconSize:new L.Point(8,8),className:\"leaflet-div-icon leaflet-editing-icon leaflet-edit-move\"});L.Edit.Poly.mergeOptions({moveMarker:false});\r\n\n\n//# sourceURL=webpack:///./lib/drag/leaflet.drag.js?");

/***/ }),

/***/ "./lib/draw/leaflet.draw-src.js":
/*!**************************************!*\
  !*** ./lib/draw/leaflet.draw-src.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\r\n\tLeaflet.draw, a plugin that adds drawing and editing tools to Leaflet powered maps.\r\n\t(c) 2012-2013, Jacob Toye, Smartrak\r\n\r\n\thttps://github.com/Leaflet/Leaflet.draw\r\n\thttp://leafletjs.com\r\n\thttps://github.com/jacobtoye\r\n*/\r\n(function (window, document, undefined) {/*\r\n * Leaflet.draw assumes that you have already included the Leaflet library.\r\n */\r\n\r\nL.drawVersion = '0.2.3';\r\n\r\nL.drawLocal = {\r\n\tdraw: {\r\n\t\ttoolbar: {\r\n\t\t\tactions: {\r\n\t\t\t\ttitle: 'Cancel drawing',\r\n\t\t\t\ttext: 'Cancel'\r\n\t\t\t},\r\n\t\t\tundo: {\r\n\t\t\t\ttitle: 'Delete last point drawn',\r\n\t\t\t\ttext: 'Delete last point'\r\n\t\t\t},\r\n\t\t\tbuttons: {\r\n\t\t\t\tpolyline: 'Draw a polyline',\r\n\t\t\t\tpolygon: 'Draw a polygon',\r\n\t\t\t\trectangle: 'Draw a rectangle',\r\n\t\t\t\tcircle: 'Draw a circle',\r\n\t\t\t\tmarker: 'Draw a marker'\r\n\t\t\t}\r\n\t\t},\r\n\t\thandlers: {\r\n\t\t\tcircle: {\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tstart: 'Click and drag to draw circle.'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmarker: {\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tstart: 'Click map to place marker.'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpolygon: {\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tstart: 'Click to start drawing shape.',\r\n\t\t\t\t\tcont: 'Click to continue drawing shape.',\r\n\t\t\t\t\tend: 'Click first point to close this shape.'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpolyline: {\r\n\t\t\t\terror: '<strong>Error:</strong> shape edges cannot cross!',\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tstart: 'Click to start drawing line.',\r\n\t\t\t\t\tcont: 'Click to continue drawing line.',\r\n\t\t\t\t\tend: 'Click last point to finish line.'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\trectangle: {\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tstart: 'Click and drag to draw rectangle.'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsimpleshape: {\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\tend: 'Release mouse to finish drawing.'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tedit: {\r\n\t\ttoolbar: {\r\n\t\t\tactions: {\r\n\t\t\t\tsave: {\r\n\t\t\t\t\ttitle: 'Save changes.',\r\n\t\t\t\t\ttext: 'Save'\r\n\t\t\t\t},\r\n\t\t\t\tcancel: {\r\n\t\t\t\t\ttitle: 'Cancel editing, discards all changes.',\r\n\t\t\t\t\ttext: 'Cancel'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbuttons: {\r\n\t\t\t\tedit: 'Edit layers.',\r\n\t\t\t\teditDisabled: 'No layers to edit.',\r\n\t\t\t\tremove: 'Delete layers.',\r\n\t\t\t\tremoveDisabled: 'No layers to delete.'\r\n\t\t\t}\r\n\t\t},\r\n\t\thandlers: {\r\n\t\t\tedit: {\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\ttext: 'Drag handles, or marker to edit feature.',\r\n\t\t\t\t\tsubtext: 'Click cancel to undo changes.'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tremove: {\r\n\t\t\t\ttooltip: {\r\n\t\t\t\t\ttext: 'Click on a feature to remove'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nL.Draw = {};\r\n\r\nL.Draw.Feature = L.Handler.extend({\r\n\tincludes: L.Mixin.Events,\r\n\r\n\tinitialize: function (map, options) {\r\n\t\tthis._map = map;\r\n\t\tthis._container = map._container;\r\n\t\tthis._overlayPane = map._panes.overlayPane;\r\n\t\tthis._popupPane = map._panes.popupPane;\r\n\r\n\t\t// Merge default shapeOptions options with custom shapeOptions\r\n\t\tif (options && options.shapeOptions) {\r\n\t\t\toptions.shapeOptions = L.Util.extend({}, this.options.shapeOptions, options.shapeOptions);\r\n\t\t}\r\n\t\tL.setOptions(this, options);\r\n\t},\r\n\r\n\tenable: function () {\r\n\t\tif (this._enabled) { return; }\r\n\r\n\t\tthis.fire('enabled', { handler: this.type });\r\n\r\n\t\tthis._map.fire('draw:drawstart', { layerType: this.type });\r\n\r\n\t\tL.Handler.prototype.enable.call(this);\r\n\t},\r\n\r\n\tdisable: function () {\r\n\t\tif (!this._enabled) { return; }\r\n\r\n\t\tL.Handler.prototype.disable.call(this);\r\n\r\n\t\tthis._map.fire('draw:drawstop', { layerType: this.type });\r\n\r\n\t\tthis.fire('disabled', { handler: this.type });\r\n\t},\r\n\r\n\taddHooks: function () {\r\n\t\tvar map = this._map;\r\n\r\n\t\tif (map) {\r\n\t\t\tL.DomUtil.disableTextSelection();\r\n\r\n\t\t\tmap.getContainer().focus();\r\n\r\n\t\t\tthis._tooltip = new L.Tooltip(this._map);\r\n\r\n\t\t\tL.DomEvent.on(this._container, 'keyup', this._cancelDrawing, this);\r\n\t\t}\r\n\t},\r\n\r\n\tremoveHooks: function () {\r\n\t\tif (this._map) {\r\n\t\t\tL.DomUtil.enableTextSelection();\r\n\r\n\t\t\tthis._tooltip.dispose();\r\n\t\t\tthis._tooltip = null;\r\n\r\n\t\t\tL.DomEvent.off(this._container, 'keyup', this._cancelDrawing, this);\r\n\t\t}\r\n\t},\r\n\r\n\tsetOptions: function (options) {\r\n\t\tL.setOptions(this, options);\r\n\t},\r\n\r\n\t_fireCreatedEvent: function (layer) {\r\n\t\tthis._map.fire('draw:created', { layer: layer, layerType: this.type });\r\n\t},\r\n\r\n\t// Cancel drawing when the escape key is pressed\r\n\t_cancelDrawing: function (e) {\r\n\t\tif (e.keyCode === 27) {\r\n\t\t\tthis.disable();\r\n\t\t}\r\n\t}\r\n});\r\n\r\nL.Draw.Polyline = L.Draw.Feature.extend({\r\n\tstatics: {\r\n\t\tTYPE: 'polyline'\r\n\t},\r\n\r\n\tPoly: L.Polyline,\r\n\r\n\toptions: {\r\n\t\tallowIntersection: true,\r\n\t\trepeatMode: false,\r\n\t\tdrawError: {\r\n\t\t\tcolor: '#b00b00',\r\n\t\t\ttimeout: 2500\r\n\t\t},\r\n\t\ticon: new L.DivIcon({\r\n\t\t\ticonSize: new L.Point(8, 8),\r\n\t\t\tclassName: 'leaflet-div-icon leaflet-editing-icon'\r\n\t\t}),\r\n\t\tguidelineDistance: 20,\r\n\t\tmaxGuideLineLength: 4000,\r\n\t\tshapeOptions: {\r\n\t\t\tstroke: true,\r\n\t\t\tcolor: '#f06eaa',\r\n\t\t\tweight: 4,\r\n\t\t\topacity: 0.5,\r\n\t\t\tfill: false,\r\n\t\t\tclickable: true\r\n\t\t},\r\n\t\tmetric: true, // Whether to use the metric meaurement system or imperial\r\n\t\tshowLength: true, // Whether to display distance in the tooltip\r\n\t\tzIndexOffset: 2000 // This should be > than the highest z-index any map layers\r\n\t},\r\n\r\n\tinitialize: function (map, options) {\r\n\t\t// Need to set this here to ensure the correct message is used.\r\n\t\tthis.options.drawError.message = L.drawLocal.draw.handlers.polyline.error;\r\n\r\n\t\t// Merge default drawError options with custom options\r\n\t\tif (options && options.drawError) {\r\n\t\t\toptions.drawError = L.Util.extend({}, this.options.drawError, options.drawError);\r\n\t\t}\r\n\r\n\t\t// Save the type so super can fire, need to do this as cannot do this.TYPE :(\r\n\t\tthis.type = L.Draw.Polyline.TYPE;\r\n\r\n\t\tL.Draw.Feature.prototype.initialize.call(this, map, options);\r\n\t},\r\n\r\n\taddHooks: function () {\r\n\t\tL.Draw.Feature.prototype.addHooks.call(this);\r\n\t\tif (this._map) {\r\n\t\t\tthis._markers = [];\r\n\r\n\t\t\tthis._markerGroup = new L.LayerGroup();\r\n\t\t\tthis._map.addLayer(this._markerGroup);\r\n\r\n\t\t\tthis._poly = new L.Polyline([], this.options.shapeOptions);\r\n\r\n\t\t\tthis._tooltip.updateContent(this._getTooltipText());\r\n\r\n\t\t\t// Make a transparent marker that will used to catch click events. These click\r\n\t\t\t// events will create the vertices. We need to do this so we can ensure that\r\n\t\t\t// we can create vertices over other map layers (markers, vector layers). We\r\n\t\t\t// also do not want to trigger any click handlers of objects we are clicking on\r\n\t\t\t// while drawing.\r\n\t\t\tif (!this._mouseMarker) {\r\n\t\t\t\tthis._mouseMarker = L.marker(this._map.getCenter(), {\r\n\t\t\t\t\ticon: L.divIcon({\r\n\t\t\t\t\t\tclassName: 'leaflet-mouse-marker',\r\n\t\t\t\t\t\ticonAnchor: [20, 20],\r\n\t\t\t\t\t\ticonSize: [40, 40]\r\n\t\t\t\t\t}),\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\tzIndexOffset: this.options.zIndexOffset\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._mouseMarker\r\n\t\t\t\t.on('mousedown', this._onMouseDown, this)\r\n\t\t\t\t.addTo(this._map);\r\n\r\n\t\t\tthis._map\r\n\t\t\t\t.on('mousemove', this._onMouseMove, this)\r\n\t\t\t\t.on('mouseup', this._onMouseUp, this)\r\n\t\t\t\t.on('zoomend', this._onZoomEnd, this);\r\n\t\t}\r\n\t},\r\n\r\n\tremoveHooks: function () {\r\n\t\tL.Draw.Feature.prototype.removeHooks.call(this);\r\n\r\n\t\tthis._clearHideErrorTimeout();\r\n\r\n\t\tthis._cleanUpShape();\r\n\r\n\t\t// remove markers from map\r\n\t\tthis._map.removeLayer(this._markerGroup);\r\n\t\tdelete this._markerGroup;\r\n\t\tdelete this._markers;\r\n\r\n\t\tthis._map.removeLayer(this._poly);\r\n\t\tdelete this._poly;\r\n\r\n\t\tthis._mouseMarker\r\n\t\t\t.off('mousedown', this._onMouseDown, this)\r\n\t\t\t.off('mouseup', this._onMouseUp, this);\r\n\t\tthis._map.removeLayer(this._mouseMarker);\r\n\t\tdelete this._mouseMarker;\r\n\r\n\t\t// clean up DOM\r\n\t\tthis._clearGuides();\r\n\r\n\t\tthis._map\r\n\t\t\t.off('mousemove', this._onMouseMove, this)\r\n\t\t\t.off('zoomend', this._onZoomEnd, this);\r\n\t},\r\n\r\n\tdeleteLastVertex: function () {\r\n\t\tif (this._markers.length <= 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar lastMarker = this._markers.pop(),\r\n\t\t\tpoly = this._poly,\r\n\t\t\tlatlng = this._poly.spliceLatLngs(poly.getLatLngs().length - 1, 1)[0];\r\n\r\n\t\tthis._markerGroup.removeLayer(lastMarker);\r\n\r\n\t\tif (poly.getLatLngs().length < 2) {\r\n\t\t\tthis._map.removeLayer(poly);\r\n\t\t}\r\n\r\n\t\tthis._vertexChanged(latlng, false);\r\n\t},\r\n\r\n\taddVertex: function (latlng) {\r\n\t\tvar markersLength = this._markers.length;\r\n\r\n\t\tif (markersLength > 0 && !this.options.allowIntersection && this._poly.newLatLngIntersects(latlng)) {\r\n\t\t\tthis._showErrorTooltip();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (this._errorShown) {\r\n\t\t\tthis._hideErrorTooltip();\r\n\t\t}\r\n\r\n\t\tthis._markers.push(this._createMarker(latlng));\r\n\r\n\t\tthis._poly.addLatLng(latlng);\r\n\r\n\t\tif (this._poly.getLatLngs().length === 2) {\r\n\t\t\tthis._map.addLayer(this._poly);\r\n\t\t}\r\n\r\n\t\tthis._vertexChanged(latlng, true);\r\n\t},\r\n\r\n\t_finishShape: function () {\r\n\t\tvar intersects = this._poly.newLatLngIntersects(this._poly.getLatLngs()[0], true);\r\n\r\n\t\tif ((!this.options.allowIntersection && intersects) || !this._shapeIsValid()) {\r\n\t\t\tthis._showErrorTooltip();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._fireCreatedEvent();\r\n\t\tthis.disable();\r\n\t\tif (this.options.repeatMode) {\r\n\t\t\tthis.enable();\r\n\t\t}\r\n\t},\r\n\r\n\t//Called to verify the shape is valid when the user tries to finish it\r\n\t//Return false if the shape is not valid\r\n\t_shapeIsValid: function () {\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_onZoomEnd: function () {\r\n\t\tthis._updateGuide();\r\n\t},\r\n\r\n\t_onMouseMove: function (e) {\r\n\t\tvar newPos = e.layerPoint,\r\n\t\t\tlatlng = e.latlng;\r\n\r\n\t\t// Save latlng\r\n\t\t// should this be moved to _updateGuide() ?\r\n\t\tthis._currentLatLng = latlng;\r\n\r\n\t\tthis._updateTooltip(latlng);\r\n\r\n\t\t// Update the guide line\r\n\t\tthis._updateGuide(newPos);\r\n\r\n\t\t// Update the mouse marker position\r\n\t\tthis._mouseMarker.setLatLng(latlng);\r\n\r\n\t\tL.DomEvent.preventDefault(e.originalEvent);\r\n\t},\r\n\r\n\t_vertexChanged: function (latlng, added) {\r\n\t\tthis._updateFinishHandler();\r\n\r\n\t\tthis._updateRunningMeasure(latlng, added);\r\n\r\n\t\tthis._clearGuides();\r\n\r\n\t\tthis._updateTooltip();\r\n\t},\r\n\r\n\t_onMouseDown: function (e) {\r\n\t\tvar originalEvent = e.originalEvent;\r\n\t\tthis._mouseDownOrigin = L.point(originalEvent.clientX, originalEvent.clientY);\r\n\t},\r\n\r\n\t_onMouseUp: function (e) {\r\n\t\tif (this._mouseDownOrigin) {\r\n\t\t\t// We detect clicks within a certain tolerance, otherwise let it\r\n\t\t\t// be interpreted as a drag by the map\r\n\t\t\tvar distance = L.point(e.originalEvent.clientX, e.originalEvent.clientY)\r\n\t\t\t\t.distanceTo(this._mouseDownOrigin);\r\n\t\t\tif (Math.abs(distance) < 9 * (window.devicePixelRatio || 1)) {\r\n\t\t\t\tthis.addVertex(e.latlng);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDownOrigin = null;\r\n\t},\r\n\r\n\t_updateFinishHandler: function () {\r\n\t\tvar markerCount = this._markers.length;\r\n\t\t// The last marker should have a click handler to close the polyline\r\n\t\tif (markerCount > 1) {\r\n\t\t\tthis._markers[markerCount - 1].on('click', this._finishShape, this);\r\n\t\t}\r\n\r\n\t\t// Remove the old marker click handler (as only the last point should close the polyline)\r\n\t\tif (markerCount > 2) {\r\n\t\t\tthis._markers[markerCount - 2].off('click', this._finishShape, this);\r\n\t\t}\r\n\t},\r\n\r\n\t_createMarker: function (latlng) {\r\n\t\tvar marker = new L.Marker(latlng, {\r\n\t\t\ticon: this.options.icon,\r\n\t\t\tzIndexOffset: this.options.zIndexOffset * 2\r\n\t\t});\r\n\r\n\t\tthis._markerGroup.addLayer(marker);\r\n\r\n\t\treturn marker;\r\n\t},\r\n\r\n\t_updateGuide: function (newPos) {\r\n\t\tvar markerCount = this._markers.length;\r\n\r\n\t\tif (markerCount > 0) {\r\n\t\t\tnewPos = newPos || this._map.latLngToLayerPoint(this._currentLatLng);\r\n\r\n\t\t\t// draw the guide line\r\n\t\t\tthis._clearGuides();\r\n\t\t\tthis._drawGuide(\r\n\t\t\t\tthis._map.latLngToLayerPoint(this._markers[markerCount - 1].getLatLng()),\r\n\t\t\t\tnewPos\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\t_updateTooltip: function (latLng) {\r\n\t\tvar text = this._getTooltipText();\r\n\r\n\t\tif (latLng) {\r\n\t\t\tthis._tooltip.updatePosition(latLng);\r\n\t\t}\r\n\r\n\t\tif (!this._errorShown) {\r\n\t\t\tthis._tooltip.updateContent(text);\r\n\t\t}\r\n\t},\r\n\r\n\t_drawGuide: function (pointA, pointB) {\r\n\t\tvar length = Math.floor(Math.sqrt(Math.pow((pointB.x - pointA.x), 2) + Math.pow((pointB.y - pointA.y), 2))),\r\n\t\t\tguidelineDistance = this.options.guidelineDistance,\r\n\t\t\tmaxGuideLineLength = this.options.maxGuideLineLength,\r\n\t\t\t// Only draw a guideline with a max length\r\n\t\t\ti = length > maxGuideLineLength ? length - maxGuideLineLength : guidelineDistance,\r\n\t\t\tfraction,\r\n\t\t\tdashPoint,\r\n\t\t\tdash;\r\n\r\n\t\t//create the guides container if we haven't yet\r\n\t\tif (!this._guidesContainer) {\r\n\t\t\tthis._guidesContainer = L.DomUtil.create('div', 'leaflet-draw-guides', this._overlayPane);\r\n\t\t}\r\n\r\n\t\t//draw a dash every GuildeLineDistance\r\n\t\tfor (; i < length; i += this.options.guidelineDistance) {\r\n\t\t\t//work out fraction along line we are\r\n\t\t\tfraction = i / length;\r\n\r\n\t\t\t//calculate new x,y point\r\n\t\t\tdashPoint = {\r\n\t\t\t\tx: Math.floor((pointA.x * (1 - fraction)) + (fraction * pointB.x)),\r\n\t\t\t\ty: Math.floor((pointA.y * (1 - fraction)) + (fraction * pointB.y))\r\n\t\t\t};\r\n\r\n\t\t\t//add guide dash to guide container\r\n\t\t\tdash = L.DomUtil.create('div', 'leaflet-draw-guide-dash', this._guidesContainer);\r\n\t\t\tdash.style.backgroundColor =\r\n\t\t\t\t!this._errorShown ? this.options.shapeOptions.color : this.options.drawError.color;\r\n\r\n\t\t\tL.DomUtil.setPosition(dash, dashPoint);\r\n\t\t}\r\n\t},\r\n\r\n\t_updateGuideColor: function (color) {\r\n\t\tif (this._guidesContainer) {\r\n\t\t\tfor (var i = 0, l = this._guidesContainer.childNodes.length; i < l; i++) {\r\n\t\t\t\tthis._guidesContainer.childNodes[i].style.backgroundColor = color;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// removes all child elements (guide dashes) from the guides container\r\n\t_clearGuides: function () {\r\n\t\tif (this._guidesContainer) {\r\n\t\t\twhile (this._guidesContainer.firstChild) {\r\n\t\t\t\tthis._guidesContainer.removeChild(this._guidesContainer.firstChild);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_getTooltipText: function () {\r\n\t\tvar showLength = this.options.showLength,\r\n\t\t\tlabelText, distanceStr;\r\n\r\n\t\tif (this._markers.length === 0) {\r\n\t\t\tlabelText = {\r\n\t\t\t\ttext: L.drawLocal.draw.handlers.polyline.tooltip.start\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tdistanceStr = showLength ? this._getMeasurementString() : '';\r\n\r\n\t\t\tif (this._markers.length === 1) {\r\n\t\t\t\tlabelText = {\r\n\t\t\t\t\ttext: L.drawLocal.draw.handlers.polyline.tooltip.cont,\r\n\t\t\t\t\tsubtext: distanceStr\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tlabelText = {\r\n\t\t\t\t\ttext: L.drawLocal.draw.handlers.polyline.tooltip.end,\r\n\t\t\t\t\tsubtext: distanceStr\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn labelText;\r\n\t},\r\n\r\n\t_updateRunningMeasure: function (latlng, added) {\r\n\t\tvar markersLength = this._markers.length,\r\n\t\t\tpreviousMarkerIndex, distance;\r\n\r\n\t\tif (this._markers.length === 1) {\r\n\t\t\tthis._measurementRunningTotal = 0;\r\n\t\t} else {\r\n\t\t\tpreviousMarkerIndex = markersLength - (added ? 2 : 1);\r\n\t\t\tdistance = latlng.distanceTo(this._markers[previousMarkerIndex].getLatLng());\r\n\r\n\t\t\tthis._measurementRunningTotal += distance * (added ? 1 : -1);\r\n\t\t}\r\n\t},\r\n\r\n\t_getMeasurementString: function () {\r\n\t\tvar currentLatLng = this._currentLatLng,\r\n\t\t\tpreviousLatLng = this._markers[this._markers.length - 1].getLatLng(),\r\n\t\t\tdistance;\r\n\r\n\t\t// calculate the distance from the last fixed point to the mouse position\r\n\t\tdistance = this._measurementRunningTotal + currentLatLng.distanceTo(previousLatLng);\r\n\r\n\t\treturn L.GeometryUtil.readableDistance(distance, this.options.metric);\r\n\t},\r\n\r\n\t_showErrorTooltip: function () {\r\n\t\tthis._errorShown = true;\r\n\r\n\t\t// Update tooltip\r\n\t\tthis._tooltip\r\n\t\t\t.showAsError()\r\n\t\t\t.updateContent({ text: this.options.drawError.message });\r\n\r\n\t\t// Update shape\r\n\t\tthis._updateGuideColor(this.options.drawError.color);\r\n\t\tthis._poly.setStyle({ color: this.options.drawError.color });\r\n\r\n\t\t// Hide the error after 2 seconds\r\n\t\tthis._clearHideErrorTimeout();\r\n\t\tthis._hideErrorTimeout = setTimeout(L.Util.bind(this._hideErrorTooltip, this), this.options.drawError.timeout);\r\n\t},\r\n\r\n\t_hideErrorTooltip: function () {\r\n\t\tthis._errorShown = false;\r\n\r\n\t\tthis._clearHideErrorTimeout();\r\n\r\n\t\t// Revert tooltip\r\n\t\tthis._tooltip\r\n\t\t\t.removeError()\r\n\t\t\t.updateContent(this._getTooltipText());\r\n\r\n\t\t// Revert shape\r\n\t\tthis._updateGuideColor(this.options.shapeOptions.color);\r\n\t\tthis._poly.setStyle({ color: this.options.shapeOptions.color });\r\n\t},\r\n\r\n\t_clearHideErrorTimeout: function () {\r\n\t\tif (this._hideErrorTimeout) {\r\n\t\t\tclearTimeout(this._hideErrorTimeout);\r\n\t\t\tthis._hideErrorTimeout = null;\r\n\t\t}\r\n\t},\r\n\r\n\t_cleanUpShape: function () {\r\n\t\tif (this._markers.length > 1) {\r\n\t\t\tthis._markers[this._markers.length - 1].off('click', this._finishShape, this);\r\n\t\t}\r\n\t},\r\n\r\n\t_fireCreatedEvent: function () {\r\n\t\tvar poly = new this.Poly(this._poly.getLatLngs(), this.options.shapeOptions);\r\n\t\tL.Draw.Feature.prototype._fireCreatedEvent.call(this, poly);\r\n\t}\r\n});\r\n\r\n\r\nL.Draw.Polygon = L.Draw.Polyline.extend({\r\n\tstatics: {\r\n\t\tTYPE: 'polygon'\r\n\t},\r\n\r\n\tPoly: L.Polygon,\r\n\r\n\toptions: {\r\n\t\tshowArea: false,\r\n\t\tshapeOptions: {\r\n\t\t\tstroke: true,\r\n\t\t\tcolor: '#f06eaa',\r\n\t\t\tweight: 4,\r\n\t\t\topacity: 0.5,\r\n\t\t\tfill: true,\r\n\t\t\tfillColor: null, //same as color by default\r\n\t\t\tfillOpacity: 0.2,\r\n\t\t\tclickable: true\r\n\t\t}\r\n\t},\r\n\r\n\tinitialize: function (map, options) {\r\n\t\tL.Draw.Polyline.prototype.initialize.call(this, map, options);\r\n\r\n\t\t// Save the type so super can fire, need to do this as cannot do this.TYPE :(\r\n\t\tthis.type = L.Draw.Polygon.TYPE;\r\n\t},\r\n\r\n\t_updateFinishHandler: function () {\r\n\t\tvar markerCount = this._markers.length;\r\n\r\n\t\t// The first marker should have a click handler to close the polygon\r\n\t\tif (markerCount === 1) {\r\n\t\t\tthis._markers[0].on('click', this._finishShape, this);\r\n\t\t}\r\n\r\n\t\t// Add and update the double click handler\r\n\t\tif (markerCount > 2) {\r\n\t\t\tthis._markers[markerCount - 1].on('dblclick', this._finishShape, this);\r\n\t\t\t// Only need to remove handler if has been added before\r\n\t\t\tif (markerCount > 3) {\r\n\t\t\t\tthis._markers[markerCount - 2].off('dblclick', this._finishShape, this);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_getTooltipText: function () {\r\n\t\tvar text, subtext;\r\n\r\n\t\tif (this._markers.length === 0) {\r\n\t\t\ttext = L.drawLocal.draw.handlers.polygon.tooltip.start;\r\n\t\t} else if (this._markers.length < 3) {\r\n\t\t\ttext = L.drawLocal.draw.handlers.polygon.tooltip.cont;\r\n\t\t} else {\r\n\t\t\ttext = L.drawLocal.draw.handlers.polygon.tooltip.end;\r\n\t\t\tsubtext = this._getMeasurementString();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttext: text,\r\n\t\t\tsubtext: subtext\r\n\t\t};\r\n\t},\r\n\r\n\t_getMeasurementString: function () {\r\n\t\tvar area = this._area;\r\n\r\n\t\tif (!area) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn L.GeometryUtil.readableArea(area, this.options.metric);\r\n\t},\r\n\r\n\t_shapeIsValid: function () {\r\n\t\treturn this._markers.length >= 3;\r\n\t},\r\n\r\n\t_vertexAdded: function () {\r\n\t\t// Check to see if we should show the area\r\n\t\tif (this.options.allowIntersection || !this.options.showArea) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar latLngs = this._poly.getLatLngs();\r\n\r\n\t\tthis._area = L.GeometryUtil.geodesicArea(latLngs);\r\n\t},\r\n\r\n\t_cleanUpShape: function () {\r\n\t\tvar markerCount = this._markers.length;\r\n\r\n\t\tif (markerCount > 0) {\r\n\t\t\tthis._markers[0].off('click', this._finishShape, this);\r\n\r\n\t\t\tif (markerCount > 2) {\r\n\t\t\t\tthis._markers[markerCount - 1].off('dblclick', this._finishShape, this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\nL.SimpleShape = {};\r\n\r\nL.Draw.SimpleShape = L.Draw.Feature.extend({\r\n\toptions: {\r\n\t\trepeatMode: false\r\n\t},\r\n\r\n\tinitialize: function (map, options) {\r\n\t\tthis._endLabelText = L.drawLocal.draw.handlers.simpleshape.tooltip.end;\r\n\r\n\t\tL.Draw.Feature.prototype.initialize.call(this, map, options);\r\n\t},\r\n\r\n\taddHooks: function () {\r\n\t\tL.Draw.Feature.prototype.addHooks.call(this);\r\n\t\tif (this._map) {\r\n\t\t\tthis._mapDraggable = this._map.dragging.enabled();\r\n\r\n\t\t\tif (this._mapDraggable) {\r\n\t\t\t\tthis._map.dragging.disable();\r\n\t\t\t}\r\n\r\n\t\t\t//TODO refactor: move cursor to styles\r\n\t\t\tthis._container.style.cursor = 'crosshair';\r\n\r\n\t\t\tthis._tooltip.updateContent({ text: this._initialLabelText });\r\n\r\n\t\t\tthis._map\r\n\t\t\t\t.on('mousedown', this._onMouseDown, this)\r\n\t\t\t\t.on('mousemove', this._onMouseMove, this);\r\n\t\t}\r\n\t},\r\n\r\n\tremoveHooks: function () {\r\n\t\tL.Draw.Feature.prototype.removeHooks.call(this);\r\n\t\tif (this._map) {\r\n\t\t\tif (this._mapDraggable) {\r\n\t\t\t\tthis._map.dragging.enable();\r\n\t\t\t}\r\n\r\n\t\t\t//TODO refactor: move cursor to styles\r\n\t\t\tthis._container.style.cursor = '';\r\n\r\n\t\t\tthis._map\r\n\t\t\t\t.off('mousedown', this._onMouseDown, this)\r\n\t\t\t\t.off('mousemove', this._onMouseMove, this);\r\n\r\n\t\t\tL.DomEvent.off(document, 'mouseup', this._onMouseUp, this);\r\n\r\n\t\t\t// If the box element doesn't exist they must not have moved the mouse, so don't need to destroy/return\r\n\t\t\tif (this._shape) {\r\n\t\t\t\tthis._map.removeLayer(this._shape);\r\n\t\t\t\tdelete this._shape;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._isDrawing = false;\r\n\t},\r\n\r\n\t_onMouseDown: function (e) {\r\n\t\tthis._isDrawing = true;\r\n\t\tthis._startLatLng = e.latlng;\r\n\r\n\t\tL.DomEvent\r\n\t\t\t.on(document, 'mouseup', this._onMouseUp, this)\r\n\t\t\t.preventDefault(e.originalEvent);\r\n\t},\r\n\r\n\t_onMouseMove: function (e) {\r\n\t\tvar latlng = e.latlng;\r\n\r\n\t\tthis._tooltip.updatePosition(latlng);\r\n\t\tif (this._isDrawing) {\r\n\t\t\tthis._tooltip.updateContent({ text: this._endLabelText });\r\n\t\t\tthis._drawShape(latlng);\r\n\t\t}\r\n\t},\r\n\r\n\t_onMouseUp: function () {\r\n\t\tif (this._shape) {\r\n\t\t\tthis._fireCreatedEvent();\r\n\t\t}\r\n\r\n\t\tthis.disable();\r\n\t\tif (this.options.repeatMode) {\r\n\t\t\tthis.enable();\r\n\t\t}\r\n\t}\r\n});\r\n\r\nL.Draw.Rectangle = L.Draw.SimpleShape.extend({\r\n\tstatics: {\r\n\t\tTYPE: 'rectangle'\r\n\t},\r\n\r\n\toptions: {\r\n\t\tshapeOptions: {\r\n\t\t\tstroke: true,\r\n\t\t\tcolor: '#f06eaa',\r\n\t\t\tweight: 4,\r\n\t\t\topacity: 0.5,\r\n\t\t\tfill: true,\r\n\t\t\tfillColor: null, //same as color by default\r\n\t\t\tfillOpacity: 0.2,\r\n\t\t\tclickable: true\r\n\t\t}\r\n\t},\r\n\r\n\tinitialize: function (map, options) {\r\n\t\t// Save the type so super can fire, need to do this as cannot do this.TYPE :(\r\n\t\tthis.type = L.Draw.Rectangle.TYPE;\r\n\r\n\t\tthis._initialLabelText = L.drawLocal.draw.handlers.rectangle.tooltip.start;\r\n\r\n\t\tL.Draw.SimpleShape.prototype.initialize.call(this, map, options);\r\n\t},\r\n\r\n\t_drawShape: function (latlng) {\r\n\t\tif (!this._shape) {\r\n\t\t\tthis._shape = new L.Rectangle(new L.LatLngBounds(this._startLatLng, latlng), this.options.shapeOptions);\r\n\t\t\tthis._map.addLayer(this._shape);\r\n\t\t} else {\r\n\t\t\tthis._shape.setBounds(new L.LatLngBounds(this._startLatLng, latlng));\r\n\t\t}\r\n\t},\r\n\r\n\t_fireCreatedEvent: function () {\r\n\t\tvar rectangle = new L.Rectangle(this._shape.getBounds(), this.options.shapeOptions);\r\n\t\tL.Draw.SimpleShape.prototype._fireCreatedEvent.call(this, rectangle);\r\n\t}\r\n});\r\n\r\n\r\nL.Draw.Circle = L.Draw.SimpleShape.extend({\r\n\tstatics: {\r\n\t\tTYPE: 'circle'\r\n\t},\r\n\r\n\toptions: {\r\n\t\tshapeOptions: {\r\n\t\t\tstroke: true,\r\n\t\t\tcolor: '#f06eaa',\r\n\t\t\tweight: 4,\r\n\t\t\topacity: 0.5,\r\n\t\t\tfill: true,\r\n\t\t\tfillColor: null, //same as color by default\r\n\t\t\tfillOpacity: 0.2,\r\n\t\t\tclickable: true\r\n\t\t},\r\n\t\tshowRadius: true,\r\n\t\tmetric: true // Whether to use the metric meaurement system or imperial\r\n\t},\r\n\r\n\tinitialize: function (map, options) {\r\n\t\t// Save the type so super can fire, need to do this as cannot do this.TYPE :(\r\n\t\tthis.type = L.Draw.Circle.TYPE;\r\n\r\n\t\tthis._initialLabelText = L.drawLocal.draw.handlers.circle.tooltip.start;\r\n\r\n\t\tL.Draw.SimpleShape.prototype.initialize.call(this, map, options);\r\n\t},\r\n\r\n\t_drawShape: function (latlng) {\r\n\t\tif (!this._shape) {\r\n\t\t\tthis._shape = new L.Circle(this._startLatLng, this._startLatLng.distanceTo(latlng), this.options.shapeOptions);\r\n\t\t\tthis._map.addLayer(this._shape);\r\n\t\t} else {\r\n\t\t\tthis._shape.setRadius(this._startLatLng.distanceTo(latlng));\r\n\t\t}\r\n\t},\r\n\r\n\t_fireCreatedEvent: function () {\r\n\t\tvar circle = new L.Circle(this._startLatLng, this._shape.getRadius(), this.options.shapeOptions);\r\n\t\tL.Draw.SimpleShape.prototype._fireCreatedEvent.call(this, circle);\r\n\t},\r\n\r\n\t_onMouseMove: function (e) {\r\n\t\tvar latlng = e.latlng,\r\n\t\t\tshowRadius = this.options.showRadius,\r\n\t\t\tuseMetric = this.options.metric,\r\n\t\t\tradius;\r\n\r\n\t\tthis._tooltip.updatePosition(latlng);\r\n\t\tif (this._isDrawing) {\r\n\t\t\tthis._drawShape(latlng);\r\n\r\n\t\t\t// Get the new radius (rounded to 1 dp)\r\n\t\t\tradius = this._shape.getRadius().toFixed(1);\r\n\r\n\t\t\tthis._tooltip.updateContent({\r\n\t\t\t\ttext: this._endLabelText,\r\n\t\t\t\tsubtext: showRadius ? 'Radius: ' + L.GeometryUtil.readableDistance(radius, useMetric) : ''\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\nL.Draw.Marker = L.Draw.Feature.extend({\r\n\tstatics: {\r\n\t\tTYPE: 'marker'\r\n\t},\r\n\r\n\toptions: {\r\n\t\ticon: new L.Icon.Default(),\r\n\t\trepeatMode: false,\r\n\t\tzIndexOffset: 2000 // This should be > than the highest z-index any markers\r\n\t},\r\n\r\n\tinitialize: function (map, options) {\r\n\t\t// Save the type so super can fire, need to do this as cannot do this.TYPE :(\r\n\t\tthis.type = L.Draw.Marker.TYPE;\r\n\r\n\t\tL.Draw.Feature.prototype.initialize.call(this, map, options);\r\n\t},\r\n\r\n\taddHooks: function () {\r\n\t\tL.Draw.Feature.prototype.addHooks.call(this);\r\n\r\n\t\tif (this._map) {\r\n\t\t\tthis._tooltip.updateContent({ text: L.drawLocal.draw.handlers.marker.tooltip.start });\r\n\r\n\t\t\t// Same mouseMarker as in Draw.Polyline\r\n\t\t\tif (!this._mouseMarker) {\r\n\t\t\t\tthis._mouseMarker = L.marker(this._map.getCenter(), {\r\n\t\t\t\t\ticon: L.divIcon({\r\n\t\t\t\t\t\tclassName: 'leaflet-mouse-marker',\r\n\t\t\t\t\t\ticonAnchor: [20, 20],\r\n\t\t\t\t\t\ticonSize: [40, 40]\r\n\t\t\t\t\t}),\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\tzIndexOffset: this.options.zIndexOffset\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._mouseMarker\r\n\t\t\t\t.on('click', this._onClick, this)\r\n\t\t\t\t.addTo(this._map);\r\n\r\n\t\t\tthis._map.on('mousemove', this._onMouseMove, this);\r\n\t\t}\r\n\t},\r\n\r\n\tremoveHooks: function () {\r\n\t\tL.Draw.Feature.prototype.removeHooks.call(this);\r\n\r\n\t\tif (this._map) {\r\n\t\t\tif (this._marker) {\r\n\t\t\t\tthis._marker.off('click', this._onClick, this);\r\n\t\t\t\tthis._map\r\n\t\t\t\t\t.off('click', this._onClick, this)\r\n\t\t\t\t\t.removeLayer(this._marker);\r\n\t\t\t\tdelete this._marker;\r\n\t\t\t}\r\n\r\n\t\t\tthis._mouseMarker.off('click', this._onClick, this);\r\n\t\t\tthis._map.removeLayer(this._mouseMarker);\r\n\t\t\tdelete this._mouseMarker;\r\n\r\n\t\t\tthis._map.off('mousemove', this._onMouseMove, this);\r\n\t\t}\r\n\t},\r\n\r\n\t_onMouseMove: function (e) {\r\n\t\tvar latlng = e.latlng;\r\n\r\n\t\tthis._tooltip.updatePosition(latlng);\r\n\t\tthis._mouseMarker.setLatLng(latlng);\r\n\r\n\t\tif (!this._marker) {\r\n\t\t\tthis._marker = new L.Marker(latlng, {\r\n\t\t\t\ticon: this.options.icon,\r\n\t\t\t\tzIndexOffset: this.options.zIndexOffset\r\n\t\t\t});\r\n\t\t\t// Bind to both marker and map to make sure we get the click event.\r\n\t\t\tthis._marker.on('click', this._onClick, this);\r\n\t\t\tthis._map\r\n\t\t\t\t.on('click', this._onClick, this)\r\n\t\t\t\t.addLayer(this._marker);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlatlng = this._mouseMarker.getLatLng();\r\n\t\t\tthis._marker.setLatLng(latlng);\r\n\t\t}\r\n\t},\r\n\r\n\t_onClick: function () {\r\n\t\tthis._fireCreatedEvent();\r\n\r\n\t\tthis.disable();\r\n\t\tif (this.options.repeatMode) {\r\n\t\t\tthis.enable();\r\n\t\t}\r\n\t},\r\n\r\n\t_fireCreatedEvent: function () {\r\n\t\tvar marker = new L.Marker(this._marker.getLatLng(), { icon: this.options.icon });\r\n\t\tL.Draw.Feature.prototype._fireCreatedEvent.call(this, marker);\r\n\t}\r\n});\r\n\r\n\r\nL.Edit = L.Edit || {};\r\n\r\n/*\r\n * L.Edit.Poly is an editing handler for polylines and polygons.\r\n */\r\n\r\nL.Edit.Poly = L.Handler.extend({\r\n\toptions: {\r\n\t\ticon: new L.DivIcon({\r\n\t\t\ticonSize: new L.Point(8, 8),\r\n\t\t\tclassName: 'leaflet-div-icon leaflet-editing-icon'\r\n\t\t})\r\n\t},\r\n\r\n\tinitialize: function (poly, options) {\r\n\t\tthis._poly = poly;\r\n\t\tL.setOptions(this, options);\r\n\t},\r\n\r\n\taddHooks: function () {\r\n\t\tif (this._poly._map) {\r\n\t\t\tif (!this._markerGroup) {\r\n\t\t\t\tthis._initMarkers();\r\n\t\t\t}\r\n\t\t\tthis._poly._map.addLayer(this._markerGroup);\r\n\t\t}\r\n\t},\r\n\r\n\tremoveHooks: function () {\r\n\t\tif (this._poly._map) {\r\n\t\t\tthis._poly._map.removeLayer(this._markerGroup);\r\n\t\t\tdelete this._markerGroup;\r\n\t\t\tdelete this._markers;\r\n\t\t}\r\n\t},\r\n\r\n\tupdateMarkers: function () {\r\n\t\tthis._markerGroup.clearLayers();\r\n\t\tthis._initMarkers();\r\n\t},\r\n\r\n\t_initMarkers: function () {\r\n\t\tif (!this._markerGroup) {\r\n\t\t\tthis._markerGroup = new L.LayerGroup();\r\n\t\t}\r\n\t\tthis._markers = [];\r\n\r\n\t\tvar latlngs = this._poly._latlngs,\r\n\t\t\ti, j, len, marker;\r\n\r\n\t\t// TODO refactor holes implementation in Polygon to support it here\r\n\r\n\t\tfor (i = 0, len = latlngs.length; i < len; i++) {\r\n\r\n\t\t\tmarker = this._createMarker(latlngs[i], i);\r\n\t\t\tmarker.on('click', this._onMarkerClick, this);\r\n\t\t\tthis._markers.push(marker);\r\n\t\t}\r\n\r\n\t\tvar markerLeft, markerRight;\r\n\r\n\t\tfor (i = 0, j = len - 1; i < len; j = i++) {\r\n\t\t\tif (i === 0 && !(L.Polygon && (this._poly instanceof L.Polygon))) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tmarkerLeft = this._markers[j];\r\n\t\t\tmarkerRight = this._markers[i];\r\n\r\n\t\t\tthis._createMiddleMarker(markerLeft, markerRight);\r\n\t\t\tthis._updatePrevNext(markerLeft, markerRight);\r\n\t\t}\r\n\t},\r\n\r\n\t_createMarker: function (latlng, index) {\r\n\t\tvar marker = new L.Marker(latlng, {\r\n\t\t\tdraggable: true,\r\n\t\t\ticon: this.options.icon\r\n\t\t});\r\n\r\n\t\tmarker._origLatLng = latlng;\r\n\t\tmarker._index = index;\r\n\r\n\t\tmarker.on('drag', this._onMarkerDrag, this);\r\n\t\tmarker.on('dragend', this._fireEdit, this);\r\n\r\n\t\tthis._markerGroup.addLayer(marker);\r\n\r\n\t\treturn marker;\r\n\t},\r\n\r\n\t_removeMarker: function (marker) {\r\n\t\tvar i = marker._index;\r\n\r\n\t\tthis._markerGroup.removeLayer(marker);\r\n\t\tthis._markers.splice(i, 1);\r\n\t\tthis._poly.spliceLatLngs(i, 1);\r\n\t\tthis._updateIndexes(i, -1);\r\n\r\n\t\tmarker\r\n\t\t\t.off('drag', this._onMarkerDrag, this)\r\n\t\t\t.off('dragend', this._fireEdit, this)\r\n\t\t\t.off('click', this._onMarkerClick, this);\r\n\t},\r\n\r\n\t_fireEdit: function () {\r\n\t\tthis._poly.edited = true;\r\n\t\tthis._poly.fire('edit');\r\n\t},\r\n\r\n\t_onMarkerDrag: function (e) {\r\n\t\tvar marker = e.target;\r\n\r\n\t\tL.extend(marker._origLatLng, marker._latlng);\r\n\r\n\t\tif (marker._middleLeft) {\r\n\t\t\tmarker._middleLeft.setLatLng(this._getMiddleLatLng(marker._prev, marker));\r\n\t\t}\r\n\t\tif (marker._middleRight) {\r\n\t\t\tmarker._middleRight.setLatLng(this._getMiddleLatLng(marker, marker._next));\r\n\t\t}\r\n\r\n\t\tthis._poly.redraw();\r\n\t},\r\n\r\n\t_onMarkerClick: function (e) {\r\n\t\tvar minPoints = L.Polygon && (this._poly instanceof L.Polygon) ? 4 : 3,\r\n\t\t\tmarker = e.target;\r\n\r\n\t\t// If removing this point would create an invalid polyline/polygon don't remove\r\n\t\tif (this._poly._latlngs.length < minPoints) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// remove the marker\r\n\t\tthis._removeMarker(marker);\r\n\r\n\t\t// update prev/next links of adjacent markers\r\n\t\tthis._updatePrevNext(marker._prev, marker._next);\r\n\r\n\t\t// remove ghost markers near the removed marker\r\n\t\tif (marker._middleLeft) {\r\n\t\t\tthis._markerGroup.removeLayer(marker._middleLeft);\r\n\t\t}\r\n\t\tif (marker._middleRight) {\r\n\t\t\tthis._markerGroup.removeLayer(marker._middleRight);\r\n\t\t}\r\n\r\n\t\t// create a ghost marker in place of the removed one\r\n\t\tif (marker._prev && marker._next) {\r\n\t\t\tthis._createMiddleMarker(marker._prev, marker._next);\r\n\r\n\t\t} else if (!marker._prev) {\r\n\t\t\tmarker._next._middleLeft = null;\r\n\r\n\t\t} else if (!marker._next) {\r\n\t\t\tmarker._prev._middleRight = null;\r\n\t\t}\r\n\r\n\t\tthis._fireEdit();\r\n\t},\r\n\r\n\t_updateIndexes: function (index, delta) {\r\n\t\tthis._markerGroup.eachLayer(function (marker) {\r\n\t\t\tif (marker._index > index) {\r\n\t\t\t\tmarker._index += delta;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t_createMiddleMarker: function (marker1, marker2) {\r\n\t\tvar latlng = this._getMiddleLatLng(marker1, marker2),\r\n\t\t    marker = this._createMarker(latlng),\r\n\t\t    onClick,\r\n\t\t    onDragStart,\r\n\t\t    onDragEnd;\r\n\r\n\t\tmarker.setOpacity(0.6);\r\n\r\n\t\tmarker1._middleRight = marker2._middleLeft = marker;\r\n\r\n\t\tonDragStart = function () {\r\n\t\t\tvar i = marker2._index;\r\n\r\n\t\t\tmarker._index = i;\r\n\r\n\t\t\tmarker\r\n\t\t\t    .off('click', onClick, this)\r\n\t\t\t    .on('click', this._onMarkerClick, this);\r\n\r\n\t\t\tlatlng.lat = marker.getLatLng().lat;\r\n\t\t\tlatlng.lng = marker.getLatLng().lng;\r\n\t\t\tthis._poly.spliceLatLngs(i, 0, latlng);\r\n\t\t\tthis._markers.splice(i, 0, marker);\r\n\r\n\t\t\tmarker.setOpacity(1);\r\n\r\n\t\t\tthis._updateIndexes(i, 1);\r\n\t\t\tmarker2._index++;\r\n\t\t\tthis._updatePrevNext(marker1, marker);\r\n\t\t\tthis._updatePrevNext(marker, marker2);\r\n\r\n\t\t\tthis._poly.fire('editstart');\r\n\t\t};\r\n\r\n\t\tonDragEnd = function () {\r\n\t\t\tmarker.off('dragstart', onDragStart, this);\r\n\t\t\tmarker.off('dragend', onDragEnd, this);\r\n\r\n\t\t\tthis._createMiddleMarker(marker1, marker);\r\n\t\t\tthis._createMiddleMarker(marker, marker2);\r\n\t\t};\r\n\r\n\t\tonClick = function () {\r\n\t\t\tonDragStart.call(this);\r\n\t\t\tonDragEnd.call(this);\r\n\t\t\tthis._fireEdit();\r\n\t\t};\r\n\r\n\t\tmarker\r\n\t\t    .on('click', onClick, this)\r\n\t\t    .on('dragstart', onDragStart, this)\r\n\t\t    .on('dragend', onDragEnd, this);\r\n\r\n\t\tthis._markerGroup.addLayer(marker);\r\n\t},\r\n\r\n\t_updatePrevNext: function (marker1, marker2) {\r\n\t\tif (marker1) {\r\n\t\t\tmarker1._next = marker2;\r\n\t\t}\r\n\t\tif (marker2) {\r\n\t\t\tmarker2._prev = marker1;\r\n\t\t}\r\n\t},\r\n\r\n\t_getMiddleLatLng: function (marker1, marker2) {\r\n\t\tvar map = this._poly._map,\r\n\t\t    p1 = map.project(marker1.getLatLng()),\r\n\t\t    p2 = map.project(marker2.getLatLng());\r\n\r\n\t\treturn map.unproject(p1._add(p2)._divideBy(2));\r\n\t}\r\n});\r\n\r\nL.Polyline.addInitHook(function () {\r\n\r\n\t// Check to see if handler has already been initialized. This is to support versions of Leaflet that still have L.Handler.PolyEdit\r\n\tif (this.editing) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (L.Edit.Poly) {\r\n\t\tthis.editing = new L.Edit.Poly(this);\r\n\r\n\t\tif (this.options.editable) {\r\n\t\t\tthis.editing.enable();\r\n\t\t}\r\n\t}\r\n\r\n\tthis.on('add', function () {\r\n\t\tif (this.editing && this.editing.enabled()) {\r\n\t\t\tthis.editing.addHooks();\r\n\t\t}\r\n\t});\r\n\r\n\tthis.on('remove', function () {\r\n\t\tif (this.editing && this.editing.enabled()) {\r\n\t\t\tthis.editing.removeHooks();\r\n\t\t}\r\n\t});\r\n});\r\n\r\n\r\nL.Edit = L.Edit || {};\r\n\r\nL.Edit.SimpleShape = L.Handler.extend({\r\n\toptions: {\r\n\t\tmoveIcon: new L.DivIcon({\r\n\t\t\ticonSize: new L.Point(8, 8),\r\n\t\t\tclassName: 'leaflet-div-icon leaflet-editing-icon leaflet-edit-move'\r\n\t\t}),\r\n\t\tresizeIcon: new L.DivIcon({\r\n\t\t\ticonSize: new L.Point(8, 8),\r\n\t\t\tclassName: 'leaflet-div-icon leaflet-editing-icon leaflet-edit-resize'\r\n\t\t})\r\n\t},\r\n\r\n\tinitialize: function (shape, options) {\r\n\t\tthis._shape = shape;\r\n\t\tL.Util.setOptions(this, options);\r\n\t},\r\n\r\n\taddHooks: function () {\r\n\t\tif (this._shape._map) {\r\n\t\t\tthis._map = this._shape._map;\r\n\r\n\t\t\tif (!this._markerGroup) {\r\n\t\t\t\tthis._initMarkers();\r\n\t\t\t}\r\n\t\t\tthis._map.addLayer(this._markerGroup);\r\n\t\t}\r\n\t},\r\n\r\n\tremoveHooks: function () {\r\n\t\tif (this._shape._map) {\r\n\t\t\tthis._unbindMarker(this._moveMarker);\r\n\r\n\t\t\tfor (var i = 0, l = this._resizeMarkers.length; i < l; i++) {\r\n\t\t\t\tthis._unbindMarker(this._resizeMarkers[i]);\r\n\t\t\t}\r\n\t\t\tthis._resizeMarkers = null;\r\n\r\n\t\t\tthis._map.removeLayer(this._markerGroup);\r\n\t\t\tdelete this._markerGroup;\r\n\t\t}\r\n\r\n\t\tthis._map = null;\r\n\t},\r\n\r\n\tupdateMarkers: function () {\r\n\t\tthis._markerGroup.clearLayers();\r\n\t\tthis._initMarkers();\r\n\t},\r\n\r\n\t_initMarkers: function () {\r\n\t\tif (!this._markerGroup) {\r\n\t\t\tthis._markerGroup = new L.LayerGroup();\r\n\t\t}\r\n\r\n\t\t// Create center marker\r\n\t\tthis._createMoveMarker();\r\n\r\n\t\t// Create edge marker\r\n\t\tthis._createResizeMarker();\r\n\t},\r\n\r\n\t_createMoveMarker: function () {\r\n\t\t// Children override\r\n\t},\r\n\r\n\t_createResizeMarker: function () {\r\n\t\t// Children override\r\n\t},\r\n\r\n\t_createMarker: function (latlng, icon) {\r\n\t\tvar marker = new L.Marker(latlng, {\r\n\t\t\tdraggable: true,\r\n\t\t\ticon: icon,\r\n\t\t\tzIndexOffset: 10\r\n\t\t});\r\n\r\n\t\tthis._bindMarker(marker);\r\n\r\n\t\tthis._markerGroup.addLayer(marker);\r\n\r\n\t\treturn marker;\r\n\t},\r\n\r\n\t_bindMarker: function (marker) {\r\n\t\tmarker\r\n\t\t\t.on('dragstart', this._onMarkerDragStart, this)\r\n\t\t\t.on('drag', this._onMarkerDrag, this)\r\n\t\t\t.on('dragend', this._onMarkerDragEnd, this);\r\n\t},\r\n\r\n\t_unbindMarker: function (marker) {\r\n\t\tmarker\r\n\t\t\t.off('dragstart', this._onMarkerDragStart, this)\r\n\t\t\t.off('drag', this._onMarkerDrag, this)\r\n\t\t\t.off('dragend', this._onMarkerDragEnd, this);\r\n\t},\r\n\r\n\t_onMarkerDragStart: function (e) {\r\n\t\tvar marker = e.target;\r\n\t\tmarker.setOpacity(0);\r\n\r\n\t\tthis._shape.fire('editstart');\r\n\t},\r\n\r\n\t_fireEdit: function () {\r\n\t\tthis._shape.edited = true;\r\n\t\tthis._shape.fire('edit');\r\n\t},\r\n\r\n\t_onMarkerDrag: function (e) {\r\n\t\tvar marker = e.target,\r\n\t\t\tlatlng = marker.getLatLng();\r\n\r\n\t\tif (marker === this._moveMarker) {\r\n\t\t\tthis._move(latlng);\r\n\t\t} else {\r\n\t\t\tthis._resize(latlng);\r\n\t\t}\r\n\r\n\t\tthis._shape.redraw();\r\n\t},\r\n\r\n\t_onMarkerDragEnd: function (e) {\r\n\t\tvar marker = e.target;\r\n\t\tmarker.setOpacity(1);\r\n\r\n\t\tthis._fireEdit();\r\n\t},\r\n\r\n\t_move: function () {\r\n\t\t// Children override\r\n\t},\r\n\r\n\t_resize: function () {\r\n\t\t// Children override\r\n\t}\r\n});\r\n\r\n\r\nL.Edit = L.Edit || {};\r\n\r\nL.Edit.Rectangle = L.Edit.SimpleShape.extend({\r\n\t_createMoveMarker: function () {\r\n\t\tvar bounds = this._shape.getBounds(),\r\n\t\t\tcenter = bounds.getCenter();\r\n\r\n\t\tthis._moveMarker = this._createMarker(center, this.options.moveIcon);\r\n\t},\r\n\r\n\t_createResizeMarker: function () {\r\n\t\tvar corners = this._getCorners();\r\n\r\n\t\tthis._resizeMarkers = [];\r\n\r\n\t\tfor (var i = 0, l = corners.length; i < l; i++) {\r\n\t\t\tthis._resizeMarkers.push(this._createMarker(corners[i], this.options.resizeIcon));\r\n\t\t\t// Monkey in the corner index as we will need to know this for dragging\r\n\t\t\tthis._resizeMarkers[i]._cornerIndex = i;\r\n\t\t}\r\n\t},\r\n\r\n\t_onMarkerDragStart: function (e) {\r\n\t\tL.Edit.SimpleShape.prototype._onMarkerDragStart.call(this, e);\r\n\r\n\t\t// Save a reference to the opposite point\r\n\t\tvar corners = this._getCorners(),\r\n\t\t\tmarker = e.target,\r\n\t\t\tcurrentCornerIndex = marker._cornerIndex;\r\n\r\n\t\tthis._oppositeCorner = corners[(currentCornerIndex + 2) % 4];\r\n\r\n\t\tthis._toggleCornerMarkers(0, currentCornerIndex);\r\n\t},\r\n\r\n\t_onMarkerDragEnd: function (e) {\r\n\t\tvar marker = e.target,\r\n\t\t\tbounds, center;\r\n\r\n\t\t// Reset move marker position to the center\r\n\t\tif (marker === this._moveMarker) {\r\n\t\t\tbounds = this._shape.getBounds();\r\n\t\t\tcenter = bounds.getCenter();\r\n\r\n\t\t\tmarker.setLatLng(center);\r\n\t\t}\r\n\r\n\t\tthis._toggleCornerMarkers(1);\r\n\r\n\t\tthis._repositionCornerMarkers();\r\n\r\n\t\tL.Edit.SimpleShape.prototype._onMarkerDragEnd.call(this, e);\r\n\t},\r\n\r\n\t_move: function (newCenter) {\r\n\t\tvar latlngs = this._shape.getLatLngs(),\r\n\t\t\tbounds = this._shape.getBounds(),\r\n\t\t\tcenter = bounds.getCenter(),\r\n\t\t\toffset, newLatLngs = [];\r\n\r\n\t\t// Offset the latlngs to the new center\r\n\t\tfor (var i = 0, l = latlngs.length; i < l; i++) {\r\n\t\t\toffset = [latlngs[i].lat - center.lat, latlngs[i].lng - center.lng];\r\n\t\t\tnewLatLngs.push([newCenter.lat + offset[0], newCenter.lng + offset[1]]);\r\n\t\t}\r\n\r\n\t\tthis._shape.setLatLngs(newLatLngs);\r\n\r\n\t\t// Reposition the resize markers\r\n\t\tthis._repositionCornerMarkers();\r\n\t},\r\n\r\n\t_resize: function (latlng) {\r\n\t\tvar bounds;\r\n\r\n\t\t// Update the shape based on the current position of this corner and the opposite point\r\n\t\tthis._shape.setBounds(L.latLngBounds(latlng, this._oppositeCorner));\r\n\r\n\t\t// Reposition the move marker\r\n\t\tbounds = this._shape.getBounds();\r\n\t\tthis._moveMarker.setLatLng(bounds.getCenter());\r\n\t},\r\n\r\n\t_getCorners: function () {\r\n\t\tvar bounds = this._shape.getBounds(),\r\n\t\t\tnw = bounds.getNorthWest(),\r\n\t\t\tne = bounds.getNorthEast(),\r\n\t\t\tse = bounds.getSouthEast(),\r\n\t\t\tsw = bounds.getSouthWest();\r\n\r\n\t\treturn [nw, ne, se, sw];\r\n\t},\r\n\r\n\t_toggleCornerMarkers: function (opacity) {\r\n\t\tfor (var i = 0, l = this._resizeMarkers.length; i < l; i++) {\r\n\t\t\tthis._resizeMarkers[i].setOpacity(opacity);\r\n\t\t}\r\n\t},\r\n\r\n\t_repositionCornerMarkers: function () {\r\n\t\tvar corners = this._getCorners();\r\n\r\n\t\tfor (var i = 0, l = this._resizeMarkers.length; i < l; i++) {\r\n\t\t\tthis._resizeMarkers[i].setLatLng(corners[i]);\r\n\t\t}\r\n\t}\r\n});\r\n\r\nL.Rectangle.addInitHook(function () {\r\n\tif (L.Edit.Rectangle) {\r\n\t\tthis.editing = new L.Edit.Rectangle(this);\r\n\r\n\t\tif (this.options.editable) {\r\n\t\t\tthis.editing.enable();\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\nL.Edit = L.Edit || {};\r\n\r\nL.Edit.Circle = L.Edit.SimpleShape.extend({\r\n\t_createMoveMarker: function () {\r\n\t\tvar center = this._shape.getLatLng();\r\n\r\n\t\tthis._moveMarker = this._createMarker(center, this.options.moveIcon);\r\n\t},\r\n\r\n\t_createResizeMarker: function () {\r\n\t\tvar center = this._shape.getLatLng(),\r\n\t\t\tresizemarkerPoint = this._getResizeMarkerPoint(center);\r\n\r\n\t\tthis._resizeMarkers = [];\r\n\t\tthis._resizeMarkers.push(this._createMarker(resizemarkerPoint, this.options.resizeIcon));\r\n\t},\r\n\r\n\t_getResizeMarkerPoint: function (latlng) {\r\n\t\t// From L.shape.getBounds()\r\n\t\tvar delta = this._shape._radius * Math.cos(Math.PI / 4),\r\n\t\t\tpoint = this._map.project(latlng);\r\n\t\treturn this._map.unproject([point.x + delta, point.y - delta]);\r\n\t},\r\n\r\n\t_move: function (latlng) {\r\n\t\tvar resizemarkerPoint = this._getResizeMarkerPoint(latlng);\r\n\r\n\t\t// Move the resize marker\r\n\t\tthis._resizeMarkers[0].setLatLng(resizemarkerPoint);\r\n\r\n\t\t// Move the circle\r\n\t\tthis._shape.setLatLng(latlng);\r\n\t},\r\n\r\n\t_resize: function (latlng) {\r\n\t\tvar moveLatLng = this._moveMarker.getLatLng(),\r\n\t\t\tradius = moveLatLng.distanceTo(latlng);\r\n\r\n\t\tthis._shape.setRadius(radius);\r\n\t}\r\n});\r\n\r\nL.Circle.addInitHook(function () {\r\n\tif (L.Edit.Circle) {\r\n\t\tthis.editing = new L.Edit.Circle(this);\r\n\r\n\t\tif (this.options.editable) {\r\n\t\t\tthis.editing.enable();\r\n\t\t}\r\n\t}\r\n\r\n\tthis.on('add', function () {\r\n\t\tif (this.editing && this.editing.enabled()) {\r\n\t\t\tthis.editing.addHooks();\r\n\t\t}\r\n\t});\r\n\r\n\tthis.on('remove', function () {\r\n\t\tif (this.editing && this.editing.enabled()) {\r\n\t\t\tthis.editing.removeHooks();\r\n\t\t}\r\n\t});\r\n});\r\n\r\n/*\r\n * L.LatLngUtil contains different utility functions for LatLngs.\r\n */\r\n\r\nL.LatLngUtil = {\r\n\t// Clones a LatLngs[], returns [][]\r\n\tcloneLatLngs: function (latlngs) {\r\n\t\tvar clone = [];\r\n\t\tfor (var i = 0, l = latlngs.length; i < l; i++) {\r\n\t\t\tclone.push(this.cloneLatLng(latlngs[i]));\r\n\t\t}\r\n\t\treturn clone;\r\n\t},\r\n\r\n\tcloneLatLng: function (latlng) {\r\n\t\treturn L.latLng(latlng.lat, latlng.lng);\r\n\t}\r\n};\r\n\r\nL.GeometryUtil = L.extend(L.GeometryUtil || {}, {\r\n\t// Ported from the OpenLayers implementation. See https://github.com/openlayers/openlayers/blob/master/lib/OpenLayers/Geometry/LinearRing.js#L270\r\n\tgeodesicArea: function (latLngs) {\r\n\t\tvar pointsCount = latLngs.length,\r\n\t\t\tarea = 0.0,\r\n\t\t\td2r = L.LatLng.DEG_TO_RAD,\r\n\t\t\tp1, p2;\r\n\r\n\t\tif (pointsCount > 2) {\r\n\t\t\tfor (var i = 0; i < pointsCount; i++) {\r\n\t\t\t\tp1 = latLngs[i];\r\n\t\t\t\tp2 = latLngs[(i + 1) % pointsCount];\r\n\t\t\t\tarea += ((p2.lng - p1.lng) * d2r) *\r\n\t\t\t\t\t\t(2 + Math.sin(p1.lat * d2r) + Math.sin(p2.lat * d2r));\r\n\t\t\t}\r\n\t\t\tarea = area * 6378137.0 * 6378137.0 / 2.0;\r\n\t\t}\r\n\r\n\t\treturn Math.abs(area);\r\n\t},\r\n\r\n\treadableArea: function (area, isMetric) {\r\n\t\tvar areaStr;\r\n\r\n\t\tif (isMetric) {\r\n\t\t\tif (area >= 10000) {\r\n\t\t\t\tareaStr = (area * 0.0001).toFixed(2) + ' ha';\r\n\t\t\t} else {\r\n\t\t\t\tareaStr = area.toFixed(2) + ' m&sup2;';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tarea *= 0.836127; // Square yards in 1 meter\r\n\r\n\t\t\tif (area >= 3097600) { //3097600 square yards in 1 square mile\r\n\t\t\t\tareaStr = (area / 3097600).toFixed(2) + ' mi&sup2;';\r\n\t\t\t} else if (area >= 4840) {//48040 square yards in 1 acre\r\n\t\t\t\tareaStr = (area / 4840).toFixed(2) + ' acres';\r\n\t\t\t} else {\r\n\t\t\t\tareaStr = Math.ceil(area) + ' yd&sup2;';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn areaStr;\r\n\t},\r\n\r\n\treadableDistance: function (distance, isMetric) {\r\n\t\tvar distanceStr;\r\n\r\n\t\tif (isMetric) {\r\n\t\t\t// show metres when distance is < 1km, then show km\r\n\t\t\tif (distance > 1000) {\r\n\t\t\t\tdistanceStr = (distance  / 1000).toFixed(2) + ' km';\r\n\t\t\t} else {\r\n\t\t\t\tdistanceStr = Math.ceil(distance) + ' m';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdistance *= 1.09361;\r\n\r\n\t\t\tif (distance > 1760) {\r\n\t\t\t\tdistanceStr = (distance / 1760).toFixed(2) + ' miles';\r\n\t\t\t} else {\r\n\t\t\t\tdistanceStr = Math.ceil(distance) + ' yd';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn distanceStr;\r\n\t}\r\n});\r\n\r\nL.Util.extend(L.LineUtil, {\r\n\t// Checks to see if two line segments intersect. Does not handle degenerate cases.\r\n\t// http://compgeom.cs.uiuc.edu/~jeffe/teaching/373/notes/x06-sweepline.pdf\r\n\tsegmentsIntersect: function (/*Point*/ p, /*Point*/ p1, /*Point*/ p2, /*Point*/ p3) {\r\n\t\treturn\tthis._checkCounterclockwise(p, p2, p3) !==\r\n\t\t\t\tthis._checkCounterclockwise(p1, p2, p3) &&\r\n\t\t\t\tthis._checkCounterclockwise(p, p1, p2) !==\r\n\t\t\t\tthis._checkCounterclockwise(p, p1, p3);\r\n\t},\r\n\r\n\t// check to see if points are in counterclockwise order\r\n\t_checkCounterclockwise: function (/*Point*/ p, /*Point*/ p1, /*Point*/ p2) {\r\n\t\treturn (p2.y - p.y) * (p1.x - p.x) > (p1.y - p.y) * (p2.x - p.x);\r\n\t}\r\n});\r\n\r\nL.Polyline.include({\r\n\t// Check to see if this polyline has any linesegments that intersect.\r\n\t// NOTE: does not support detecting intersection for degenerate cases.\r\n\tintersects: function () {\r\n\t\tvar points = this._originalPoints,\r\n\t\t\tlen = points ? points.length : 0,\r\n\t\t\ti, p, p1;\r\n\r\n\t\tif (this._tooFewPointsForIntersection()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (i = len - 1; i >= 3; i--) {\r\n\t\t\tp = points[i - 1];\r\n\t\t\tp1 = points[i];\r\n\r\n\r\n\t\t\tif (this._lineSegmentsIntersectsRange(p, p1, i - 2)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t// Check for intersection if new latlng was added to this polyline.\r\n\t// NOTE: does not support detecting intersection for degenerate cases.\r\n\tnewLatLngIntersects: function (latlng, skipFirst) {\r\n\t\t// Cannot check a polyline for intersecting lats/lngs when not added to the map\r\n\t\tif (!this._map) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.newPointIntersects(this._map.latLngToLayerPoint(latlng), skipFirst);\r\n\t},\r\n\r\n\t// Check for intersection if new point was added to this polyline.\r\n\t// newPoint must be a layer point.\r\n\t// NOTE: does not support detecting intersection for degenerate cases.\r\n\tnewPointIntersects: function (newPoint, skipFirst) {\r\n\t\tvar points = this._originalPoints,\r\n\t\t\tlen = points ? points.length : 0,\r\n\t\t\tlastPoint = points ? points[len - 1] : null,\r\n\t\t\t// The previous previous line segment. Previous line segment doesn't need testing.\r\n\t\t\tmaxIndex = len - 2;\r\n\r\n\t\tif (this._tooFewPointsForIntersection(1)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._lineSegmentsIntersectsRange(lastPoint, newPoint, maxIndex, skipFirst ? 1 : 0);\r\n\t},\r\n\r\n\t// Polylines with 2 sides can only intersect in cases where points are collinear (we don't support detecting these).\r\n\t// Cannot have intersection when < 3 line segments (< 4 points)\r\n\t_tooFewPointsForIntersection: function (extraPoints) {\r\n\t\tvar points = this._originalPoints,\r\n\t\t\tlen = points ? points.length : 0;\r\n\t\t// Increment length by extraPoints if present\r\n\t\tlen += extraPoints || 0;\r\n\r\n\t\treturn !this._originalPoints || len <= 3;\r\n\t},\r\n\r\n\t// Checks a line segment intersections with any line segments before its predecessor.\r\n\t// Don't need to check the predecessor as will never intersect.\r\n\t_lineSegmentsIntersectsRange: function (p, p1, maxIndex, minIndex) {\r\n\t\tvar points = this._originalPoints,\r\n\t\t\tp2, p3;\r\n\r\n\t\tminIndex = minIndex || 0;\r\n\r\n\t\t// Check all previous line segments (beside the immediately previous) for intersections\r\n\t\tfor (var j = maxIndex; j > minIndex; j--) {\r\n\t\t\tp2 = points[j - 1];\r\n\t\t\tp3 = points[j];\r\n\r\n\t\t\tif (L.LineUtil.segmentsIntersect(p, p1, p2, p3)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n});\r\n\r\n\r\nL.Polygon.include({\r\n\t// Checks a polygon for any intersecting line segments. Ignores holes.\r\n\tintersects: function () {\r\n\t\tvar polylineIntersects,\r\n\t\t\tpoints = this._originalPoints,\r\n\t\t\tlen, firstPoint, lastPoint, maxIndex;\r\n\r\n\t\tif (this._tooFewPointsForIntersection()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tpolylineIntersects = L.Polyline.prototype.intersects.call(this);\r\n\r\n\t\t// If already found an intersection don't need to check for any more.\r\n\t\tif (polylineIntersects) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlen = points.length;\r\n\t\tfirstPoint = points[0];\r\n\t\tlastPoint = points[len - 1];\r\n\t\tmaxIndex = len - 2;\r\n\r\n\t\t// Check the line segment between last and first point. Don't need to check the first line segment (minIndex = 1)\r\n\t\treturn this._lineSegmentsIntersectsRange(lastPoint, firstPoint, maxIndex, 1);\r\n\t}\r\n});\r\n\r\nL.Control.Draw = L.Control.extend({\r\n\r\n\toptions: {\r\n\t\tposition: 'topleft',\r\n\t\tdraw: {},\r\n\t\tedit: false\r\n\t},\r\n\r\n\tinitialize: function (options) {\r\n\t\tif (L.version < '0.7') {\r\n\t\t\tthrow new Error('Leaflet.draw 0.2.3+ requires Leaflet 0.7.0+. Download latest from https://github.com/Leaflet/Leaflet/');\r\n\t\t}\r\n\r\n\t\tL.Control.prototype.initialize.call(this, options);\r\n\r\n\t\tvar id, toolbar;\r\n\r\n\t\tthis._toolbars = {};\r\n\r\n\t\t// Initialize toolbars\r\n\t\tif (L.DrawToolbar && this.options.draw) {\r\n\t\t\ttoolbar = new L.DrawToolbar(this.options.draw);\r\n\t\t\tid = L.stamp(toolbar);\r\n\t\t\tthis._toolbars[id] = toolbar;\r\n\r\n\t\t\t// Listen for when toolbar is enabled\r\n\t\t\tthis._toolbars[id].on('enable', this._toolbarEnabled, this);\r\n\t\t}\r\n\r\n\t\tif (L.EditToolbar && this.options.edit) {\r\n\t\t\ttoolbar = new L.EditToolbar(this.options.edit);\r\n\t\t\tid = L.stamp(toolbar);\r\n\t\t\tthis._toolbars[id] = toolbar;\r\n\r\n\t\t\t// Listen for when toolbar is enabled\r\n\t\t\tthis._toolbars[id].on('enable', this._toolbarEnabled, this);\r\n\t\t}\r\n\t},\r\n\r\n\tonAdd: function (map) {\r\n\t\tvar container = L.DomUtil.create('div', 'leaflet-draw'),\r\n\t\t\taddedTopClass = false,\r\n\t\t\ttopClassName = 'leaflet-draw-toolbar-top',\r\n\t\t\ttoolbarContainer;\r\n\r\n\t\tfor (var toolbarId in this._toolbars) {\r\n\t\t\tif (this._toolbars.hasOwnProperty(toolbarId)) {\r\n\t\t\t\ttoolbarContainer = this._toolbars[toolbarId].addToolbar(map);\r\n\r\n\t\t\t\tif (toolbarContainer) {\r\n\t\t\t\t\t// Add class to the first toolbar to remove the margin\r\n\t\t\t\t\tif (!addedTopClass) {\r\n\t\t\t\t\t\tif (!L.DomUtil.hasClass(toolbarContainer, topClassName)) {\r\n\t\t\t\t\t\t\tL.DomUtil.addClass(toolbarContainer.childNodes[0], topClassName);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\taddedTopClass = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontainer.appendChild(toolbarContainer);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn container;\r\n\t},\r\n\r\n\tonRemove: function () {\r\n\t\tfor (var toolbarId in this._toolbars) {\r\n\t\t\tif (this._toolbars.hasOwnProperty(toolbarId)) {\r\n\t\t\t\tthis._toolbars[toolbarId].removeToolbar();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tsetDrawingOptions: function (options) {\r\n\t\tfor (var toolbarId in this._toolbars) {\r\n\t\t\tif (this._toolbars[toolbarId] instanceof L.DrawToolbar) {\r\n\t\t\t\tthis._toolbars[toolbarId].setOptions(options);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_toolbarEnabled: function (e) {\r\n\t\tvar id = '' + L.stamp(e.target);\r\n\r\n\t\tfor (var toolbarId in this._toolbars) {\r\n\t\t\tif (this._toolbars.hasOwnProperty(toolbarId) && toolbarId !== id) {\r\n\t\t\t\tthis._toolbars[toolbarId].disable();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nL.Map.mergeOptions({\r\n\tdrawControlTooltips: true,\r\n\tdrawControl: false\r\n});\r\n\r\nL.Map.addInitHook(function () {\r\n\tif (this.options.drawControl) {\r\n\t\tthis.drawControl = new L.Control.Draw();\r\n\t\tthis.addControl(this.drawControl);\r\n\t}\r\n});\r\n\r\n\r\nL.Toolbar = L.Class.extend({\r\n\tincludes: [L.Mixin.Events],\r\n\r\n\tinitialize: function (options) {\r\n\t\tL.setOptions(this, options);\r\n\r\n\t\tthis._modes = {};\r\n\t\tthis._actionButtons = [];\r\n\t\tthis._activeMode = null;\r\n\t},\r\n\r\n\tenabled: function () {\r\n\t\treturn this._activeMode !== null;\r\n\t},\r\n\r\n\tdisable: function () {\r\n\t\tif (!this.enabled()) { return; }\r\n\r\n\t\tthis._activeMode.handler.disable();\r\n\t},\r\n\r\n\taddToolbar: function (map) {\r\n\t\tvar container = L.DomUtil.create('div', 'leaflet-draw-section'),\r\n\t\t\tbuttonIndex = 0,\r\n\t\t\tbuttonClassPrefix = this._toolbarClass || '',\r\n\t\t\tmodeHandlers = this.getModeHandlers(map),\r\n\t\t\ti;\r\n\r\n\t\tthis._toolbarContainer = L.DomUtil.create('div', 'leaflet-draw-toolbar leaflet-bar');\r\n\t\tthis._map = map;\r\n\r\n\t\tfor (i = 0; i < modeHandlers.length; i++) {\r\n\t\t\tif (modeHandlers[i].enabled) {\r\n\t\t\t\tthis._initModeHandler(\r\n\t\t\t\t\tmodeHandlers[i].handler,\r\n\t\t\t\t\tthis._toolbarContainer,\r\n\t\t\t\t\tbuttonIndex++,\r\n\t\t\t\t\tbuttonClassPrefix,\r\n\t\t\t\t\tmodeHandlers[i].title\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if no buttons were added, do not add the toolbar\r\n\t\tif (!buttonIndex) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Save button index of the last button, -1 as we would have ++ after the last button\r\n\t\tthis._lastButtonIndex = --buttonIndex;\r\n\r\n\t\t// Create empty actions part of the toolbar\r\n\t\tthis._actionsContainer = L.DomUtil.create('ul', 'leaflet-draw-actions');\r\n\r\n\t\t// Add draw and cancel containers to the control container\r\n\t\tcontainer.appendChild(this._toolbarContainer);\r\n\t\tcontainer.appendChild(this._actionsContainer);\r\n\r\n\t\treturn container;\r\n\t},\r\n\r\n\tremoveToolbar: function () {\r\n\t\t// Dispose each handler\r\n\t\tfor (var handlerId in this._modes) {\r\n\t\t\tif (this._modes.hasOwnProperty(handlerId)) {\r\n\t\t\t\t// Unbind handler button\r\n\t\t\t\tthis._disposeButton(\r\n\t\t\t\t\tthis._modes[handlerId].button,\r\n\t\t\t\t\tthis._modes[handlerId].handler.enable,\r\n\t\t\t\t\tthis._modes[handlerId].handler\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Make sure is disabled\r\n\t\t\t\tthis._modes[handlerId].handler.disable();\r\n\r\n\t\t\t\t// Unbind handler\r\n\t\t\t\tthis._modes[handlerId].handler\r\n\t\t\t\t\t.off('enabled', this._handlerActivated, this)\r\n\t\t\t\t\t.off('disabled', this._handlerDeactivated, this);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._modes = {};\r\n\r\n\t\t// Dispose the actions toolbar\r\n\t\tfor (var i = 0, l = this._actionButtons.length; i < l; i++) {\r\n\t\t\tthis._disposeButton(\r\n\t\t\t\tthis._actionButtons[i].button,\r\n\t\t\t\tthis._actionButtons[i].callback,\r\n\t\t\t\tthis\r\n\t\t\t);\r\n\t\t}\r\n\t\tthis._actionButtons = [];\r\n\t\tthis._actionsContainer = null;\r\n\t},\r\n\r\n\t_initModeHandler: function (handler, container, buttonIndex, classNamePredix, buttonTitle) {\r\n\t\tvar type = handler.type;\r\n\r\n\t\tthis._modes[type] = {};\r\n\r\n\t\tthis._modes[type].handler = handler;\r\n\r\n\t\tthis._modes[type].button = this._createButton({\r\n\t\t\ttitle: buttonTitle,\r\n\t\t\tclassName: classNamePredix + '-' + type,\r\n\t\t\tcontainer: container,\r\n\t\t\tcallback: this._modes[type].handler.enable,\r\n\t\t\tcontext: this._modes[type].handler\r\n\t\t});\r\n\r\n\t\tthis._modes[type].buttonIndex = buttonIndex;\r\n\r\n\t\tthis._modes[type].handler\r\n\t\t\t.on('enabled', this._handlerActivated, this)\r\n\t\t\t.on('disabled', this._handlerDeactivated, this);\r\n\t},\r\n\r\n\t_createButton: function (options) {\r\n\t\tvar link = L.DomUtil.create('a', options.className || '', options.container);\r\n\t\tlink.href = '#';\r\n\r\n\t\tif (options.text) {\r\n\t\t\tlink.innerHTML = options.text;\r\n\t\t}\r\n\r\n\t\tif (options.title) {\r\n\t\t\tlink.title = options.title;\r\n\t\t}\r\n\r\n\t\tL.DomEvent\r\n\t\t\t.on(link, 'click', L.DomEvent.stopPropagation)\r\n\t\t\t.on(link, 'mousedown', L.DomEvent.stopPropagation)\r\n\t\t\t.on(link, 'dblclick', L.DomEvent.stopPropagation)\r\n\t\t\t.on(link, 'click', L.DomEvent.preventDefault)\r\n\t\t\t.on(link, 'click', options.callback, options.context);\r\n\r\n\t\treturn link;\r\n\t},\r\n\r\n\t_disposeButton: function (button, callback) {\r\n\t\tL.DomEvent\r\n\t\t\t.off(button, 'click', L.DomEvent.stopPropagation)\r\n\t\t\t.off(button, 'mousedown', L.DomEvent.stopPropagation)\r\n\t\t\t.off(button, 'dblclick', L.DomEvent.stopPropagation)\r\n\t\t\t.off(button, 'click', L.DomEvent.preventDefault)\r\n\t\t\t.off(button, 'click', callback);\r\n\t},\r\n\r\n\t_handlerActivated: function (e) {\r\n\t\t// Disable active mode (if present)\r\n\t\tthis.disable();\r\n\r\n\t\t// Cache new active feature\r\n\t\tthis._activeMode = this._modes[e.handler];\r\n\r\n\t\tL.DomUtil.addClass(this._activeMode.button, 'leaflet-draw-toolbar-button-enabled');\r\n\r\n\t\tthis._showActionsToolbar();\r\n\r\n\t\tthis.fire('enable');\r\n\t},\r\n\r\n\t_handlerDeactivated: function () {\r\n\t\tthis._hideActionsToolbar();\r\n\r\n\t\tL.DomUtil.removeClass(this._activeMode.button, 'leaflet-draw-toolbar-button-enabled');\r\n\r\n\t\tthis._activeMode = null;\r\n\r\n\t\tthis.fire('disable');\r\n\t},\r\n\r\n\t_createActions: function (handler) {\r\n\t\tvar container = this._actionsContainer,\r\n\t\t\tbuttons = this.getActions(handler),\r\n\t\t\tl = buttons.length,\r\n\t\t\tli, di, dl, button;\r\n\r\n\t\t// Dispose the actions toolbar (todo: dispose only not used buttons)\r\n\t\tfor (di = 0, dl = this._actionButtons.length; di < dl; di++) {\r\n\t\t\tthis._disposeButton(this._actionButtons[di].button, this._actionButtons[di].callback);\r\n\t\t}\r\n\t\tthis._actionButtons = [];\r\n\r\n\t\t// Remove all old buttons\r\n\t\twhile (container.firstChild) {\r\n\t\t\tcontainer.removeChild(container.firstChild);\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\tif ('enabled' in buttons[i] && !buttons[i].enabled) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tli = L.DomUtil.create('li', '', container);\r\n\r\n\t\t\tbutton = this._createButton({\r\n\t\t\t\ttitle: buttons[i].title,\r\n\t\t\t\ttext: buttons[i].text,\r\n\t\t\t\tcontainer: li,\r\n\t\t\t\tcallback: buttons[i].callback,\r\n\t\t\t\tcontext: buttons[i].context\r\n\t\t\t});\r\n\r\n\t\t\tthis._actionButtons.push({\r\n\t\t\t\tbutton: button,\r\n\t\t\t\tcallback: buttons[i].callback\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t_showActionsToolbar: function () {\r\n\t\tvar buttonIndex = this._activeMode.buttonIndex,\r\n\t\t\tlastButtonIndex = this._lastButtonIndex,\r\n\t\t\ttoolbarPosition = this._activeMode.button.offsetTop - 1;\r\n\r\n\t\t// Recreate action buttons on every click\r\n\t\tthis._createActions(this._activeMode.handler);\r\n\r\n\t\t// Correctly position the cancel button\r\n\t\tthis._actionsContainer.style.top = toolbarPosition + 'px';\r\n\r\n\t\tif (buttonIndex === 0) {\r\n\t\t\tL.DomUtil.addClass(this._toolbarContainer, 'leaflet-draw-toolbar-notop');\r\n\t\t\tL.DomUtil.addClass(this._actionsContainer, 'leaflet-draw-actions-top');\r\n\t\t}\r\n\r\n\t\tif (buttonIndex === lastButtonIndex) {\r\n\t\t\tL.DomUtil.addClass(this._toolbarContainer, 'leaflet-draw-toolbar-nobottom');\r\n\t\t\tL.DomUtil.addClass(this._actionsContainer, 'leaflet-draw-actions-bottom');\r\n\t\t}\r\n\r\n\t\tthis._actionsContainer.style.display = 'block';\r\n\t},\r\n\r\n\t_hideActionsToolbar: function () {\r\n\t\tthis._actionsContainer.style.display = 'none';\r\n\r\n\t\tL.DomUtil.removeClass(this._toolbarContainer, 'leaflet-draw-toolbar-notop');\r\n\t\tL.DomUtil.removeClass(this._toolbarContainer, 'leaflet-draw-toolbar-nobottom');\r\n\t\tL.DomUtil.removeClass(this._actionsContainer, 'leaflet-draw-actions-top');\r\n\t\tL.DomUtil.removeClass(this._actionsContainer, 'leaflet-draw-actions-bottom');\r\n\t}\r\n});\r\n\r\n\r\nL.Tooltip = L.Class.extend({\r\n\tinitialize: function (map) {\r\n\t\tthis._map = map;\r\n\t\tthis._popupPane = map._panes.popupPane;\r\n\r\n\t\tthis._container = map.options.drawControlTooltips ? L.DomUtil.create('div', 'leaflet-draw-tooltip', this._popupPane) : null;\r\n\t\tthis._singleLineLabel = false;\r\n\t},\r\n\r\n\tdispose: function () {\r\n\t\tif (this._container) {\r\n\t\t\tthis._popupPane.removeChild(this._container);\r\n\t\t\tthis._container = null;\r\n\t\t}\r\n\t},\r\n\r\n\tupdateContent: function (labelText) {\r\n\t\tif (!this._container) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tlabelText.subtext = labelText.subtext || '';\r\n\r\n\t\t// update the vertical position (only if changed)\r\n\t\tif (labelText.subtext.length === 0 && !this._singleLineLabel) {\r\n\t\t\tL.DomUtil.addClass(this._container, 'leaflet-draw-tooltip-single');\r\n\t\t\tthis._singleLineLabel = true;\r\n\t\t}\r\n\t\telse if (labelText.subtext.length > 0 && this._singleLineLabel) {\r\n\t\t\tL.DomUtil.removeClass(this._container, 'leaflet-draw-tooltip-single');\r\n\t\t\tthis._singleLineLabel = false;\r\n\t\t}\r\n\r\n\t\tthis._container.innerHTML =\r\n\t\t\t(labelText.subtext.length > 0 ? '<span class=\"leaflet-draw-tooltip-subtext\">' + labelText.subtext + '</span>' + '<br />' : '') +\r\n\t\t\t'<span>' + labelText.text + '</span>';\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tupdatePosition: function (latlng) {\r\n\t\tvar pos = this._map.latLngToLayerPoint(latlng),\r\n\t\t\ttooltipContainer = this._container;\r\n\r\n\t\tif (this._container) {\r\n\t\t\ttooltipContainer.style.visibility = 'inherit';\r\n\t\t\tL.DomUtil.setPosition(tooltipContainer, pos);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tshowAsError: function () {\r\n\t\tif (this._container) {\r\n\t\t\tL.DomUtil.addClass(this._container, 'leaflet-error-draw-tooltip');\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\tremoveError: function () {\r\n\t\tif (this._container) {\r\n\t\t\tL.DomUtil.removeClass(this._container, 'leaflet-error-draw-tooltip');\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nL.DrawToolbar = L.Toolbar.extend({\r\n\r\n\toptions: {\r\n\t\tpolyline: {},\r\n\t\tpolygon: {},\r\n\t\trectangle: {},\r\n\t\tcircle: {},\r\n\t\tmarker: {}\r\n\t},\r\n\r\n\tinitialize: function (options) {\r\n\t\t// Ensure that the options are merged correctly since L.extend is only shallow\r\n\t\tfor (var type in this.options) {\r\n\t\t\tif (this.options.hasOwnProperty(type)) {\r\n\t\t\t\tif (options[type]) {\r\n\t\t\t\t\toptions[type] = L.extend({}, this.options[type], options[type]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._toolbarClass = 'leaflet-draw-draw';\r\n\t\tL.Toolbar.prototype.initialize.call(this, options);\r\n\t},\r\n\r\n\tgetModeHandlers: function (map) {\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tenabled: this.options.polyline,\r\n\t\t\t\thandler: new L.Draw.Polyline(map, this.options.polyline),\r\n\t\t\t\ttitle: L.drawLocal.draw.toolbar.buttons.polyline\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tenabled: this.options.polygon,\r\n\t\t\t\thandler: new L.Draw.Polygon(map, this.options.polygon),\r\n\t\t\t\ttitle: L.drawLocal.draw.toolbar.buttons.polygon\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tenabled: this.options.rectangle,\r\n\t\t\t\thandler: new L.Draw.Rectangle(map, this.options.rectangle),\r\n\t\t\t\ttitle: L.drawLocal.draw.toolbar.buttons.rectangle\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tenabled: this.options.circle,\r\n\t\t\t\thandler: new L.Draw.Circle(map, this.options.circle),\r\n\t\t\t\ttitle: L.drawLocal.draw.toolbar.buttons.circle\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tenabled: this.options.marker,\r\n\t\t\t\thandler: new L.Draw.Marker(map, this.options.marker),\r\n\t\t\t\ttitle: L.drawLocal.draw.toolbar.buttons.marker\r\n\t\t\t}\r\n\t\t];\r\n\t},\r\n\r\n\t// Get the actions part of the toolbar\r\n\tgetActions: function (handler) {\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tenabled: handler.deleteLastVertex,\r\n\t\t\t\ttitle: L.drawLocal.draw.toolbar.undo.title,\r\n\t\t\t\ttext: L.drawLocal.draw.toolbar.undo.text,\r\n\t\t\t\tcallback: handler.deleteLastVertex,\r\n\t\t\t\tcontext: handler\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: L.drawLocal.draw.toolbar.actions.title,\r\n\t\t\t\ttext: L.drawLocal.draw.toolbar.actions.text,\r\n\t\t\t\tcallback: this.disable,\r\n\t\t\t\tcontext: this\r\n\t\t\t}\r\n\t\t];\r\n\t},\r\n\r\n\tsetOptions: function (options) {\r\n\t\tL.setOptions(this, options);\r\n\r\n\t\tfor (var type in this._modes) {\r\n\t\t\tif (this._modes.hasOwnProperty(type) && options.hasOwnProperty(type)) {\r\n\t\t\t\tthis._modes[type].handler.setOptions(options[type]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\n/*L.Map.mergeOptions({\r\n\teditControl: true\r\n});*/\r\n\r\nL.EditToolbar = L.Toolbar.extend({\r\n\toptions: {\r\n\t\tedit: {\r\n\t\t\tselectedPathOptions: {\r\n\t\t\t\tcolor: '#fe57a1', /* Hot pink all the things! */\r\n\t\t\t\topacity: 0.6,\r\n\t\t\t\tdashArray: '10, 10',\r\n\r\n\t\t\t\tfill: true,\r\n\t\t\t\tfillColor: '#fe57a1',\r\n\t\t\t\tfillOpacity: 0.1\r\n\t\t\t}\r\n\t\t},\r\n\t\tremove: {},\r\n\t\tfeatureGroup: null /* REQUIRED! TODO: perhaps if not set then all layers on the map are selectable? */\r\n\t},\r\n\r\n\tinitialize: function (options) {\r\n\t\t// Need to set this manually since null is an acceptable value here\r\n\t\tif (options.edit) {\r\n\t\t\tif (typeof options.edit.selectedPathOptions === 'undefined') {\r\n\t\t\t\toptions.edit.selectedPathOptions = this.options.edit.selectedPathOptions;\r\n\t\t\t}\r\n\t\t\toptions.edit = L.extend({}, this.options.edit, options.edit);\r\n\t\t}\r\n\r\n\t\tif (options.remove) {\r\n\t\t\toptions.remove = L.extend({}, this.options.remove, options.remove);\r\n\t\t}\r\n\r\n\t\tthis._toolbarClass = 'leaflet-draw-edit';\r\n\t\tL.Toolbar.prototype.initialize.call(this, options);\r\n\r\n\t\tthis._selectedFeatureCount = 0;\r\n\t},\r\n\r\n\tgetModeHandlers: function (map) {\r\n\t\tvar featureGroup = this.options.featureGroup;\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\tenabled: this.options.edit,\r\n\t\t\t\thandler: new L.EditToolbar.Edit(map, {\r\n\t\t\t\t\tfeatureGroup: featureGroup,\r\n\t\t\t\t\tselectedPathOptions: this.options.edit.selectedPathOptions\r\n\t\t\t\t}),\r\n\t\t\t\ttitle: L.drawLocal.edit.toolbar.buttons.edit\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tenabled: this.options.remove,\r\n\t\t\t\thandler: new L.EditToolbar.Delete(map, {\r\n\t\t\t\t\tfeatureGroup: featureGroup\r\n\t\t\t\t}),\r\n\t\t\t\ttitle: L.drawLocal.edit.toolbar.buttons.remove\r\n\t\t\t}\r\n\t\t];\r\n\t},\r\n\r\n\tgetActions: function () {\r\n\t\treturn [\r\n\t\t\t{\r\n\t\t\t\ttitle: L.drawLocal.edit.toolbar.actions.save.title,\r\n\t\t\t\ttext: L.drawLocal.edit.toolbar.actions.save.text,\r\n\t\t\t\tcallback: this._save,\r\n\t\t\t\tcontext: this\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: L.drawLocal.edit.toolbar.actions.cancel.title,\r\n\t\t\t\ttext: L.drawLocal.edit.toolbar.actions.cancel.text,\r\n\t\t\t\tcallback: this.disable,\r\n\t\t\t\tcontext: this\r\n\t\t\t}\r\n\t\t];\r\n\t},\r\n\r\n\taddToolbar: function (map) {\r\n\t\tvar container = L.Toolbar.prototype.addToolbar.call(this, map);\r\n\r\n\t\tthis._checkDisabled();\r\n\r\n\t\tthis.options.featureGroup.on('layeradd layerremove', this._checkDisabled, this);\r\n\r\n\t\treturn container;\r\n\t},\r\n\r\n\tremoveToolbar: function () {\r\n\t\tthis.options.featureGroup.off('layeradd layerremove', this._checkDisabled, this);\r\n\r\n\t\tL.Toolbar.prototype.removeToolbar.call(this);\r\n\t},\r\n\r\n\tdisable: function () {\r\n\t\tif (!this.enabled()) { return; }\r\n\r\n\t\tthis._activeMode.handler.revertLayers();\r\n\r\n\t\tL.Toolbar.prototype.disable.call(this);\r\n\t},\r\n\r\n\t_save: function () {\r\n\t\tthis._activeMode.handler.save();\r\n\t\tthis._activeMode.handler.disable();\r\n\t},\r\n\r\n\t_checkDisabled: function () {\r\n\t\tvar featureGroup = this.options.featureGroup,\r\n\t\t\thasLayers = featureGroup.getLayers().length !== 0,\r\n\t\t\tbutton;\r\n\r\n\t\tif (this.options.edit) {\r\n\t\t\tbutton = this._modes[L.EditToolbar.Edit.TYPE].button;\r\n\r\n\t\t\tif (hasLayers) {\r\n\t\t\t\tL.DomUtil.removeClass(button, 'leaflet-disabled');\r\n\t\t\t} else {\r\n\t\t\t\tL.DomUtil.addClass(button, 'leaflet-disabled');\r\n\t\t\t}\r\n\r\n\t\t\tbutton.setAttribute(\r\n\t\t\t\t'title',\r\n\t\t\t\thasLayers ?\r\n\t\t\t\tL.drawLocal.edit.toolbar.buttons.edit\r\n\t\t\t\t: L.drawLocal.edit.toolbar.buttons.editDisabled\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (this.options.remove) {\r\n\t\t\tbutton = this._modes[L.EditToolbar.Delete.TYPE].button;\r\n\r\n\t\t\tif (hasLayers) {\r\n\t\t\t\tL.DomUtil.removeClass(button, 'leaflet-disabled');\r\n\t\t\t} else {\r\n\t\t\t\tL.DomUtil.addClass(button, 'leaflet-disabled');\r\n\t\t\t}\r\n\r\n\t\t\tbutton.setAttribute(\r\n\t\t\t\t'title',\r\n\t\t\t\thasLayers ?\r\n\t\t\t\tL.drawLocal.edit.toolbar.buttons.remove\r\n\t\t\t\t: L.drawLocal.edit.toolbar.buttons.removeDisabled\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\nL.EditToolbar.Edit = L.Handler.extend({\r\n\tstatics: {\r\n\t\tTYPE: 'edit'\r\n\t},\r\n\r\n\tincludes: L.Mixin.Events,\r\n\r\n\tinitialize: function (map, options) {\r\n\t\tL.Handler.prototype.initialize.call(this, map);\r\n\r\n\t\t// Set options to the default unless already set\r\n\t\tthis._selectedPathOptions = options.selectedPathOptions;\r\n\r\n\t\t// Store the selectable layer group for ease of access\r\n\t\tthis._featureGroup = options.featureGroup;\r\n\r\n\t\tif (!(this._featureGroup instanceof L.FeatureGroup)) {\r\n\t\t\tthrow new Error('options.featureGroup must be a L.FeatureGroup');\r\n\t\t}\r\n\r\n\t\tthis._uneditedLayerProps = {};\r\n\r\n\t\t// Save the type so super can fire, need to do this as cannot do this.TYPE :(\r\n\t\tthis.type = L.EditToolbar.Edit.TYPE;\r\n\t},\r\n\r\n\tenable: function () {\r\n\t\tif (this._enabled || !this._hasAvailableLayers()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.fire('enabled', {handler: this.type});\r\n\t\t\t//this disable other handlers\r\n\r\n\t\tthis._map.fire('draw:editstart', { handler: this.type });\r\n\t\t\t//allow drawLayer to be updated before beginning edition.\r\n\r\n\t\tL.Handler.prototype.enable.call(this);\r\n\t\tthis._featureGroup\r\n\t\t\t.on('layeradd', this._enableLayerEdit, this)\r\n\t\t\t.on('layerremove', this._disableLayerEdit, this);\r\n\t},\r\n\r\n\tdisable: function () {\r\n\t\tif (!this._enabled) { return; }\r\n\t\tthis._featureGroup\r\n\t\t\t.off('layeradd', this._enableLayerEdit, this)\r\n\t\t\t.off('layerremove', this._disableLayerEdit, this);\r\n\t\tL.Handler.prototype.disable.call(this);\r\n\t\tthis._map.fire('draw:editstop', { handler: this.type });\r\n\t\tthis.fire('disabled', {handler: this.type});\r\n\t},\r\n\r\n\taddHooks: function () {\r\n\t\tvar map = this._map;\r\n\r\n\t\tif (map) {\r\n\t\t\tmap.getContainer().focus();\r\n\r\n\t\t\tthis._featureGroup.eachLayer(this._enableLayerEdit, this);\r\n\r\n\t\t\tthis._tooltip = new L.Tooltip(this._map);\r\n\t\t\tthis._tooltip.updateContent({\r\n\t\t\t\ttext: L.drawLocal.edit.handlers.edit.tooltip.text,\r\n\t\t\t\tsubtext: L.drawLocal.edit.handlers.edit.tooltip.subtext\r\n\t\t\t});\r\n\r\n\t\t\tthis._map.on('mousemove', this._onMouseMove, this);\r\n\t\t}\r\n\t},\r\n\r\n\tremoveHooks: function () {\r\n\t\tif (this._map) {\r\n\t\t\t// Clean up selected layers.\r\n\t\t\tthis._featureGroup.eachLayer(this._disableLayerEdit, this);\r\n\r\n\t\t\t// Clear the backups of the original layers\r\n\t\t\tthis._uneditedLayerProps = {};\r\n\r\n\t\t\tthis._tooltip.dispose();\r\n\t\t\tthis._tooltip = null;\r\n\r\n\t\t\tthis._map.off('mousemove', this._onMouseMove, this);\r\n\t\t}\r\n\t},\r\n\r\n\trevertLayers: function () {\r\n\t\tthis._featureGroup.eachLayer(function (layer) {\r\n\t\t\tthis._revertLayer(layer);\r\n\t\t}, this);\r\n\t},\r\n\r\n\tsave: function () {\r\n\t\tvar editedLayers = new L.LayerGroup();\r\n\t\tthis._featureGroup.eachLayer(function (layer) {\r\n\t\t\tif (layer.edited) {\r\n\t\t\t\teditedLayers.addLayer(layer);\r\n\t\t\t\tlayer.edited = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis._map.fire('draw:edited', {layers: editedLayers});\r\n\t},\r\n\r\n\t_backupLayer: function (layer) {\r\n\t\tvar id = L.Util.stamp(layer);\r\n\r\n\t\tif (!this._uneditedLayerProps[id]) {\r\n\t\t\t// Polyline, Polygon or Rectangle\r\n\t\t\tif (layer instanceof L.Polyline || layer instanceof L.Polygon || layer instanceof L.Rectangle) {\r\n\t\t\t\tthis._uneditedLayerProps[id] = {\r\n\t\t\t\t\tlatlngs: L.LatLngUtil.cloneLatLngs(layer.getLatLngs())\r\n\t\t\t\t};\r\n\t\t\t} else if (layer instanceof L.Circle) {\r\n\t\t\t\tthis._uneditedLayerProps[id] = {\r\n\t\t\t\t\tlatlng: L.LatLngUtil.cloneLatLng(layer.getLatLng()),\r\n\t\t\t\t\tradius: layer.getRadius()\r\n\t\t\t\t};\r\n\t\t\t} else if (layer instanceof L.Marker) { // Marker\r\n\t\t\t\tthis._uneditedLayerProps[id] = {\r\n\t\t\t\t\tlatlng: L.LatLngUtil.cloneLatLng(layer.getLatLng())\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_revertLayer: function (layer) {\r\n\t\tvar id = L.Util.stamp(layer);\r\n\t\tlayer.edited = false;\r\n\t\tif (this._uneditedLayerProps.hasOwnProperty(id)) {\r\n\t\t\t// Polyline, Polygon or Rectangle\r\n\t\t\tif (layer instanceof L.Polyline || layer instanceof L.Polygon || layer instanceof L.Rectangle) {\r\n\t\t\t\tlayer.setLatLngs(this._uneditedLayerProps[id].latlngs);\r\n\t\t\t} else if (layer instanceof L.Circle) {\r\n\t\t\t\tlayer.setLatLng(this._uneditedLayerProps[id].latlng);\r\n\t\t\t\tlayer.setRadius(this._uneditedLayerProps[id].radius);\r\n\t\t\t} else if (layer instanceof L.Marker) { // Marker\r\n\t\t\t\tlayer.setLatLng(this._uneditedLayerProps[id].latlng);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_toggleMarkerHighlight: function (marker) {\r\n\t\tif (!marker._icon) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// This is quite naughty, but I don't see another way of doing it. (short of setting a new icon)\r\n\t\tvar icon = marker._icon;\r\n\r\n\t\ticon.style.display = 'none';\r\n\r\n\t\tif (L.DomUtil.hasClass(icon, 'leaflet-edit-marker-selected')) {\r\n\t\t\tL.DomUtil.removeClass(icon, 'leaflet-edit-marker-selected');\r\n\t\t\t// Offset as the border will make the icon move.\r\n\t\t\tthis._offsetMarker(icon, -4);\r\n\r\n\t\t} else {\r\n\t\t\tL.DomUtil.addClass(icon, 'leaflet-edit-marker-selected');\r\n\t\t\t// Offset as the border will make the icon move.\r\n\t\t\tthis._offsetMarker(icon, 4);\r\n\t\t}\r\n\r\n\t\ticon.style.display = '';\r\n\t},\r\n\r\n\t_offsetMarker: function (icon, offset) {\r\n\t\tvar iconMarginTop = parseInt(icon.style.marginTop, 10) - offset,\r\n\t\t\ticonMarginLeft = parseInt(icon.style.marginLeft, 10) - offset;\r\n\r\n\t\ticon.style.marginTop = iconMarginTop + 'px';\r\n\t\ticon.style.marginLeft = iconMarginLeft + 'px';\r\n\t},\r\n\r\n\t_enableLayerEdit: function (e) {\r\n\t\tvar layer = e.layer || e.target || e,\r\n\t\t\tisMarker = layer instanceof L.Marker,\r\n\t\t\tpathOptions;\r\n\r\n\t\t// Don't do anything if this layer is a marker but doesn't have an icon. Markers\r\n\t\t// should usually have icons. If using Leaflet.draw with Leafler.markercluster there\r\n\t\t// is a chance that a marker doesn't.\r\n\t\tif (isMarker && !layer._icon) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Back up this layer (if haven't before)\r\n\t\tthis._backupLayer(layer);\r\n\r\n\t\t// Update layer style so appears editable\r\n\t\tif (this._selectedPathOptions) {\r\n\t\t\tpathOptions = L.Util.extend({}, this._selectedPathOptions);\r\n\r\n\t\t\tif (isMarker) {\r\n\t\t\t\tthis._toggleMarkerHighlight(layer);\r\n\t\t\t} else {\r\n\t\t\t\tlayer.options.previousOptions = L.Util.extend({ dashArray: null }, layer.options);\r\n\r\n\t\t\t\t// Make sure that Polylines are not filled\r\n\t\t\t\tif (!(layer instanceof L.Circle) && !(layer instanceof L.Polygon) && !(layer instanceof L.Rectangle)) {\r\n\t\t\t\t\tpathOptions.fill = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlayer.setStyle(pathOptions);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isMarker) {\r\n\t\t\tlayer.dragging.enable();\r\n\t\t\tlayer.on('dragend', this._onMarkerDragEnd);\r\n\t\t} else {\r\n\t\t\tlayer.editing.enable();\r\n\t\t}\r\n\t},\r\n\r\n\t_disableLayerEdit: function (e) {\r\n\t\tvar layer = e.layer || e.target || e;\r\n\t\tlayer.edited = false;\r\n\r\n\t\t// Reset layer styles to that of before select\r\n\t\tif (this._selectedPathOptions) {\r\n\t\t\tif (layer instanceof L.Marker) {\r\n\t\t\t\tthis._toggleMarkerHighlight(layer);\r\n\t\t\t} else {\r\n\t\t\t\t// reset the layer style to what is was before being selected\r\n\t\t\t\tlayer.setStyle(layer.options.previousOptions);\r\n\t\t\t\t// remove the cached options for the layer object\r\n\t\t\t\tdelete layer.options.previousOptions;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (layer instanceof L.Marker) {\r\n\t\t\tlayer.dragging.disable();\r\n\t\t\tlayer.off('dragend', this._onMarkerDragEnd, this);\r\n\t\t} else {\r\n\t\t\tlayer.editing.disable();\r\n\t\t}\r\n\t},\r\n\r\n\t_onMarkerDragEnd: function (e) {\r\n\t\tvar layer = e.target;\r\n\t\tlayer.edited = true;\r\n\t},\r\n\r\n\t_onMouseMove: function (e) {\r\n\t\tthis._tooltip.updatePosition(e.latlng);\r\n\t},\r\n\r\n\t_hasAvailableLayers: function () {\r\n\t\treturn this._featureGroup.getLayers().length !== 0;\r\n\t}\r\n});\r\n\r\n\r\nL.EditToolbar.Delete = L.Handler.extend({\r\n\tstatics: {\r\n\t\tTYPE: 'remove' // not delete as delete is reserved in js\r\n\t},\r\n\r\n\tincludes: L.Mixin.Events,\r\n\r\n\tinitialize: function (map, options) {\r\n\t\tL.Handler.prototype.initialize.call(this, map);\r\n\r\n\t\tL.Util.setOptions(this, options);\r\n\r\n\t\t// Store the selectable layer group for ease of access\r\n\t\tthis._deletableLayers = this.options.featureGroup;\r\n\r\n\t\tif (!(this._deletableLayers instanceof L.FeatureGroup)) {\r\n\t\t\tthrow new Error('options.featureGroup must be a L.FeatureGroup');\r\n\t\t}\r\n\r\n\t\t// Save the type so super can fire, need to do this as cannot do this.TYPE :(\r\n\t\tthis.type = L.EditToolbar.Delete.TYPE;\r\n\t},\r\n\r\n\tenable: function () {\r\n\t\tif (this._enabled || !this._hasAvailableLayers()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.fire('enabled', { handler: this.type});\r\n\r\n\t\tthis._map.fire('draw:deletestart', { handler: this.type });\r\n\r\n\t\tL.Handler.prototype.enable.call(this);\r\n\r\n\t\tthis._deletableLayers\r\n\t\t\t.on('layeradd', this._enableLayerDelete, this)\r\n\t\t\t.on('layerremove', this._disableLayerDelete, this);\r\n\t},\r\n\r\n\tdisable: function () {\r\n\t\tif (!this._enabled) { return; }\r\n\r\n\t\tthis._deletableLayers\r\n\t\t\t.off('layeradd', this._enableLayerDelete, this)\r\n\t\t\t.off('layerremove', this._disableLayerDelete, this);\r\n\r\n\t\tL.Handler.prototype.disable.call(this);\r\n\r\n\t\tthis._map.fire('draw:deletestop', { handler: this.type });\r\n\r\n\t\tthis.fire('disabled', { handler: this.type});\r\n\t},\r\n\r\n\taddHooks: function () {\r\n\t\tvar map = this._map;\r\n\r\n\t\tif (map) {\r\n\t\t\tmap.getContainer().focus();\r\n\r\n\t\t\tthis._deletableLayers.eachLayer(this._enableLayerDelete, this);\r\n\t\t\tthis._deletedLayers = new L.layerGroup();\r\n\r\n\t\t\tthis._tooltip = new L.Tooltip(this._map);\r\n\t\t\tthis._tooltip.updateContent({ text: L.drawLocal.edit.handlers.remove.tooltip.text });\r\n\r\n\t\t\tthis._map.on('mousemove', this._onMouseMove, this);\r\n\t\t}\r\n\t},\r\n\r\n\tremoveHooks: function () {\r\n\t\tif (this._map) {\r\n\t\t\tthis._deletableLayers.eachLayer(this._disableLayerDelete, this);\r\n\t\t\tthis._deletedLayers = null;\r\n\r\n\t\t\tthis._tooltip.dispose();\r\n\t\t\tthis._tooltip = null;\r\n\r\n\t\t\tthis._map.off('mousemove', this._onMouseMove, this);\r\n\t\t}\r\n\t},\r\n\r\n\trevertLayers: function () {\r\n\t\t// Iterate of the deleted layers and add them back into the featureGroup\r\n\t\tthis._deletedLayers.eachLayer(function (layer) {\r\n\t\t\tthis._deletableLayers.addLayer(layer);\r\n\t\t}, this);\r\n\t},\r\n\r\n\tsave: function () {\r\n\t\tthis._map.fire('draw:deleted', { layers: this._deletedLayers });\r\n\t},\r\n\r\n\t_enableLayerDelete: function (e) {\r\n\t\tvar layer = e.layer || e.target || e;\r\n\r\n\t\tlayer.on('click', this._removeLayer, this);\r\n\t},\r\n\r\n\t_disableLayerDelete: function (e) {\r\n\t\tvar layer = e.layer || e.target || e;\r\n\r\n\t\tlayer.off('click', this._removeLayer, this);\r\n\r\n\t\t// Remove from the deleted layers so we can't accidently revert if the user presses cancel\r\n\t\tthis._deletedLayers.removeLayer(layer);\r\n\t},\r\n\r\n\t_removeLayer: function (e) {\r\n\t\tvar layer = e.layer || e.target || e;\r\n\r\n\t\tthis._deletableLayers.removeLayer(layer);\r\n\r\n\t\tthis._deletedLayers.addLayer(layer);\r\n\t},\r\n\r\n\t_onMouseMove: function (e) {\r\n\t\tthis._tooltip.updatePosition(e.latlng);\r\n\t},\r\n\r\n\t_hasAvailableLayers: function () {\r\n\t\treturn this._deletableLayers.getLayers().length !== 0;\r\n\t}\r\n});\r\n\r\n\r\n}(window, document));\n\n//# sourceURL=webpack:///./lib/draw/leaflet.draw-src.js?");

/***/ }),

/***/ "./lib/hashchange.js":
/*!***************************!*\
  !*** ./lib/hashchange.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * Hashchange Event Polyfill\r\n */\r\n\r\n(function() {\r\n\r\n\twindow.HashChangeEvent = (function() {\r\n\t\tvar ret = function(oldURL, newURL) {\r\n\t\t\tthis.oldURL = oldURL;\r\n\t\t\tthis.newURL = newURL;\r\n\t\t\tthis.timeStamp = (new Date()).getTime();\r\n\t\t};\r\n\t\tret.prototype = {\r\n\t\t\tbubbles: false,\r\n\t\t\tcancelable: false,\r\n\t\t\tcurrentTarget: null,\r\n\t\t\tdefaultPrevented: false,\r\n\t\t\treturnValue: true,\r\n\t\t\tsrcElement: null,\r\n\t\t\ttarget: null,\r\n\t\t\ttimeStamp: null,\r\n\t\t\ttype: 'hashchange'\r\n\t\t};\r\n\t\treturn ret;\r\n\t}());\r\n\r\n\tvar fix = {\r\n\r\n\t\t// Bound event listeners\r\n\t\tlisteners: {\r\n\t\t\tfuncs: [ ],\r\n\t\t\tremove: function(func) {\r\n\t\t\t\tvar arr = [ ];\r\n\t\t\t\tfor (var i = 0, c = fix.listeners.funcs.length; i < c; i++) {\r\n\t\t\t\t\tif (fix.listeners.funcs[i] !== func) {\r\n\t\t\t\t\t\tarr.push(fix.listeners.funcs[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfix.listeners.funcs = arr;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Start the poller\r\n\t\tinit: function() {\r\n\t\t\t// Get the starting hash\r\n\t\t\tfix.lastHash = fix.getHash();\r\n\t\t\tfix.lastLocation = String(location);\r\n\t\t\t// Patch addEventListener\r\n\t\t\tif (window.addEventListener) {\r\n\t\t\t\tvar nativeAEL = window.addEventListener;\r\n\t\t\t\twindow.addEventListener = function(evt, func) {\r\n\t\t\t\t\tif (evt === 'hashchange') {\r\n\t\t\t\t\t\tfix.listeners.funcs.push(func);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn nativeAEL.apply(window, arguments);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t// Patch attachEvent\r\n\t\t\tif (window.attachEvent) {\r\n\t\t\t\tvar nativeAE = window.attachEvent;\r\n\t\t\t\twindow.attachEvent = function(evt, func) {\r\n\t\t\t\t\tif (evt === 'onhashchange') {\r\n\t\t\t\t\t\tfix.listeners.funcs.push(func);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn nativeAE.apply(window, arguments);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t// Start polling\r\n\t\t\tfix.setTimeout();\r\n\t\t},\r\n\r\n\t\t// The previous hash value\r\n\t\tlastHash: null,\r\n\t\tlastLocation: null,\r\n\r\n\t\t// The number of miliseconds between pollings\r\n\t\tpollerRate: 50,\r\n\r\n\t\t// Read the hash value from the URL\r\n\t\tgetHash: function() {\r\n\t\t\treturn location.hash.slice(1);\r\n\t\t},\r\n\r\n\t\t// Sets the next interval for the timer\r\n\t\tsetTimeout: function() {\r\n\t\t\twindow.setTimeout(fix.pollerInterval, fix.pollerRate);\r\n\t\t},\r\n\r\n\t\t// Creates a new hashchange event object\r\n\t\tcreateEventObject: function(oldURL, newURL) {\r\n\t\t\treturn new window.HashChangeEvent(oldURL, newURL);\r\n\t\t},\r\n\r\n\t\t// Runs on an interval testing the hash\r\n\t\tpollerInterval: function() {\r\n\t\t\tvar hash = fix.getHash();\r\n\t\t\tif (hash !== fix.lastHash) {\r\n\t\t\t\tvar funcs = fix.listeners.funcs.slice(0);\r\n\t\t\t\tif (typeof window.onhashchange === 'function') {\r\n\t\t\t\t\tfuncs.push(window.onhashchange);\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = 0, c = funcs.length; i < c; i++) {\r\n\t\t\t\t\tvar evt = fix.createEventObject({\r\n\t\t\t\t\t\toldURL: fix.lastLocation,\r\n\t\t\t\t\t\tnewURL: String(location)\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tfix.lastHash = fix.getHash();\r\n\t\t\t\tfix.lastLocation = String(location);\r\n\t\t\t}\r\n\t\t\tfix.setTimeout();\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfix.init();\r\n\r\n}());\r\n\n\n//# sourceURL=webpack:///./lib/hashchange.js?");

/***/ }),

/***/ "./lib/queue.js":
/*!**********************!*\
  !*** ./lib/queue.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function() {\r\n  if (false) {}\r\n  else module.exports = queue;\r\n  queue.version = \"1.0.4\";\r\n\r\n  var slice = [].slice;\r\n\r\n  function queue(parallelism) {\r\n    var q,\r\n        tasks = [],\r\n        started = 0, // number of tasks that have been started (and perhaps finished)\r\n        active = 0, // number of tasks currently being executed (started but not finished)\r\n        remaining = 0, // number of tasks not yet finished\r\n        popping, // inside a synchronous task callback?\r\n        error = null,\r\n        await = noop,\r\n        all;\r\n\r\n    if (!parallelism) parallelism = Infinity;\r\n\r\n    function pop() {\r\n      while (popping = started < tasks.length && active < parallelism) {\r\n        var i = started++,\r\n            t = tasks[i],\r\n            a = slice.call(t, 1);\r\n        a.push(callback(i));\r\n        ++active;\r\n        t[0].apply(null, a);\r\n      }\r\n    }\r\n\r\n    function callback(i) {\r\n      return function(e, r) {\r\n        --active;\r\n        if (error != null) return;\r\n        if (e != null) {\r\n          error = e; // ignore new tasks and squelch active callbacks\r\n          started = remaining = NaN; // stop queued tasks from starting\r\n          notify();\r\n        } else {\r\n          tasks[i] = r;\r\n          if (--remaining) popping || pop();\r\n          else notify();\r\n        }\r\n      };\r\n    }\r\n\r\n    function notify() {\r\n      if (error != null) await(error);\r\n      else if (all) await(error, tasks);\r\n      else await.apply(null, [error].concat(tasks));\r\n    }\r\n\r\n    return q = {\r\n      defer: function() {\r\n        if (!error) {\r\n          tasks.push(arguments);\r\n          ++remaining;\r\n          pop();\r\n        }\r\n        return q;\r\n      },\r\n      await: function(f) {\r\n        await = f;\r\n        all = false;\r\n        if (!remaining) notify();\r\n        return q;\r\n      },\r\n      awaitAll: function(f) {\r\n        await = f;\r\n        all = true;\r\n        if (!remaining) notify();\r\n        return q;\r\n      }\r\n    };\r\n  }\r\n\r\n  function noop() {}\r\n})();\r\n\n\n//# sourceURL=webpack:///./lib/queue.js?");

/***/ }),

/***/ "./node_modules/_base64-js@1.5.1@base64-js/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/_base64-js@1.5.1@base64-js/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack:///./node_modules/_base64-js@1.5.1@base64-js/index.js?");

/***/ }),

/***/ "./node_modules/_buffer@4.9.2@buffer/index.js":
/*!****************************************************!*\
  !*** ./node_modules/_buffer@4.9.2@buffer/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/_base64-js@1.5.1@base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/_ieee754@1.2.1@ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/_isarray@1.0.0@isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../_webpack@4.46.0@webpack/buildin/global.js */ \"./node_modules/_webpack@4.46.0@webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/_buffer@4.9.2@buffer/index.js?");

/***/ }),

/***/ "./node_modules/_ieee754@1.2.1@ieee754/index.js":
/*!******************************************************!*\
  !*** ./node_modules/_ieee754@1.2.1@ieee754/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack:///./node_modules/_ieee754@1.2.1@ieee754/index.js?");

/***/ }),

/***/ "./node_modules/_isarray@1.0.0@isarray/index.js":
/*!******************************************************!*\
  !*** ./node_modules/_isarray@1.0.0@isarray/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/_isarray@1.0.0@isarray/index.js?");

/***/ }),

/***/ "./node_modules/_webpack@4.46.0@webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ 0:
/*!********************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** multi /dist/d3.js /lib/hashchange.js /lib/blob.js /lib/base64.js /lib/bucket.js /lib/queue.js /lib/d3.keybinding.js /lib/d3.trigger.js /lib/d3-compat.js /lib/draw/leaflet.draw-src.js /lib/drag/leaflet.drag.js /lib/codemirror/lib/codemirror.js /lib/codemirror/mode/javascript/javascript.js ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! /dist/d3.js */\"./dist/d3.js\");\n__webpack_require__(/*! /lib/hashchange.js */\"./lib/hashchange.js\");\n__webpack_require__(/*! /lib/blob.js */\"./lib/blob.js\");\n__webpack_require__(/*! /lib/base64.js */\"./lib/base64.js\");\n__webpack_require__(/*! /lib/bucket.js */\"./lib/bucket.js\");\n__webpack_require__(/*! /lib/queue.js */\"./lib/queue.js\");\n__webpack_require__(/*! /lib/d3.keybinding.js */\"./lib/d3.keybinding.js\");\n__webpack_require__(/*! /lib/d3.trigger.js */\"./lib/d3.trigger.js\");\n__webpack_require__(/*! /lib/d3-compat.js */\"./lib/d3-compat.js\");\n__webpack_require__(/*! /lib/draw/leaflet.draw-src.js */\"./lib/draw/leaflet.draw-src.js\");\n__webpack_require__(/*! /lib/drag/leaflet.drag.js */\"./lib/drag/leaflet.drag.js\");\n__webpack_require__(/*! /lib/codemirror/lib/codemirror.js */\"./lib/codemirror/lib/codemirror.js\");\nmodule.exports = __webpack_require__(/*! /lib/codemirror/mode/javascript/javascript.js */\"./lib/codemirror/mode/javascript/javascript.js\");\n\n\n//# sourceURL=webpack:///multi_/dist/d3.js_/lib/hashchange.js_/lib/blob.js_/lib/base64.js_/lib/bucket.js_/lib/queue.js_/lib/d3.keybinding.js_/lib/d3.trigger.js_/lib/d3-compat.js_/lib/draw/leaflet.draw-src.js_/lib/drag/leaflet.drag.js_/lib/codemirror/lib/codemirror.js_/lib/codemirror/mode/javascript/javascript.js?");

/***/ })

/******/ });